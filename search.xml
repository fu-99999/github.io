<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>WLK猎人打地鼠WA带语音提醒</title>
      <link href="/posts/60ce4f0/"/>
      <url>/posts/60ce4f0/</url>
      
        <content type="html"><![CDATA[<h3 id="WA说明"><a href="#WA说明" class="headerlink" title="WA说明"></a>WA说明</h3><p>转自NGA WLK猎手大厅区，哪个技能亮了按哪个即可 </p><p>杀戮射击：在20%血并且技能可用时显示并加入循环<br>毒蛇钉刺：3s以下显示，并显示持续时间，dot消失前加入循环<br>爆炸射击：dot显示，在荷枪实弹时三连 或 分开都可<br>瞄准&#x2F;多重：根据学会的技能自动切换<br>爆炸陷阱： dot显示，7码内显示并涂红，5码内显示正常颜色，超出7码隐藏<br>结尾附带修改LR远程武器攻击声音改消音M24特效</p><ul><li><p>效果图<br><img src="/img/article/2024_07/0718/06.gif"></p></li><li><p>技能提示WA</p><details class="folding-tag" ><summary> WA </summary>              <div class='content'>              <p>!WA:2!S33c4Xr15HYibbYMMgSdyahsYIcq0ILK337kxeKvRwzjB9IvRSXaj7o7UJ0m2R2DyMrYwofFnoeWKqcGtcqijLeDj000qCIipiaHK620BB69(1t99R9BB)U3VEV8HKTtBtAPVUP52Y9)CoZ7h7Usw24Cd(dgn7m)N)Z)5)8)68FEmmtVXz3y5nkNnwpj7jYglF0BqAHXNEAzofgP55KKfQv99UKq1PRjnlRc8JnTeCBjUmZZvvrUWRXwTeFnPbLyNLl3cICfNmD2mzg7ySvfOGhV)zzfQoy)kWl7VATQCNS8CsK3Kh)ijzUs1Qww(iCSYeeGEBNaF7KksCvNrH)sZkRWkPmiYh6TH(1qVD0Vo833XLwCAHQcY82FC45ekV0StF7cZMksU9nWUcpNufXRLxrruEBBDR7NDMA9iuBRhCYKvdvDgU(3AOyIBeQEfPAvQWvonVqLYq1EhIBkvfrE2UhxetNY(7CO5QQWjfyj6F7oDnjUtOEF)sCS7t8Yv)vwo5AZbChznq7FUPNEPI1KkZjLUwLAs7GHHP9fPpit5z4e3WK39CSsC(hCUkv8VBEbfUIYCZcm(IH6jypHIUO8CfZYndMo8jXwIqqX7hA9k(qxUp0g8TOsTsQ9tx28)(QOEsHdYDjhBgPAZjom0afVEbm1mnBjUTka)wERLQWklJVnppHq7PyfXtwKT0(klvtKsPT3E7t0EWEI9AKYwLTYUO1YdwKwh8lr77NOgaqX0zglxMSNG(kQ8ZBv6aQcslnnw(a6tzvyBViUFy4boME3qrGmMwygFlILeeiTqFVcfr9RsrIxE)veo4bzLk7pxTAvueevzQdxfWF7Diuw8QPCC)toliVKtqu2piN6F3JSZtYoNcqMQDM(6Vsn2YdwuHTciaVPSZohGnFzj8JnH(n81VmW6O3iYvICtzo5sI9Ng6Ov4k7V4c(x(t8Po935J1DkEHzLz9PjEvDg2EcLizpLQn7wbyl3JiV4TQiuUVirIgozSWjpIIKWmZamXnFJhdOv6p8jPEZ9FeOcRuz4YY(q(YYckjH7FoOBUOyf2f4KYYHv4koehBff(flZveeSW6lsdLzKjgCQrEfqoHaYKWleoWs5tNAYC5NmxQS50F1esCWRYo5ezgzKSvHEezFlkrKTWyklrCjRCjGZ0(XK5QmnPNf1vrQmDrHzfRjPSX5V47zJL(IB7O9dGRurOk0DpvUrgESmavjZQG1U54pPmpB5A7FpubGR9IqVf0L(A7JJtmfMTQKfBbGhnfAxskChakdNy8H1erVRuLld9u31UbnRua6KVRjQTFojYTJYvwG9UOpfFnc6wBdD9GGVAfE70kS9S7xOScFkXnoNmxAqIbEv1rRvgQxUcIxEP5KvQnBoOMNsSm8i0qOap4sumyOM2pi4uRq)yTKcOi(EnvkD3sSIaQ4eVI0JKA0jYnE)JKk9otnWadNB4DL5KLuRTj3VGixbjHQyLtoEuVZlDqW8h0)2g6wWYvO(WxpgqG5RcDps8OB(gr)gXxAGmPYn0ohB4TpuUcfhAkSAvHItouQrtnwHIYcvNPchQcAB6fMi6waL6x)gr9FJfPnT2ogPdhBHv8kNyKu7jt28zZS9mJLFGHNmv)JKzau6JUj0DJKq7aTtXnGXZmCqxPqPj5RT)XRw4KGiCLjXsKJbckmiXd02YtpxvIbOojiVl)90tpb85h(xLAGqJFGtY6Vp)6DB9SDoLbGN1jwyopx157rOSz4jgfSxaQTUoX4QhrWWyvfArixeMwTqk8CvjpXaBSyt2a2cz75LMEMuQVsNoun4ObO(na(RwtX)uGAxQPNgKtbUD6AZwKvPZoOQHDeWADJ)NwnRvt3zh1QvQBYt74dQdjx1YUwH4klZbeKvK7SdWv3mCkUvh02IGCMQCZUaux4sLMTAkffWcPoX1LFduag)WanmTiUbILkWYpaYQtmJqR(yRw2uRBAjbOXuzbTMiPU60Dy5WpZaqhTlZ8VqwEJz(LR8oIKW2MKtHuvDsWsaNGjXbkTv9RinhNpZ4YNPxonBfzoF434Zh1uPS4HuvBi(1gESTNF3JNDKb8BrzkZyeDj)UQHP9uWe82ZKlF6Hsn22nEAQraJfA)au51FXuJT9HgFYCOj8TevxMeNeAiTFXluMdjIgdn(jXATYAQOfoIwGvBmeAq02pM(B2mdAaFsZvL0WYQimlxzsr1nruan0IuXC)JuBgiMkr0iOrpPfdcVIm5pA2sjwEa)5L2xbXnGdlzEUCu)yytJFTl6itdHvHJc5Ae3qzb5saJMlVunfcbYGU4Bu8QfMPkehLQBzs4KzKKQjbMYUKc9JlU4LpOKWb9FBZXwgh4G)C5qxwC0B1EqFOl3Xt2GJNKd11j0SmJJ7IV4Sc4AJFrS59jjo4yq9WGsUTNPFzfoXjU4G9emgk)LeEwbGGVvXWP5zHOvWIWQsS1MM8dIBtz)7heT9dEeXpUeHz2t49XTWX0TfeEw2d0o4AxcJgjG)naexrH(X(HfVYtFFFZt9mV4kh9jw5XE8ZC4hELN4tU8l8mqaotZcXN0(8q93vMQSfRa1Fn)4Uc)tJdySMiBjbLf8xRQFIMMFQUDpO8TJEKLmP8H8vuP2myxhF6cOpJ47zLh)lEQp3xFLV4dS8d)Xw5Z8qlF8Vh9NR8eV8PE6xa94fWv5wBsvQziWsT(kwnpaDepjTo34Yp8hFLhZE9CeTEf(IeXdUcf55eMHxjL41bcoyRwy)05PJ)iVyES8B(YlaSnHs8IVpVHruIRKaoG12pY(HyfXUTpYUvVbcyeDvIxHwDJl9acY4gBzEX3LR4KEd6qO2yweIIIR8UXryCF)AOTG6sAVGUPW0laQ9dM7vWHnGh8tjce9Nc(5XamxTmw1ilaZyd0)bRvBwMSeoedARTVKPQu8QO(R0g9r3(hzUdarWkRbeoI(RUT3(bqHJJ(Sfqpkd6lua1rC077grID4Z3Xkxlp1wbpDecfP(rrjq3gQm69I8NTKwa(mhXqN8628Mq(ojeRiEyayH6QLrBCPKZZTVKZT3rLVT0ORaDLO2FVOGOqh9ga2a((l2h6BdigIUBTRBUXLgosXWHMNF6m32GKkzt)vIxLJW5hqcmYiDIj5KeXH5I9nV4KkqG2lawOue3qMdiwPMmad(NDpa8On54rDpPcmyIRhgP3SCsSKNAfMusLyRsU9KPWgk1X1704NJIhYGT6mhiuHH7KwEYI9xb4LPadn7x8YvTp2n83Q7JtX)r2PqLky0GUws4MO3n69G7DqxNpsVP647ir3IUHlbDJO3pQt9rLbbSIUjESWhQ73kibHTDbDmqCQOW(qrrXqXBh6VZI6DqASIOB2iOt1aqt6dLAZquJ(qPVFWfb0VKb75aIgEyCyHyNay)mGRi0K4XyHUASDuCu7hTluBJ8wq7HhSKJEaSfBqm4QjYxRzXG7SagZOpgp6HUeupd9dh4IUO)tV(R)Vsyjj)y7sQATr5aZm8GPmEOxNtcm3GnJsC(1po482WgTExR8GFQLFPd)Qp)NC5p6ZDMh)zx()834mp1ZTYd)iy7nydulkJfTjH2A24KjWGIdLLyemF7fNNTYCCY3XXE1N)fbioZd8WfXa(zok(pV637rkE6pYdTYN94fbtON(4Fb0JiUbIJ3jXvc2LrvoOAGX0xbcNe9P5rFMtGRQ79tDMd)GR8X)DqpE77c9hvaiK)ymX9J5r)jKwXnFMJDuaJV6Z)vx(O)UfRjl7hBI((EMtDevdON(h85o9x6Hw5X((R8CFMx9LEILFOhZ)YpZrw(HFOLF2hH0mp501aRayJiZcUHnAPxoflyCslh1y)RDQJE)N6ip)YFJ7B5h4fJgjkbhhPiyMsg)lTIFmky4hr9re5vFXpkW1oZ9FSZ8Ip6P(6p7p7LEOx95)e0NqH9mF2V7zEIVj4Nz5h(rXO)Z(vi4g9J0rArArrpopgJx3kpXXx(rEML)8FLZ87(eV6l(aRCVFLvE8VdfJlFVpWkp7ls7gheCtuDayq58gis99pEb0tXJ(sd9bs)6)hfUOl6dGcpn6)Db0FE7O)Bfq)iE0)JcO)Yce1LVdwHQDuHcONHhuPogoAasofyq5h6daIGV(R)6)uIwgySdBAAJlLyEH9U3O3(Gv5ZHoodv9e0)kxa9CTHv)UoqDZh65p6viEnyHY8kMCJiR5g5Tj(ojp3QVc0xBrQtqSFG(hB8XYCsAowuhwlZjvrwvfsUYUDXnsEGLbBZ8AuG09rDVhtVuOh8eK7v9xH6IIqn)JOV8RqXN2G)7p1u5g)y6nJoUbzvcsRUeVCteGXqNvFSPeejUHHhBmi82(hpxUXhnlE0TlsGr3xeeBKe49b)qkrop49g8BwWsJ0jNGeL5khBMkAeagxNammSDTNWtE5icv5K3q)4B5Pvf(2JGVGzMNS4Ckk1Qoo4Jb8XEsYJ5fkTpOqYTVe(NAT5fjyJKEYRKCF)08HrQLjjPpHaVgPEc8pgqn482jyEqjU7EoUQLwahMz4yOz0DGFG32VV(WuLvaSvfgzK(aVlXcJtelGithPJXqNXqsZjBNDm0K5OP)zQjgivUmWy(mkxx2hfCpgMdn9oh2WCwodFBbOdDshGzRbU)a3L9f04zMDBJFh0Qm)ws1riW(czcteYaN8zlqJlVCFBNtbFtNbSHM0qBTp6i6mEJMV2HhaQ4pCSirIfQR4Hcgmg5A87XaslXdOdEqaCaA61WKRrmvitbuOvKWb71eagXvqFFKGrJ2vOOHtgICnm5AeYv6ZJrUgNCnrxHtemuVDfTxCPWxJ5gbJJ4GI9qrsgcJSiHItUsqq4y4Igpo5AcVqWiSGSgpNefrrdhlrcZWA0PR2oINiAxXJepEsY1EXxteKCne5AyZmbTqOuPYEb3iDb8PGbjxdrUgMCnc5AumDhNq3rjn)ybnHo94WOOlC8OugysY1EXx7fWCSW9sWt4qe8KGCn594UOPgLLaqsKyqLcxJfKCne5AyY1iKRrjxJrQIyK(icZfAo4RHmxf6XPQkEepE0qDfjAOWeyJriTyM5v7cpLelOsoXcfK0AiIg0QkC4UILe6AjxJAQGgUf1KetcV249GAd5f62ui6yMZlhvPRmrdLKOLAs(f8lu1ViRGKSk8(lxZAESgwMO9TZQW4POWCNcULXhvS3NFnyS82I4PtXrEF0(RA6AurHnRoAQ4aDdTrcXmmy5OtRT8oDXKqGaEO(3QOYMndZ4ZKLHwfBwmMygxggrAvuz2SJRTsSk)QUvsn0ygFMTCSMqNHzhZO1WAtRIuZ2NSW60m90YCodBvMXJUnNwfpMmszgpMT50QOYQDklyt38slJltgKSWNG4rDdpjIfWUTPwTQ0SKzUAmms1QyXSznZycRfNU2SZIt7SnufjAWWXnb6i1arJQLhPgRdqJfpASib8zpYdZbabfPJrHql4K6WhyUZruuoHVp)HiM)iMY6UB9XpsmL1AveheftRwzH1QSU7ELp2Hp9h573c1ZKdE7RUkjIElQ7Up1N84lV4hPvAnZjluA1vprnvp0by3c1tQzlkabvZT6QQyMQk6G4BHQAab2k1MPdBUGObS3zIaOVvb1S3WZJ69(r1kyEo)q7L)v0ZD)(WomPZ9NpuvTz2BrJ3DzF0HqFdguQN)sA)gr9VjKyyqofL(OxXRqZYN2il6hESVtAm1MZjbmcFlsFaoNH1z(1HXxCLxLTPXtFw8mZWmhqEFbPCixcZgpRk6ENDuEciuyWQNDQhX(TynuEYBT(Od1xWaKh38PhJg0cus1HvymUaRqymwcNdVWZzMtTlNyKW6uaADgZCLXf0DquLsCRiwNtoA4onEwWOTT9jpjEzY0fCJM4ao8TUcAU94QntstXLI3NM9rTz8XzGtbSqrAeIP6xfTBX4H2NBwT6TuRq2MdLct60CQ1zSUW94KLZbPBcgar8aboKMuRl1rdABMQd3AEwOtvmVLsE1840QAUwP5znYZg0aJyTb6ET4Dt0s94wJ0cEuX(w48QrYQv9STsJ0uiSuBkUwAVjEJY7gLBbjQOElSE29OOX4uwnDpKqMPCExrqlW5XOWvoVz8OI9Ty8qBqpRgVB2wHZBe5kH2DVWEt76f3n62couX8wM1l(USv1bZu7UtLhibSH3biRWjDB(D5AuWDzZKSvmRQ(eVR1mwDRTkRX4KBfUUPiZPuORL2B2Ur5DNwWUyv97P2CJ2L7XtBctb2AOGbdU1odTf8cUbpD0LhchWzNKxy3V50Lvj5Pl3cnytr2tAWUxAVBWgL3TgSfKOI6Ty8qVCpwcIEtXK7yBVwHhV2(Wnkn3(dWPWkuHRCoYBMuqzoc(DDH2qAM6OqRBiCxRs8eOr(3jlcwskv1KG2ISt1lpe8iUs0d(PpxSiqGWqw6wmlDQpcg7lsiDAYVor5FlMqtRe3Y(zfGOEW9LK816aQMewL5wojmtNPBY(6AYlgKQbcOE4kBePho2x8BvJU8wCKI7TeYJ10KBeEspxGtnMsnNRalDMhQVgaKHTWBUpJ(QwNAtS2OwRsvD6gTAtWZfi0Z(cDqaMDWCZ95FT0AIV2Ang5nA9R1C23yIT2AmMsNMNTgBW4giwJeYlOmNvpA72iqglnBRdsY8ibDmrtRcwu0vflYJy0WlSXg0GUWGb6G)Hx5MRl8WiRrDgJy8vjhpgFLN6lwra7zPHSWRTMHJHB6cLAhMsVXqQoh6yNUB9hKNPUCdaa1zdLnjOcVWETlkPTMqi1JrO19tcSwlUg3s6AGabo3Zk0NfiV6YSaW(CLlPL3j6MTWiVtB14HJYEaJNFZ9fSNWRIMwO1wtZuO1E14SbIPWLTyYLM4hCiP3sqxn5Adp429iCZZvXOn3xFDRLD7wSrVkA1EoH(NtYNg(VW)JMxC2PgB4C5j7pgJTpZ2OY0D53(lNkD6mzgiZawbyIX3DMS5hmBMBBQmJzuys5uxqg5NIScXXRRUdueVSmMtolyLV0(kohz7OOMZw8cBRdF(qlGejllp86YEaFVM6AFvRNLxnnWQlCLq4sme6WKfUhEb8HxiFF42OzogNb40h9kQZ8oQZC51z2aaBDMnsZlCBFLgKxyYt6RVoSXcgm1WJKzGoOYbQtoRPSbJT83W9sHQBuN5J1CGTKL9t)1QOyvs1nyhcCxQeWvYrJM6StpAl6DNDO6B31HtR(0ieUtaSMp2gzdaXTXBfWqSeBG1lccl81H5eb2yA5wcQYpT88d1xIyAdWXRIAZ6O5ud7CKyMwsonaLolN9fTtd0113Rg2uAnuuV5ZgfvIEhAO6mBcF5QDQIvN5A4RZSzp1K8HsppOX0(gBGgtZ3drEjH2AYNTMiNLrf6YK4O5RT1mM6Ik(6jXAn0dVP2yRnQ1xtc1q1GLxr0yPnepuYOjcOQV1YLkCIGrJQffKxUjdBM965uCekmM1fA1v)H6nwW4nR(JOx)TUdwvDuSU5cOdr0KWklGsgrJAEXrCBBt1L77qQMQ)s1aFmsvHRgrXpHUIO51XKxtjiWxDpBp6tPItJt6lPrvK61wjJAF6eaXNzavV9OHorAEwf)JYjlZodhHJCG6mxjMnb2GQZCvoAqh4IFp2ArRpRYjlyADALozbNRdR2jl47SEfp5El(SBvpz1T266kFYcQpRx9twzLNDRakl46SCvqz1q86XkHYkgpBxnuwW2AEXozblN1l4j7MyeVcDJNJaJZq3wtDMRZUfg0qIBuDzHq3csJuBgHsTHUpY2oBVednZZfMT6cOBv8Q96CoaV)FErY()5TGU0J2Z5K9)dg749)Z1ErOEa0t25p(qpvb0x62W7QjRByJJZGEMc4Tbv(BtBZzSfuxloNmN6rebpAJlTJb3j3Sdu9G52)uARWEXDRZJzLPB3CZlhwZEqK0EREjOpX8Irv9j4oLVL6gUdvQG9TfY2UrOJiok9LCK5zLeWB0WfRPVzAZs2IrTlvISdtLVPB8iIs1e5Kuwa9XQZ0DbOSBfTh17iyPoZweVsHQY4Z6Hsc4T1R2bpcav71z6zZKY8DGFTdMHU1)xxo(F92E7Mk)jOh3evjZ)hahJ1s1o(CkXyXeDaMG24qMZmbzRfyB4z4h1J2wsUHV7w8h0Tv0Jeh(KJHAvWwr5oGOaTWeh8D7YA(rV3rdj3I)iXdsZ2rjoHkDQ)MTIFEGE6Pd(oWdhZCjI7k8XjqplbARVkGLHPmtbT9c0kO)VuX2)DE0)XgqVopcgJXfvNb45TvNPDOd7IHBVKRSoZBbg4XLc)(YGF)wH)6JUbroANIxNJntKJ95QlB4it7B1vqFn0PqNgDggXoCaxKEuX2S1kNxICkzC9EvHv4MHT0c5NUsTAs8UGRWoWf6VR4zEXN40F9Ng9ZqFz0FpQlX3JxiN(lg0R1Xnik((8Mon1Qd4fUuZusECQUK5bDngXT4ngDa9LkEJEdTfMa0h))b9ZlG(jOBh93Wi63lcYGH8lcG(BVxxOMW94nT)UCHAkPVHYq)BmOFky)8FDhTp0T(39UX)lkt7UwidHcxAHHDTf6cEcBcpO)rg0)eDxS(pd9U(9MVP2)6sxByx6A97nuAiYPmVbpXLxM2GHXxa17FbAV80fL5ruxrMGTBBRfZ6mVD8AWuOn0TaVytxAbu1lbvRqDMFnEXRGCqkCa2skMxnNVc5mzjpy7iV2Pie5exqKtPiRIsfoYrFdkvvAK))lVg(L0Z0N04sYFsGcHGcLPN9clI399PQSF2fKlcqMLBwE0oKgkv2rhCQrq)4ci8XzeoTSloN(QLK)yyBMKd5NDKLS1u6psWirHlrJKnAVbdfMSDFNWhz3(QMIdiWXQJxTYcfqd4JKXW7ToZeO0h9DsgwICHSKt8bujCXWdY7dVXqOdwyjcNdiXzkvgxsKYjw54h70FUh4mh7bx(OVa6EGcqq0V5LjCustL26kNDUQaNyiXRrZrO)jKQndiVl7Vtsasb0Z9IVSe2l6JuWi)lmh1w(xmTl3mTP2CS(Dn7HFK0BhCVmIqXjvMRyNDa3KM4ZdV3b7oupb7q3zNbY7RVew9xbiPN(j7EqCXYtwkeDAlKHaMxRcguNE619mxroMwHjGxqAodkuHRZo0p2K2AA8QCzRYCY9uBMz6WR2TLmFBoN6oAf1eDVryD3449O(FnB7dX6m3qDMBeDFFTlc9nAhDR1zE)4ykFPZtXt(FT91u8K1z6ehhzM7U37EVPlp(ELguloY6m3uReXh4eFl1z6snUSBIeHL7r1rHmylfbhf2qUh3wDMW1zISUg)X7Qotu4NddSwJ4iQZed63Po9QZme6TvNjbp4xd9ZbSCRGx)6m9s8jP61VoZ2Oo2T6UWMllSZ06m38cyhAGBsRwPRZSJvJ956m7e()rOqnQQv3pKBM2QZCN2TRvN5UunNDQVYZT8N7fO7nEZMZ(OWWT(q84bDL3WsvDMcwnt9aVrzMk5fYMPUqXkvDMIUBy67Rzy6AV4ZTd0Lr3Wep6lfWDdt8EzykzSHgEIuthQyMATOHjFVXBEOqRBEiCUXNWDdexkXaX1DoWaXyQHLvNzm4LJFc6rFvksAsQZCBqWx1zYsI7QoZK1zYban1MZs2L4UeuvDM7OazsLCti7Lpp49JXqgBZ4dyJroZHFWx95F2vEIJd)3R(8p4P)b)wW)DQx8zPN(j)Sx6OR85FWjb((YFUxELV4d8ZEPh8N9sp0kF(VQEXw(O3)YV0HnDKQKLSMqmDAQqp5pO4w70uHNiFdoE3uDM9XVAKX3l74b7DNztV)rs2yz83jrgVyOiXsepjkYMjollsMAD5TP61SiokBUYyVSQzcH6DMb(11cc9Br9GwJuk45IB1wIpuZSGRllgIzM0DHrt4uJnGUd)VbU6W3LLytf(fi6Oi5Nwv0tKgY58w)yZMNK(7sudIfPBgqvGezv4fVAhwtbZGy7PMuT3mr1(CK7ttAhGNqp1jQZi4Tcbfn)H6wKLlaEu)jFkQV1XAdCatDSsCOosBy3WMoIAaxSM1Oy01O(benQTEUp)K0Q0raLGKSHyninZwN5QWc2GunegPc7ito2DNU3s73ImUJZ7Ps)sDSBmQXUz405jDnA4T5r0WBvCJYZvSNi9y(CGXw(pBbSuN5qMk0LUwk0QjM8lzva7LUEfRVL6UXWCPT2ygWk5RRwnWEEsDOvBq3V2YF5h4uV8NCLp(d6mU7)0)Ygf3TE1CfMRgX3PTu1GxEv8KAgS0avoPMbAbx51z(nnQpOgmQoQ1iO((nVmum948p6LJtUXhhJjYCUaycQA8HK5K4dOvzEnQGePa50CbBRu5el)L)YR85pUAluVcWjjjdMsPttuzEkHyEufTN6nQrve(SzufR1Hx0Y73ZvZyqk16Jbz9LKJSMjzU3OizkxwB)W0W2fgOvDdJ9c2Xd(mfWHv8dppnAWaNndgKB0DoyLHcglSWU()lhmyDMzEdESG1z49EeGKdRQv7ia)9opfVAG1q4QZp7osnuUz2ZTp8OocxDtgIvR7rSUzQe0qwKG0fEabjvHhIKZpNF9oy19U6cw1AeJxYfsHzEwh6456WcR6z8A1zoSxrNDIt9BbXlD)2Jl0R40e(E2IlSLY57Yp9tEMh4t4m2tHprlKZ3229BurNfJSQem9G4VrfUMvQAvhpGW58iDAaxQfiWzp)hWIpYkvV1Jz5eNNIzzHZMywMFhjglDirX0f73smlfEZywo3hZYnHJzjC8SKtQZvBKl)(NNICzH1qKlL3z6K7AHuhyp7oY5VeTDDUf2crMHiPasjUSkUuCSOxEpEbJL1gvaVGYXkhAbvrySK7ViarY9FJbh4J4MDU2zcBS4zC5TrA4BdzS2AWAfAAenlgmxwLokgRSiC(iXQH2MzDqiU2nznYPB042vtevDutSJBPpa8(XZZtddvYAaHB2uCCRY4K20FEHvBKs)wRTiLmDeS3crk9OxGmZ1rUaEMR5uUqktfxV41R3jPeWYx1iL7mYhunSbFyB3QwX1dp4p4cy737osVv2E2PcoxPPCy)gVgU3M77sc6Uew)DvRzzRw0h5qIXi0I3aCauN5raaEuQn86mhZtBZ1z(u44n(04lFMvPb16mpwtmCAYuP1ruU6gE5L4P9WZbJTCnyZ8RtTL9xOVZQ02JNyZDG9TbALJctdbS(O7cDlNki2fXubX99olvlh)nlJUVdOF5YupXTWgl888pY9sgsvH3(wiv9S4wDX93P9tY3Umo8QoK2HuRBFV00rzd)MPrIvCE9pZGw3mFKGjX73w82rbhiP6(DBv7jd9x3u3xp9Yw9E9VU28E1LrhEx26D9CdA1NXTwbXU4HTFBWvpB8wg9cyVLfzVGYBzDMNeDFxIMNqgvpH)OZtdu(p(SzGYdMCVtvA)rsuwkWBoq5ZTdugKB(XQZKlzyYVq24bdhjcCny8yW1OrsKnESGHH7JMiry89H6nB8ejsecFnyy8Z7fFnzWGK3gz1o46)WZtll6)4ZMvf9uhiX0I32(IC787UfNVPDC2KA92xNZ8ngMLigMMI8T)ZcW7X6W6w)2jxufOyw2rw1zIxaRZuNjzb9yfTOPuN53ODACH9TqDMBrDlhXRR0DRQ7PO6mFa49P8A)avNPF8SNKgQPbSVTDQZKbq0GamBxtlEyhBtM19fGDlpu2v(chELJ(1B1K(JM5cKHYg6cyNZ77c(fH9)fIzW13V2KkJS9s39eL33CzlQ(1M8e0Vk5YDRiikFYCqOVY4p0J4FDIXGBMGJ(JLYH3)t(PVaFYk0T6zLZsQq5VZDgq8YtZI)oPs)6WUBHkME7UdCY(5KveyR09ULyv4xmlROq5UhuqIBX(XFNWL2h0TEYrfKldpIiV6)eKDcUF6Mh)xE(wrEn6FRi3cQTYVvBoXUM1TVvKyNy0v381DtUAIUGMj6StiCaUkTKvAI3qoNEdPrNDCmqrIqyO550Clco724szI27q7lAL(d2PIMxVRUT35dHz1Gu9mQ(djFuii7iW554fkvHBkbEBFGiWgpTBNf)zKWCVnjNG4vF2gXFU7YlOWroZWkOgaZr0EWLD1lq)sXJv65XgwjB2r8MfKgaY4NKUe3b5o8hyEiQNcKjhiuKq44DcLmACChlU)DOfhgWQFI9dIqaUJhBngeg0n3k(x7P121bdQR5fG2638W1OHy0MPCTL0hOkuN5BQFUjCUxxGRL0fQZ8YNBveIvnTO4i8JVd2inrr4X0JTWqEFrYNxCYclttXqlEIFipnBqcEPluN53ttdOoZjaz)6m)(80Oj(duf3RZ8JuLX3CwYHIKU0DDM)iVLQ)FEUuQoYB0s1Rsz6Lopkt3v7NxfQbFMUktlnr)khCMbtTN9v2qM(ItzxMgIxELMgV899tCjE5FiVBXmBrmFmZXoVj7XoteXPXpdXotK6brBI20qSYqii80yPXXU4xn2fxILEX01QwwG85hhHxDm0qQbs2YMUqvq450fe6(CIGGlJwLSnMgIUFK(zV0tE6FW3)0p)x9mp5JC6h)Hp1N(Po1d(7G)Gbt(cZBENlPd5YF0VZR(IpMomKTWKKGmDZTR)TeMcl5BjmvCzt1z(VxOH2bPYlGSa9lf8WcC7JRi)OJvDbI4STHdxmuKWrchKMNgX3Ft2Mr4TYFtowrw1kch9ADBclCz(yRQpZUKDMR6Cw8ZlyAD4rhslzSR)I3T9HVwY8inpX4tLt)lbmE8PTRopWB00hnyTp2UAdJLeYeX6VhXjTjuLcwcvsCdumnOeW5MG8jWVak1NKEsO2b5tOLFS(cXFb(aGegZ5o6hOkWjWgfVjJUdBj(wVhb)TIM0JiJxj)QIwF3VYR(cVaEfG9NOJa9zvG8H0SVqDL0F5A2oSBW9UD5hJXU8Zs2OH4pAVkCZutAHU8xfgZah(Jwx68Jkuvywwr8PffzWi4talCA9fS)z7qOCFQRs7eDz9eNcxxbcyzTDrRYg9DTctA9rAXU(Amo7JiI2GVMNEEc(sqEWgG5GUDO9QN7CFoof3v3tEQ60wp9HiiSpBhmIjtgdyjUDCxRIdTj2XbQoKBOYnWcgWZjAX1jXXk3X7JMqYRPMs85o3RJvE8Viv8SJwR2TpfpK0YmVy3QtXtMXa93HhB75394zhzGUgD4XgE0utOD4gNlBQ07eElXp0e(OXGrcgJCERId7IgpgXXJpCkd12ymyMxyWtZOFvSBQ7Dj6OsYIpC2OZGK5vDjDVhsCjHJpbmJDdHHbERpfXVplCiRFVPXSf8tmYEo4UN4n7BP5jRlFNt9KD7xCIeWiZnL81(CgqclefMrej57d7Dbhxc19YSjUJBBh7pz)ktgXsmcn40hBTVGMFwNjh1sMwFCZiDr8U3lCp4V05ya3ePig7RVOo2xFGdWdWSlnlM(7mGF3pJXSFYF1xF(RkuXv9kxM5sQHXbQTF1c36hRy6KJwHVL4b973MgPAfdUj57HCUGPbS(jgME86MXuK4bDTb4cEIex9Gkt3eOVgwGa6bmSJML96wmGHBehWG472Ld4k2IG1(5fa(iV5yjCduWRqLzZJ1bZwfgjLeefHLSE)paHn0oDvUDDnSMYpl7b2azLS52HvwzUsGRYkglTo3ocTeZptPY5XJeJxlD6)BK0P7oLRVrTZsoxSWZX1pfhMdzpj8xX465AgPcO5vL3vcTOWm5Ro3Sf5KuFM4MsP3ghbpv9JrERSAY8)c4)9OdDRNyJ4)9sTlE1UG0s1QutQa6x8ETD2CTzpOqYH3eEsf84amdddVqzU8hKtQgpjMXJ((PHpEgEltLXpPoZFJLf9I5ibLRZ83Ub6ez83b))pLW1xgmrAW5RZ8ZQZ83BJ1cwH(hGA91QZ8p6bxOoZ)K9M7XgESXWljHXNOoZ)SwRRoZ)cL8pRhPwbxNDJQEocn8KkAABgG9JrMJXdtgvM6(laQU7r1Di(dyCcIlu9j4qn1e6ZgYJ(9F1x8PB02ETbZOsDMFEZNhfYG(OPazAAcFRZ8NHRaAOZ)PyU6GUS4ZRZ8T1soW5apPMtoGjpPEKGGv9K05L)yNjiOpljiy77zMIdo687C6efTMGa6jrH6swLCktCeHQLiZEJ6AWYKxu1dqI6mYglQQvWEjxpZYqH19Smacd8QYvixLR(ZAEUe(oMZLW58iWIgV5rGPUOe9ieSPIp1ohBpto4mbQ2KqWUdhHGXOD6Gq7D5X3(kgboLdCYapgezDn4TBQrHSDTu5NFHwmBBIwlUgW2DysaJE7)oPAFz9kGNe)gH(qhh(nMvKWSaTjeATfArs(M8OIAJmj7NU1MK9wmmLBWrEnWEh0Dn5r0gMDnHZVb1LezHuQ6rIop7VxIBUM6ocNpeCQlSnj7uhryxFuprG3ZwBk2rVGhtX(p0DNqGj7NrlHUQNqrrJef7eAa66qrZBcn53Mv5VkZQ8KjQs)mULhBbGCKpkuDE8uwYBykG4I5eQN0LKjv2y67pZd8jx5W)2l)OV0YF6NUfM((xWMtTRYQrOxNqg1B7ISx71BJXOoXBsWN(bw(B8np1l(vBED(b)22ouz0DL9DpV5kt3K0B0UYMk1U2ZTDGDkhzVt0mxzudnVPtmnNyp)VK5eRAMiztXnt1AZKzDXjMUH930X1B64cRapY8U54QGRoU(qU54ks0Ojc1soUA9ng1h)iepsh7u37VBZDnaTapCn89oVPOhk2zRI(075ocuPZ7(owyNzFtf93urFDxrp3lF2PNJpCYJ1sQ5T0j4Wkh(lFMd)uoobhY9YEEao4Qg(lCEsdFI1bn8QPhzWAZXlQunylPHdQhh0XPG5LA5xVvl)6Tz5xVDl)6Dy5xBWHswhJNTPgrCqqTB9K7Zcb1UfcQDleu7wiO2TqqT7KGUa0o157(M30u45CtHUpw9N)YAZPXWTLnC8W9MiB4GX6nk(AIWTKLXnzZYizW76lM4c6J6bqK1urxN5pPGHvsLIqasR8KFlxJgAA7hOo2R06T9oA9A6eN(lD4vo8VnU(o8XCT(M4UwxRVvo6t8QVWdE6V73(0p)d7E9LzDT(ONXJR8T(QR8TVxxRpXTTUwFN6PEUL)ip8YF)fx5WUxFtiTEwFV2PEHN7mlDVN6jVVt)TFKt9mUZsfrRVnXp9tT8Z(eRCFp8Y)Gh316d0t9WD(lEEZD(z)iZfdv72lns2khmCZCNVJFPnGDJdqJdWC7V5ka4CXkaWNV1v)1TYPZxbVpD(mCH76bzGDxZwoL(EVTyghU)NDvpsKviBhZFmzPJ)kGtZrXFJIOBzIcQNBaz0tgrcSjkYcghn8sZAa5gdQ6ww8DA6PJlYbcv1K24TSAhdtXtF8JV8XFjZN)C3)ZU6g(YlDEZExRSGMAS9UTho0DiLmEGjLN7xbS3vVTR(x10lVYlR11lR6uVSEBxJfDX(JfjzutQI1B7DPRbwVTRD1RVHEfZQAx5L1KJ6X7)C9Mcj0B4BkemtcVXqiFyzBHdDW6m0VBox)64w2eloq2OM7q8kNC)cvNb7ztk1ed35qZH3rRbeVMrzfQYtozQXV3FrwPUPVtCdJYwLT7(zL8BanE)CoehBffEWfV5x1ABVs82BCZnz)vgHA6Zy)vU(S3kX7sZjBNy4DJljFBjNS6yzhl8EdC0XpgEvUMxwOmx2SdV9HYH2nO4VhEr)LfKX7p4CE(T28eYISs7d)(5K4e7uFtcFxPbrrGBcmO7AQH724xDpjUaK(07KQSExhP)kch8GSsLjSncF6d1oyF)KeCNTMcjOkMxH8Z(RaswJwRmx4udmWsKhnKq5YCvZowMDLjR4gSuimGO)HJaDPPXlPnYg4hvK2pvMhZObJO4ThW8M3AaKX9IxIHKfBip2YeDxcmR1DjaDhbGTZG3daKrGOgaqEwYxCr8kKUG(bhKyBKEJ5BJoxG4t2gOBc35G3yzxV42nDyCz9S4k0heV8YXNjx0)gt9Vju)Bs1)gMCMDrxpZGY1IeEHAlh7E4JEnynRlEtGpCXB07(wRF9oVCO9KQ8ENdVnc4kpkORS21gn9zfIb0T3m6Pb3hG6P4w8MAC5mju7dudyJ4P4XXgCu0dsJzGkps3)h7HUtL34stFhhia)idju7o2FwY7D0OypG(Xd2bY(YuZUJMAhJNTl)Jo8yJNfS)sS7I)aBkuYIDKo6YFeFD3TQT6kcfnSvVTX42pCReR0cDAgBb8zgy8vO37dFp(al4vRPqEGUPBZ7CuAPMwIUa0PFSTj7qLo7G8No0qC68eQRl)GzBYQ)KS9pS9mvynVde6sBmlD5NE8amsTzGNKEoj8oGjZ8QNv)2(mK3ILsT(ihcbk4VSfac4k3f9bGhf6DBFQHhGEh58NQ8aSZYodU5UMkNgpdKC4uYtSVt)aEidy8dtyW3zO4Xs27h0p9aERl)qx5y1MzgoGIXFVZ9NPIWbeKOGgoE0ywGC781Kv8V7AvMMcqSqXIeXcedcHVxX)KWqdfuursI4rTasoETJ(P7msWqjT8Uj5RvtrUlvSdrSyd567UFvicgQxNLN(Uewj9uZPud)AnQkyW4XTaqwo83jF2QL48DpA8rrjsGkgCsUY5NtSm(l4To)mrCRnH0Sk(he0OvPWOjty519Zb(qnEFVXJyTnoGGeNjG0jLQylfZYvHJZrpA0erJf0csgItQMqj)tQijSpo)DkXwDF(dfjGo4r7T5GhoGwFuKWrBo4HubpCVjcMO5Ghud8yHtgVPG3Rk0HcflElG8KMaV5ipHjOJ1uOJBc6MZwIPbD8GjBkWr14jjBozerh2MteA9KjAojesxgjwyRIuPRWXoVgyjnaZMcOfWsy0jhjK3GPXsdhmw8gGnDEjWmBayrnbwsVbtJbMisJQtnwxsBgcTaKotlzV9AZMcROc4RZDnfm4XAo46AkjcgkAtbxxtjA44nNwsAc6MtkjmbDZPK4MGostHoMjOd3uOJAc6qnf6iMGoytHoSHHSMt2A9LXtAZO3OSZvXjmj9cMWgW0RxWO1ms2BIWEbJgJP3e2eynbJgRU3Kjd6fmXnGjKxWORDh3UyVjG0TuKmAcpBz9AaK3KewrWWByTgfIt4ibTjYnaxvzo)dqcTwHtT2cgZMuCT5MH3bqXDdO01efHGL6hI)thoBw4QXk5OktgXMDWmhSBC4qoRuR9EKn2KRvQvg)KZIpoL6xQw1dYzfUW2m9Zo)coRuBrQimJROYQq8Wae(3oe5lBzoDUFWGnSv6F4Hv1idhnSn5lbyCpcv8db4pJ1QTxhehPQnGju4y2AM545iaoEvoDqIAvWyiHU1pLrnJREtyRcZXxtsyUzT2ubWS5)Day4w2jSibdhkUTazR4G67nPnwrkPsSvntura9mRYfdkHJh3cjfjyuBsIQCbCW96mcmjzT3ovzyeevvW9owXxSOjSs8din3SY4ZSR(zvuQycSyUd2UzLmGjH7WqgJJbujDhQSCYGfysMouJUoE8OwBStQG3b0Ka9Tz(ns0q2cPXjSAMHJ2BWyndVrmbB4MaRU)QEJAlC)uW4il7g5gkQndptwHDwBWKmP9wKbmHnfgKNikIjGI5fqrnIIZoZ2aOyMakSxaf3yeij8KMsycipPjtUvSpGayy4cefhBege(u4gcPENuIObBmKrmbzOgcPEVq8ETf8MDi173dBx0lZ8GlptY8jTldTRAvQWTGnEmgSqEdMj2s4WEdMPaTSfRQfWmfHvVnG205gXcf0BOu5eD3n2squdT)jyRcdxzGXPz3GCIbsZGTcnrpLRrsNeB5YohaV5OfWPZ3uWcXIKmK9y34QiRivBw)7MJve47gOJfNStpYRYBQW2yfwDUOejJvu2OP8O0W814EMIAEgM8idr3J1mL5ofHvHI4ICQXBd75BJgoSRAP6VnASg(2gxwtuLPxdnkCIzfk2d0YQue)X0LMVvt)ggaJ(mRLw9PdXwTCfoj6CRHtIBNqzc4ZN(kmb(52WN7MQtBNF9tPhq)yF4Csk3ZKGPmsQpLTaejpUwWtQbgy8XYpY4PgiZaDMVlS664vXN8IgFnb0Ec(e3NKhz3wXhoxWkYCvMUN5uZnQAguX3ACMVAFXTG3MEQzxT20ttUZzMxTvCTXFSFAwHPR4fBeHoEby0V341MQl9BH(LG2Wsfwzf8C1nPQuzvvzA9QiJTL3JBfBl2OidmmTGKv8tpcBCsdJd0OBKaq7RduGjS7fbqZWTR0avX1CpN50HB01zWFnvmVPEZ14wCutU0BtMRb)K1xLfgKRpNIkxFfiBvAUkSdWvrH1oaMHIm9Iwyz0xqp6mC9DcYuHAxFPQFsslolX9QdqK3NG4yChqv1WoHB9TKJ8uYXiKvc3kueM5uAPtVbOZeGgyMofr2TO0rhDrmzy38vAkJvHJWA7u3yJvfYBXV(3SzxvXoeDf0PdItvGd5YASddk1(zhtUB8zbvUHhnt28dKzKCP6OlpRSU9Oomw)boTUs6aPR1b8u8dihFpDYQeKj9S6nDYAaOV(83XSQliGoSs2AChd5BCbuXIZVbKwHfy4vlXvPt3)cu6Q9nDs12PZMjR05BQ55wWg86Jn0g0XozUuzZzUJvL69Os7I0teWv(ERjwAETxIHTj9ngZoApGZEYnD2cOUl)2o2fT)pc7GWYYuf6x0fRScnN52Q5JmDZIKGqFdKi1nS2CbsnqBr5rtEJ8sCm)QiyHwZLFR5rvN02Ivu6G740hI7SghW1yEuJnwAZxUQ3dJ3B27JN9uTuJVtRuXw1g4KfPqxn33e1w6zYNMERwf0LhuNDTwvjyNSixBTnZQXQT2ByaeURSBMd2AQ2nKP6QADZLBC2R3AgZmfBLNnV1ptzAMJwdwYOb75HHmZrc2CBzMGUfmNT6dn2jLrlT9OEm)oV7HSw)UgdTdZVwJ03Pf41Za4xnQJMkBxEtaUPuALFUAf19yidUlX3SQOPc9Ui4Rk96eEo7nuZYFMo4z9kgvm2n4wE2hm(eDyMRIp4ATmciq212aFc4Uph8dj6KhYlDsVhyVv(I5ORbO7IKhManlMW0Jm8etKzalTMgWEiDRKdjxln(MfYU6kOSLd80zWURIOXmxzn3FLdx5TU1sZvuRQj6MLGgW0tp(O9NkhmiYTNpZUYmwU8tn2GdpsUmzPjPsrgW4CfZqZSf8a5AZjvIJUi8YR9FL5KvS9i2zXJxfIyCE8NRMkvipuItwaVqmnbh9)eKbMZq6D4ElrITQOsoe22KtKzKrYN52ZLnv(u5YLk9oNSdQEGoDIHZAgYCmgvNdXxrUraOnwCT2J5E0oTsFenHbsnAQTNPdIsRZ3o6WtojOGey1r3QhG3AmoGA0V3IpnpRpNgDnJmT(npISPHSVdzKtdY5mnGqT1IANUaFalq2PISwcaSbM)B2FWEcgTLXlPxYkYXttIt2KtgX0E3R3y3vUlN45R62Fih4XY5QDZC0OsTg9CUhsI9eoQFIE7LvEDlFQM6jutGgxevtyU6CWXX6U7zIT50LU9)1lcZA0RnqDHCATtSQzoUq1NGbFIuzZUhkCAgeBIoSZenDwLCjQjb6K0rMAW8sCLNRex58rdkQjg6AQo6mypr9Ft2CFA)JfWScvZBGCCQi7jSJczPT5bLCZ2rL3TAhb6ATKnr(Y98C5ov554jA6aMBL4nClNq)kC6U60fN4PMc7dFIjgzyS2MdxLgWKnZOJVR1QdtYKxJ3t3e9wl9f6F(e9EXVFNeG(GEW4Bys(vN8MwRaAooc7zIfCqSoMO)gtRUnVhnRtz10B6zipK3E2eYJ39GoNs7gYdC3hHj1ap8u4AC0tn2W5uJanp0gHONBEOSTWS(4Rvc0Xe8b0lqN46S7MGElXuTkQgtHw1SGPDrQUvGYCKrUmV3nXZzJ8AAhf6juZjgCph6AiW2K0aMynsqo8JMMJCRWA(x6jMcOrZ43PdcR(nSa7H6ZoyUOmn7CvueeRiqCwyP4B1lh70cI9Foc304UZoBHzoc6pb5Xaq4cg1ylmTvaH0cZCfwsFl6u0B68(CMZBdnhZsR2tRTv2Hzi1ej1bQzsKMl8w9y2FAG8OxZCuZLgDzARCil62824HOO3ZqLBtB(ADIQwNMEhxs6)VQnvgE7INe)s6utMl)W4pWvzNAICzgi)4zZpyQHhHMZm6)rI8iqJx6kwdKZXsSul6fDgnbe90K6IdlBaynpmUBYYZKF4IDMB2u3ARnbNTWsoWL3456oWUe)5CZ8)sHDzp1q9SV1PI1zrxRNZFTZx41m4VM7xxtwZ(LhdqTO9hJVEKKQSLmuPVkvBuDOc7)p27Bpk5OQo)PRaR4G7keKaByrAcqygmpQUQ(zoeZV5zMjzELUNjbIznDnDxtxftnDvPQUZKjGkgcWGiGK1fnQ)az0dIcleJ5iiIp2Co7zvxzTw4ONYh76k4mtY6Eo7UzpRNJYU6(979wD3vvD3ZJkDcH1m)rp9JQUFV3B957Z79(97PtZpVTFQHBVDWxP6i3C(xgaIGthrIRQZjEnD(BPgqXfDWeDyCuZveQx9H1ZUxrRJKU0muka112)8wwIJJAS4CZt8DxGR29Gg7K1Wl7wWDKngjb6XuyufbqQHkPPXzfYXwGmXiBqdepcjmkGNWbARzFQgOZtv5RwJsrjfvPsYCi2wST2ADxnEnR(rriTF(whfEuEOZbu1T0vn53P63e0b5Jz5LO2h3ETuravzXUrJYsRg9ixp(Hnso4k2lbOT4lI4Gs3o8R09g3e4DjGxTa9QbbcfuZLtrmOQhdARLvZlkRZj7IfuRcgkrVkwklozjSpiCwcMXd2tPcXm2dPpLhxopzn3H3jSp73ritpz9KiDA2rFPsBdJPbgftGwL9JS5sno48BiwwwIe2kxMTC0IKTB4KWSQUy9M9CTWA1paW1(hanv16yNBl1ToHLUUcPRt8ORs(QNaMViLXopCTd26WPiBeL6jXzrUKCl2LMREg269Zlo5zlQbwTzYx4ODUe29WlMr1sYp627U1(7VZERWXUq(pxglx9j)W9pvli(8bKxcD1bgS5wM3tFs1TvP6I92gUNb7d3PnyRTzQPVI7POS24yFvrTY5uW13IRnsOOiVy1FDSA)1XpD2NxNnnO0Tv01FQd90y30DS0cU8k14O)ugDqY)AyGlRVg2ASzRBzb2t(NU7d)f3058od1BNTU9oDpdTWhbQ558WnpNwnAFaZgDBiPyoCBqPtwLVMx18SLYabt18wQhVXcD9oaelWL6CMPQlfxNg7lVQ1XdfRwEzBM)BZJ1h(6oD4nTVUFQ73(RtxYzCFD3UeJFA2cKn)A9Aa7B25HFBvTuckMcSYkJUSgCbdqpwURYHHYOKwphK3sIAlVa1Zh6TAwCG379rU3)C8OdxU5NV0JyZTmpBlQ60EU6U2saAX8yPTt5SpPKPGz3NcpsZ5ivFCAQanqGa0up7xW8dA(0MpJ5tDW3H5x08lPTQ6Neohxn7UbbHIPnpsaZNlaMSEzUomD1(LXC(8xzKq8r5ctkgKttYLSzQK0rB5(XCfUDQAvuoNuHnANvVpQQUmMIbXhct39aj7zNd0)qT2R5NBzM78p7cOzV0DiNTG0vyg3vM98wdmvClMvBXCtK0s(kO5K8v2yYuW7YI59yXS5aKutoZAUyZ119McEbK)m39f(oPjO2LDT2zRClM4swmBuYC5hDSTou8X3BFTo8TPz26JrZmS)iRaVtTJ5XLmxfMaQWDvTAUKp2B6VQV61447OozwwlMlWtvna9Il)z3fTaNAsizp4sPUwmV1QTVaVQN8vDq7MtSUB7Fx8q1W40sopkopB35AmxTX6ncCgiwVtcUMHk3XW9)(adoupd0V9weUQ9EDLUOJWkkUWhZv3t6OFuUcUD9gbBmynEOu35bNXBQwJZMQ7(hT0ZzmbeVxTyvDwpcwDOncw9tqsIM2ovg3rtyEqUsYOUCnzPCDFNjmPMVtkwQ3G26x0j8ypj24s5QxTd7zZwmVBUIQEEu52i7SI6)aPYAG8E88uTP69qPIuyoqgXgiPIylMoSy60I5wsBXSwlM1vk99dV8kgfhbK4ksLtp1FknD8JfwkNPJ)26xnVO5VcRVaXKCMn(nVFpjJ)avLm(NUhqlkAWtxdHzLFuYmnl8pP5VDzMVXFQfZ6TyybP1wmBcVLawmCBP7n9lcfAt)(F)PQ(nWV31LCOszwBoOfdSmlMw0IvjhG3A2SQ5n2v5KIXUguDcrDYB7tmRSWUOFl(ASWwmHGEoZAq1lwmTFfKc2GK520XzyGmM8W8yBKoU2LNtxilQ6yGkkqGzwZN4ki1sGrDMmVTy4L8wobWC3nOQ61eZlmII4MTBmjZJaJGOBjamsWmvnrj3QM696qttPcGXZf40xFdQAbOYRzmUQAbPb1vZbUGAKg1bruOG6A2fhlBiYKcOWb0hHABWuN9YpQyISzIPwisFBUpA1kg45(1egUsLrBdj1jAx1OajPKtsP5A40FHj1ettZr5JyOQpcMI0j1hPdv(Ndyl3VlZUtsEKvUcgqQaQoYC)eDH2LTJRBlLaZwm9p172gbFO2KZ1pzVJ5ajRTMcOjgfCANHOEg4zaPpa9SraF0Lb7n294c77YqCTwZZ)Tqsv7KK2UvGFL5VjnT2v8NDbARF(VVSIzKhxqz3A6WBmaC0Y0UMQVdYLs)a8W7F9dRDdZFRs)olM3)cr(rKZTB6wRR09e4)Se7SDvN7F3CnAx)83keRTsBEQrUrYNDY2FCkBF7eFICW4VqZNvEeirKpCntDT2prHrv5AThJKekycL78BaHAPXQUhZiWuK9SVfJaWsLbVfqAfZUVmlMSLgHVX1uzaAXayWtDQB0zx4gVrNJJJshh0Ytazy09MEDE()FxWfC5KHZYjJeWxAjv9BLALyVbWEoorY0fWs1IfZnteYaIjSygIij2PCzc7(1tLmFajWo1HKZkEXp63PuHNXwUy3B6vPKLkF8Z)UW)y7Et)mYFpD3B6Fz)4FFILH2qAXSnBbJOWvqS2gjv6HmWC1TizU(3gkHdT7Kwz07AvQAR69UrAjI54oNlScS2vfNTsTKzUsIcn3MftkSsrijDa8S5a66mwjD25hF4d)TVGliEzDLBBTR1tH7yDGy11nAo07OsYaBEvvSdhCrIDDS8RHDDHJaVeNdEHJfEjsC4LeCv80WIz4scpXoLvaogZeFvxv0fsTzHk81UkU8NKglJlVTYvK9EXsSWbVu47o4LwrG9uBOgIFrzVKbok8D7JOrID30ckAscdweSVbfV6uA7IS0eyXS90LCbyhOmEMV)ft8caffdsDROUgLWvhD02aFpLlhxkOxtnvqBXKZTIzc89nUAq0prSFj)ni(AKVRTSTTThHo2R4yuFnwnTWZ0fNMybZ2NALwmVV0ARWgdjrQxj7w1UwsTYLFl21ZgZchTlqhGOGogfku9XR46wwjxiwwI0FSq3StWAolgdSG6akz0UmIofNxUeQhXIzNKsL9DEXzFAANcuzWSR)y7IpjPa4Bfy4MkxjC(rKkPJDh6odqRIoMhGqYFq6kfoFuPuHaKAv1nWGQFikIEDQsON4sQYqlcd9nqzOPIaCAHdWH88xj(xCpC0)uYF)hWV)Q)f4FV6Ykj7OeVSTHkeNerwzGRMAScYBxXmfcpoYDJfyexCdsvZnSH0PbK)YaUH20vvePx432HLlLeznSKZYktjwoSg6GLoNeMm)S3XPa96f6EYr0LZoeAGZuxP2LtlsnyjRru3apdF5Zj9k7ysqKr(GPirqxs7kOx0nzeSpmRTU2SIJuC0rL0wE5Bo4q6Y5htSqiPxbmZtEC5SeBVckDQuYkI5ZGTdj3DkD8t8Gp)Sp2xAMN9XM5L(AshFUh4WZCFF9t8S)vZ91VBjTlFiWffd86qB)cUwkzUSYKP7jXi6iliP9Uk)DDUpXmfrIjQlP9Ul)1PMqvpBUIc6zd254JORcYS1Nus7QkFbdcy7msfligSDfvHXKETKcAYzdUvzff6OUczThCCsAxAN7tt1qKKp3YdwLvzYbUS(LlORgSnvW2kdPt58UZmMH0RKkJqb8BOZdoA((uZNdUjrjSUcHdWGdjaU)KrwaMa1wrLESkzoTv432ROZFGMH6ngF99w0OG00iFNO(qGbBRQ3KN2vkPKkWJZcxcPeTaYapKGEMEfZNRG0bxH5k(SxPfZhWI5bTy(qwm3PfZDzXC3wmtzX8rSyEylMdyXaA3FelMpQfZbTyUdlM7XI5HSyEalM7ZI5ETy(Gwmax3h7aGeJErYqmI1r9scRtll7AbHqGTyOfhG5Kl)O3AOo3BR5snyNJn00JwurPDz9mkI2LZTRRPdKdX34OpzhaV)HGzuTwZNtr8AnVXls3OGaMHFXivzE1yvFjJ4fHmJTbEynb6RaTUl98biYvX6SuQLzU23(HWgLeZPl5aWfMcVVL1gYpbtsat(2oUD5ObDutBeuRzrJd(oaU(JcgHvC8807WvLFcLkmVfXPKckY5Ydx1ISso9Aza3QkiKVqxa(beFNS1o6z4uMRMXzDL6cBAQ1Hv7h36nV6gAD7lG5MyivSpjZNOLQRyF2vQVNucNSP1Rpu7kiQA5hDhn3DHCdzKpuY8vxMSYuUY2n1vxRcthvRBPQthwhNjUdJ2GIkCjfNU34AMx3HxGAt3pbCU53ga1zxQ04vd98)2au6pjL2MZaDskTVwV02WjTFnQTSdnWGLnNTEDeMXUiOZCzeJhOvWq3MlcAYjwl(AUJzbAVyOiyDkCfybdCfvQ)206giI5rTs)6YALMgvMNHeF60ERaFW7w9DK(Lb9tVmPaz(3wsPvtunwwmtI2UPtpCxjHRZI5PRuYQ7tQnqeSiOp7NkvUKz9RbRiScmGva4coOK5wScKKI4TcKYkWqsKs0xOq8SokrFOvfaxWXjNJnCTzLZASYrcfoAm(ettC3vbupyi5Y(Gvt4)qB4j2d8biQjplWzuQywU0zn23E7VLI3wH88JQ)hCSgwmp1sJDalONRSMvwtNq)VzfOpXGS0MjMTIbzmFP01ROt276xm1IDkY2okmFvcgMGOlbKtgkrew(6wd2Deqfxy1h8CFS6o3UrXHBB8X2ZMfopw9nBS6KneSkxy(eHxYy1p05(y1BBpgBtptwL2gq98y13KXQB9fxAy1YvI3RKAQGJsXB5YWRefFExsuqnfbxQO))TEPt(np8jp09pZuVOdPY8XJAENqNPsT6TeAhdcHRQITl0(DEUpAFK26Cpryh52VTU2Y5r7VjJ2V3xSHizMpC4eSlzjZ3vPI4(BUyvki1vXBhWP0A3EKjsfB845yZKyRZtTB3FiwP)VgILVjpWqx(Xvlyi6)21NEZaY76j2jWvB)3aN2Q21nlMNz(DCZCRLIubGttJ4uRaF)QDAZI5zxPfZZzXCK519S7(SLGvFh4InB0T4WTn82ADYbpVC1fvWkAA(I7qDeBUcH0ZxOgAuq1K8rytKOEO1xAHqRtDopAnwN908y7lvMj3)TFE06zo06F3zA0AjdaIWgY3Yw)iNZJwdDB5fLt03EcVTbopA9mhA9LpljBnCC(y(gT(WNZJw3NrpnZhn(KTFRTFE06zg06ICLhAycyJgomhRVHSh4CEi7ODKCSH7j3(4IPCEi7IhYg4eN7czJenCeEFdz)Wei7ACazLmVijxq2TBXOLuRMBRk8NgXax4rfV)wnrX4m6IoEbPjXliacHbSRnkE5hT5Dow2OkrJQU)TyMX1EHPuSCUkMl8hdp4OGA4521DZUa1EGu)QsOQtlinULHPOOauymcJqWYJwgSqajR2CS0THRsA6kOLeP)HWN(H4dFcwXEhktbgocj0uxkUbTi7HEmMNFpcEaWf09ypUZRcm8n3gxCUij55cfNJavWDpfGfUzlMVRfZ3RUBK33J92D(risAwuyclM)g)Sp7AqWGWftmsQBD7Bp8(3bk4QwWGL9PEJAbdUMAbdo(iQ6zlTtABYwaxjXniAGIlaznvagl0oUVoidapvhGHPIFqflV8E5la8GENjjfOA41q8riVN(ACYRXiYtajjejiO0Jyj45n3FAZ78IhCxKDDhijbahDFuswji4wZRor(YbAerpEdkob28rpBcBc4FuZO7POXOJnq7JU3BTUOMh)74c1SH5b1yX89ptJvM18)MoQ(FKm)DxM5VxYeyBbr5biHJg3RTxi82l6kSc8hb4I3g85lg(8Bh(FtdEHSRJls9aBwmFh)G2UCB0gEGc6jhES5XktQeI8SyEzlM)ElMFGfJPfZ)GdOgUTn3pjS1LHzdARWYI5vlbViaYWjydfT2GSd(wfztkCScTLq)wNCRdvcLTAtTv1utMhtYnAljx8iSXDU9V3O92)E6XfkKrIK0BTcS2LZH79B4Iw)0gfhzD8RlNI6e4ctubNULZbWPb6Eth5sX)Uj)JxxAJG0lMrqTmdSYqGA2hy8iX2UPZkp6OYzkQuyYkBtp84mHBTQsBM9Ymr67O1Kj7zGKeojD58KDfi1YWNX5U7TITFKV92L0liOiMVah5JihyxjsFDPBNYfEiT9Qr)DkbRArqHzV)60Lf7RNumRAXraCcmBJmDh)yVkHRJUYOL2d22wiaY8tefCYHSdT7FAZU1UQ2vvvYcY5dw6qifS5EkioElugtgZ(zkXq(6UyiVJ3QWqMpF7DX1lx0908Klad5vXCrxvTyhTy(XUydTy(jNJZ(L28392DX(XaSFuwmBEWwQbpyG3Kz)Sy(Pop6E)SQ44Sy(htt3o8)tlg(mlMFEnzXSy(Nxu8wwm)IflBvyUeXIwHTYI51xi(N75Tk8pBp5wZVx2e32eT3)cY)C5p355F(dz(NRSk(hMNDLGDoSj4jh7BKlYMdI4ecYCjr8IL0a2CtwmZr5JWT6WIGv6HERcRe7eAHugm)2AMVL65bcZYvw0(TEwG1OwoqSIgIRQ13HbQDkHJhnuT8n1Hpd13L0h4TmiIiJ0FOEgS3i9kwxeXLh)8icereHL1)iI7RMiIfri6rmY0gk4rldtFneSc8vvI1jEbhICbkIJw9V3Gak9D7YdhvSJXdl2MdGYQpqw1DBGzncyQTG2gwcPFHu4DzSRmcf4wNAUCMx2QTy(3iTsyxTYaUAfx3B7cf6tuDc697zV0rma4w2OZDuhaHw3gAcnaW82q9)K39rXTA35grR9jldQTDqJNQ9dx10VBAVWzcWF0KjhyZd3jg8oIU1XsBoE6KDKC4E6Wwr7pVIMY3F5Sc0oP6iDbWVzaGhlwe41O8Xq8mji(bEcsy9Df5wBUNRQc3Z00YLeM9tG2cv5gocBeQkxq3k5i8kDusEHGM7rPNNxKh67rJrZDSQOSM35ktgLLpuCGgKCerLwnTU9nc6M)VGE0Dz20HONxif1CM9(kUQjui36iZm19nZ9F0AZlEVloPZ(D5YAeSBD3NspXgASqc5DA07(IRwjLVqYOIb7P)TNQ3bgA3dLSN(3ANdfQPMw7AdcSnLopPgK0DTKinTwpIOI6eRRPkjoMc0RQTIJoQb0A3bjt4aTq7KZiQXgiF(oKbhY7j7g55chNFnbXdml8PWS8jIIPFPmkfZk2t7DSrm3)u(lsnHGMMC(C2Fl(7SFG1GTDQXkQGj76GBUOYn1HqEx0iucE(eLPbhFmoE)qJ(22MD1SCXI6ORZZZhJ1vZsYmrv3U2FnEfHJqB5TvuiNRMoCy2qvA6ijIgjMF6XTlKpVAErYjGUla9RGs7TlbmLivKWrIhVmPIfjCm(L4OisjQjjORlcOKjKjekyQmGiNGD7LCX4CsUOrBSKRF3WReCCvE0hLnCcoF(mcpm2G6deJHq)uAO2t3p0y5IeXfTc7tA1XK4j5U9I62z2QYtES8rQalIfkkBi)sbzGxplMl67svxuox(GdmYTlMPG7jVyrJY6CaflHpjhqKCI4uONPm(yXJX7KcXz9fNjE6(TFWSdb9GdQlBGNREVtEogn4KxKL4OjHn5guAsfHmaJ0KLikUKbkyCg7voJKxepq3ioPlF0Zq01n0pCKiHQWyhnCSq8(9PNIGEzGF3Ic7vmVHhsfobRtsf2V4YbfYNvvxaKxnOIOGxIGYkQqewFjtKkLagmDjuq07Wiu4kZy8jIhowe)qIEL3lY)ctBJlEwMHceM7CscCVWVYG6uretYYckaTYu0iyQcahLBAfJZHsQOWyZVJMwhzsddGsjl6LeSrJZ5ycJnQFhoPaR7Lj1ddckUZ9jRyN6cRmCIhZHQIyX49LLiDjwq2qcPZ2vvekaKjiXnf30koRtEZyXchUrslpsGchlgx0t)r2qcG9EJlKFHgBXseo6P)yR(uRA5RHDkxpsm)PdPiM7lYdsEsPnzofbdJQOsexuHRXqLQhnEuXZEMufpoSI7KCH5BWKRgJVyUMht4pn(5KKr1e9jBKRiykwwWi6sLX)YiXOSXJ5qJreoFjoFqe8LV444qCmdepMsf8HuFYQiwCxel2zoIfbm1mHZzXO(IhRFX9kQdwqqsxs9ag32U(KgGiFpQu4zJ7sLIVKE05KLnHOnDv1SJRcV1Rb0H55CznOVOupkkfnkqZDiEKmXhYLKPq(YpWKe0T9yPdrbVQraXTojsKeneIuLm9qo1m2qgldNxHy5svekEdE8uIq2Jj4NbRkvQo2aXIJ6okJhIWfYpKEhYKIUvjfkEjbFfX6HteLZVY)2I4nn0(fbjsTj6vmuKioOby4kVFTtkLK6eutxLlivLyvNYXJe3VgknyrD5rLH5RElMhCLQdGvYdEGfTUVIvF(mGnGk9kEt3H4OIG54E5K4I1WPuxckkIEflWgXLHFryBCJOQyBDjIRXql6yYlLIhJlSZzV4N2MHLu0Oi42r(mIvzEPljeC(65uBYGf6GmHEXG541Y84Snoculpzse2Lm7WSN2JGQECWgkrJJeKXGxseHlbNlf1X9LI68I65Mmykznjp6p5cfLRIGmUOHJ6xpW1fgHyfqg3sXcZf2zypJgYFga0LCoqiwEm35NcUgjzDXGdmHINadY7uTgRpnxlLMSUCH1UdvDLSb3C1Ena(JNWz0ot4llq3SIkPM0SGrwL3fTyBC0YR1NUIKwKO(dOPjjoUOo4uEQ8QtmQIWyIETOoId5)HtKWFUkiwqufEivpRBt4maXatJFnaiL8OG2)KWqcJkJqvsjbJBzDb4I4phFUDrJcYzc2HUqo18LX6UPvc2yXDf2e)g17wZNbZIYbhuoZykG2SoZLRQa0ePHqPHWOYKlhQNPpvCXkd2PHrv6A4JfkuiNZI(ZS3uQfvcoiMLL13RxNqc7ok(C8(ok(91EWnRdwbGjCvVXb0HtWiwWVo5NsZo039kpQyjJPhuAsdzSmsSEq9D(XQYQAENbRLLN1VpYQWzTdjXcgevsN8Wp1SFYhFUp3tn3J)vQAEL318kFJyEnyR5Kdo7F5dp7d(8)Yx6XN5Z)f8OqjHZiaWswmOgartvqp4mFKp9jVVhUgeLpbNRNUH59LCREvfaJ7gbiMKqwWU)zp2NE2N5lmZt8yZ8c39V8R9aZ8n(YNLI)WeYJsh1ZD4VXjVVh5eFR7bMSN5ZCVZ9P)Kv1dI6QheUX0dAtOqbqDh8hThm7uFYzF0prT6br4IY7ka(X9LMPDOdt9u8m83mF(V4joYXGP8QG0Gj2CUmX2FcJKWK9STT826OqhI1lGeB2JCSzp8xfFG)TU75M(HM7(VpVgFZ7Ym)eroDwbTuf10fhxiZKino5N5fM9))DpZdEKt8ShPQLNoSRLNoU)cF9(3V8y4A9OMzmXctGhqeKmN4Hp6Sp6ZnZ98aZ9Po4S31DDIN4PCtD(48oWzGrP(YqNHKu1ZpzWKyAXMAlk5H9l8KZm1lo3d90Z9ih5e39lCYdnLhHNKnpqfbk(ZMKEa1QgQ6b7cuIJRYcz2(t8uZD)hUgpIbDEoxthqGDe)zQkw4CP(XL128bmCfkQQzj8wV40N8BE4t8e31Cp8N1RHLouyagwgjQVJFHGUMy(AShbANmd8X)yN8J)aZ(PE2zUN7htUDFLhZB)iQlJP9G6o97h)VT31ASTXXryqY(iHPPn1njnpbyiksftLv4drrkd4ciltBXuzzxzAB0AyislEY6COU7YXJYsT1bvkn2XOUYnw1wojY2OYjU2j(rASHBqcCcGb6)jqrqpG(gXKseOO)S)TDMDVJ6EqsjDIwOaDf0jE64E7S7SZS7SZUZ3AZ14g9eFuhVOM7zy(8sCYK1eKEaWt3Uk0ADPRFKfU(vl9(NgA9Rm3Rw5DVKTIHHnmrO2d2Klg28JuiJulIJwMJu8GMvx7xCeEbkE6Zl4lJVxiJmrqB6BD3p8QGUDP3)eLpYuLN4w2kcgxPfhUJG6Ht(flmsoY(biL4lYjq41ZEbyWJsFYTT2JgUi9MASxXY4HcQBPayKWW7hzZK9DZE4XwAsp5x9JN)Doh2N2p7eL(0zwc63ztL(lbXIVwsSyRHeRJGRLel09wIzQBG4rBIeRXKQZqRzKkEhRDKk2Ahdm8AxTQ97vKc3argDhFSyoDEJekbKy3CYz5XviUBFR3xxKzYr7M8UF0Vg6MCHlmrPJCdRUpVJ2BQLHUhwKFqoArOhSiyTohkQr65yVdzToRvHTU(KbJ0uPMwTRovnlnNrAEnNDHUEvrEjA7I00A76PM0ZABx8MufS21oRTDXBs1UArmyCTonUIIownOBXrW9ZDk5m85igiD7zkFMZJZ1DMtzPJMqDg3KzOoDBc3hhx2CCRpHWGYfYJRq2ohuuwcnseNcWjpwPlCJYx)KlC2PSUiQgNRD7X60PUmJoHhTPBVD0T905)u6eVnyEgu1HPaz1fXg1uIswihN5WSdkMtGxMSp3Q6EHkV1Vdnl8kx0M7fGP6zAJxe2XEIeND)2ONItif)4xV8BoZ8h7YlCZlz1)jXnT7bd54vrECIFbtkmuH8uIUW0NTY0tm)ehV8nUuP34s2250DyYJzXCiD3Qm)iG5(5YT4ijqlALtEElEqW4sLenENR4DjPUWCkUmYuFuXt4UDjCGc4wYdP(KFWc)8lcuV8nExB(mVDt(mpQtLN4LLfLrYNsUGcHQZp75lDnukUYPM12AcCVHQp)Z7BtYChAiqKMuc(nVE5Zndm(DLPVsLPVv5ZE9sN79STXrn5ZQyHCi7Ftzee4ifLDZJNCue3wTWRmBPx7YLN54LNzglm(iXmU)Ic7m3wHAVu3OGGiMwhxLN6KLp97aAXLp9rTn)9onT9VxP9EerpGhGUjZZbs3Gmgh8FWCQxpDMLvo1rRC1jl9HtyZ2W2nrzhvD3jVqw0zr5XTB3wYL5qKnCo6bbkXlDTJp)NmfoKXXEdB0pKj6hT5sFRlWE4GR(DwXU5a7FXfVR6MRquoFg09bKk7cZ9EvMyMsF6zw4N(QOhmE7FXD)yBoKnCS7HLdRdre28qtoYDn9looUkSC09h93JShgYLHo80ct9BlpXLl9w3E(Pq)Xo)BE0sx7w1WdkThnuulBE(4oZVnOJVHIrszDtcMdg4G6a8vKjbl3TuXk2EGGrnApqWiH6C14Y9(eLpajoTiC7R)rZ)RotPJmlkCrD8(HRDO1LepW3d61451EgPuwc9Ud7DiON6bA13OOh4KYWlNVLAgNEb8LvKuj5hYNGOIp8mJ3u5h5ocvp79vWtHZ24fGX2vAPULaGSTr5sbmDa9x9KKFX4R95iXxRQlr8g9tRctNDfUSg2TpHPOU18zn8(ZJNx(5nJqhUEzZi0HgqO9uniOZxIyZ1XbC(Yps3hU5aQgpiq57xhunQguW3AY8dYjKrMxm9KdLJBmEOvfUtuwz8rYiKE)khItqz80Zr)Ci(r5shwHtiDyPrLs3Fgz4DtpPmUn3ipqc0CHutEa9lREw13bfnaxeJ2Waq(ge8b1CW07(VQfzXxJGbhsJ56Fnubbcyv1c3OqXOvFfe4vOcu5eXv5MQwcI7BLtjPaMgWqaeVNsU5w8lLlZ4CY(B1NPGCnGUSU27As4wtLrt9amHvevE4xoAp6)a5SHxVn9s4gRj90)HwBWt89w9XpOOqR(gerlTwXct2c09Zm2VIXZfrYxs)vlAMb(WE6AaGvGX4mw6mWdmwMmQyAPOJDaONB1SKI)iZPuqwWh2TMTVhv0R3)RFV(NA5dXEhsVdD)ApSQRVM0MR2ShWy6QY)xKJu9rMznyMDNbHPykoYoj9gifyjYsANgKcbbisxN03EjEdSzIKEPXC)pzYPRXYPvZPnwJ3O(sUvznyvakgc6HPxDtiwlHesATBycPsqqsjCKgNwDwfKA9BB8lyMJcVMf591uT0rLEOD1xYueqsyd0goejhgdXN3hf)ZJP66pwC8IsAhVtiGm4f(pdi)GQRhNGR(ZrpaR3cVmhfgiUiI4stIIG7e0bEsDmHyIItEhech0)I0f7rYFnG6VeVubEjYQQJPkqrVBcFdvx3XfwkOKyuqJ9bEMQASzYLdA6u4atw0uEBRT2QQ8rEekL5Fh921pir)dK47VRK7yBj6l1aD3tx9T1eB2VzPnQgcNE5algT6B4m57UGSmjRWS3RbjztjfPKapykUS9NBgQgSjIVk7OXC2meIikqUqB0n(9nHEECCVpu6tlz1uS2WGygy5zGxaFKrc2qtCTPgQlISx)(3xvyTOE)GhEVAfWwBychCy6sXVCsRToaG2x8Uwc477yQIbZYOX5KH(EwrVNKMsgEkLdVRFfG6z9343rRZtRYIP4gd6sHRUcKnotZuqrSh(SCljF7W1VbTEtQY(yj1npAu3RKwmRAoRAjkQFHAkIuoG1e05CcHSRObGmOft12rfyd6Z1uxD5XrxAo5sXbTZ5wbCS6XPA0WV2hjQ7TVTn1vQb6D7BDGe7ghjAx9TLK9Mkr)1zWi0WRc7pbDWn8Fi4G0w3vYnBW0SbQPzADtafPEfpaOcRX(j5dQG0saJdJTyMILXQiSvBJmo5zytOEHGuj25os0BVMWzj)2ByV3myJMrIqPqVI2GriG(fR)GdggSxIlBYv7yVwTkWqEUXAnCjBqR)FAqRMD3S1XoFs(tnZpy9S51x39MyxBWUkmXuF0K9X(aISxbPSWFrJ)1MzW3ssSQH3kMMxDlk7n0(q7Ev2ByTpJO9z09faVPLgKKoGKGkXk7n2(0Uj((cqQgMoSyi412l))(41MKYljDWrB)az7nXkcV2cZWRngETXWRngETXWRngETXWRngETXWRngETXWRngETXWRngETXWRngETXWRngETXWRngETXWRngETXWRngETXWRngETXWRngETXWRngETXWRngETXWRngETXWRngETXWRngETXWRngETXWRngETXWRngETXWRngETXWRngETXWRngETXWRngETXWRngETXWRngETT6XRnvpUzy12sGvBQE8Kw1ZxaU(IW1xcU(YW19bx3pC5fUEa46Raxpyta31u98v1qIlvpWVpKQNVUgOyP6zD4x)nkoQQNh2Py(JQNhXaw)O65rFAdO8JQNVzAi788yf9Q65XTbCpQEEcK2p5IbASQNNYy8fR65PRre)ESLxe)UBv3sQU)9yC8AmSExdJ73TCWXJfy84jdn8p0qC)63R3I3CyZkIQUvlgX7IAjphvlzzlWME5kWU80uicS)Bv3)jIGfk06v19FM8HRxinrE8zb5rv3)fIWiiZrtYviPN3DXV7ZI3i4bfkDpo5Pheen)BK72a8LBPZ0pt6Ut)zW7)zQU)70SgLA7Ji1oHQRDasTpcktPlpPO6(FO66)mmitcss38pqKA(XRluXFuAA6bb1dxCqqOCd9hnsNbJd)nwhH7pC8ObJHI3)K7RV5aXk3FouDtuSx3f7ZDXxjnr46ZrXSQcy)sDbmSD()o</p>              </div>            </details></li><li><p>语音提示文件<br>解压之后把整个文件放到游戏安装目录 <strong>&nbsp;World of Warcraft_classic_\Interface\ &nbsp;</strong> 下</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://fu99999.lanzouw.com/iLBJh256s85a">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://assets.woozooo.com/assets/favicon.ico)">          <i class="anzhiyufont anzhiyu-icon-link" style="display: none"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">语音包</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div></li></ul><h3 id="远程武器攻击声音改-消音M24（枪-弩-弓）"><a href="#远程武器攻击声音改-消音M24（枪-弩-弓）" class="headerlink" title="远程武器攻击声音改 消音M24（枪&#x2F;弩&#x2F;弓）"></a>远程武器攻击声音改 消音M24（枪&#x2F;弩&#x2F;弓）</h3><p>解压之后把同样放到 <strong>&nbsp;World of Warcraft_classic_\Interface\ &nbsp;</strong> 目录下</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://fu99999.lanzouw.com/iV7WV256o5ha">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://assets.woozooo.com/assets/favicon.ico)">          <i class="anzhiyufont anzhiyu-icon-link" style="display: none"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">语音包</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div>]]></content>
      
      
      <categories>
          
          <category> 魔兽世界 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WA </tag>
            
            <tag> 魔兽 </tag>
            
            <tag> 游戏攻略 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WLK火法基础指南</title>
      <link href="/posts/5205e42b/"/>
      <url>/posts/5205e42b/</url>
      
        <content type="html"><![CDATA[<h3 id="属性权重"><a href="#属性权重" class="headerlink" title="属性权重"></a>属性权重</h3><p>属性权重：<strong>霜火法</strong> 命中（289等级）&#x2F; <strong>折磨火</strong> 命中（368等级）&gt; 法强 &gt; 暴击 &gt; 急速 &gt; 精神 &gt; 智力</p><h3 id="天赋及雕文"><a href="#天赋及雕文" class="headerlink" title="天赋及雕文"></a>天赋及雕文</h3><ul><li><p>天赋加点<br><strong>霜火法</strong><br><img src="/img/article/2024_07/0718/03.jpg"><br><strong>折磨火</strong><br><img src="/img/article/2024_07/0718/04.jpg">  </p></li><li><p>雕文</p></li></ul><table><thead><tr><th align="center">大雕文</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">火球雕文（折磨火）</td><td align="center">使你的火球术的施法时间减少0.15秒，但是不再造成持续伤害</td></tr><tr><td align="center">霜火雕文（霜火法）</td><td align="center">使你的霜火之箭的初始伤害值提高2%，击几率提高2%</td></tr><tr><td align="center">熔岩护甲雕文</td><td align="center">你的熔岩护甲可以提供额外的爆击几率加成，数值相当于你的精神值的20%</td></tr><tr><td align="center">活动炸弹雕文</td><td align="center">你的活动炸弹的持续伤害可以爆击</td></tr><tr><td align="center"><strong>小雕文</strong></td><td align="center"></td></tr><tr><td align="center">冲击波雕文</td><td align="center">你的冲击波消耗的法力值降低15%，但是不再击退敌人</td></tr></tbody></table><p>另外2个小雕文对于输出没有任何助益，大家可以自行选择。</p><h3 id="附魔和宝石"><a href="#附魔和宝石" class="headerlink" title="附魔和宝石"></a>附魔和宝石</h3><ul><li>附魔</li></ul><table><thead><tr><th align="center">部位</th><th align="center">附魔</th></tr></thead><tbody><tr><td align="center">头部</td><td align="center">燃烧谜团秘药（肯瑞托声望崇敬）</td></tr><tr><td align="center">肩膀</td><td align="center">强效风暴铭文（霍迪尔崇拜）</td></tr><tr><td align="center">披风</td><td align="center">亮纹刺绣（裁缝最优）&#x2F;弹力蛛丝（工程学非裁缝专业）</td></tr><tr><td align="center">胸甲</td><td align="center">附魔胸甲 - 强力属性</td></tr><tr><td align="center">手腕</td><td align="center">附魔护腕 - 超强法术能量</td></tr><tr><td align="center">手套</td><td align="center">超级加速器（工程学）</td></tr><tr><td align="center">腰带</td><td align="center">永恒腰带扣</td></tr><tr><td align="center">裤子</td><td align="center">辉煌魔线</td></tr><tr><td align="center">鞋子</td><td align="center">硝化甘油推进器</td></tr><tr><td align="center">单手武器</td><td align="center">附魔武器 - 极效法术能量</td></tr><tr><td align="center">法杖</td><td align="center">附魔法杖 - 强效法术能量</td></tr></tbody></table><ul><li>宝石<br>多彩: <strong>混乱之天焰钻石</strong>（21暴击等级，3%暴击伤害）<br>红色：<strong>符文血玉石</strong>（蓝色：19法强） <strong>符文赤玉石</strong>（紫色：23法强）<br>黄色: <ul><li>命中未达标 <strong>隐秘紫黄晶</strong> （紫色：12法强10命中） <strong>隐秘帝黄晶</strong> （蓝色：9法强8命中）</li><li>命中达标 <strong>高能紫黄晶</strong> （紫色：12法强10暴击） <strong>高能帝黄晶</strong>（蓝色：9法强8暴击）<br>蓝色: <strong>纯净恐惧石</strong>（紫色：12法强10精神） <strong>纯净曙光猫眼石</strong> （蓝色：9法强8精神）</li></ul></li></ul><h3 id="输出优先级和常用宏"><a href="#输出优先级和常用宏" class="headerlink" title="输出优先级和常用宏"></a>输出优先级和常用宏</h3><ul><li><p>输出优先级</p><ul><li>起手：偷药&gt;3秒预读霜火箭&#x2F;火球术&gt;爆发&gt;活动炸弹&gt;霜火箭&gt;镜像&gt;有瞬发炎爆打炎爆&gt;活动炸弹没了补炸弹</li><li>细节处理：活动炸弹没了打完霜火&#x2F;火球之后打瞬发炎爆还是补活动炸弹？<ol><li>只有大括号的情况下 霜火&#x2F;火球&gt;炸弹&gt;炎爆</li><li>大括号+小括号的情况下 霜火&#x2F;火球&gt;炎爆&gt;炸弹</li></ol></li><li>目标35%到血量时有12%的增伤斩杀，注意留技能</li></ul></li><li><p>宏命令<br>烈焰风暴98999</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#showtooltip 烈焰风暴</span></span><br><span class="line">/cast [@cursor] 萨隆邪铁炸弹</span><br><span class="line">/castsequence [@cursor] reset=10 烈焰风暴,烈焰风暴(等级 8),烈焰风暴,烈焰风暴,烈焰风暴</span><br></pre></td></tr></table></figure><p>素质5连宏</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#showtooltip </span></span><br><span class="line">/castsequence [@cursor] reset=10/combat 龙息术,烈焰风暴(等级 9),冲击波,烈焰风暴(等级 8),冰锥术</span><br></pre></td></tr></table></figure><p>暴风雪指向宏</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#showtooltip 暴风雪</span></span><br><span class="line">/cast [@cursor] 暴风雪</span><br></pre></td></tr></table></figure><p>渐隐宏，按一下隐身再按一下取消隐身</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#showtooltip 隐形术</span></span><br><span class="line">/stopcasting</span><br><span class="line">/CancelAura 隐形术</span><br><span class="line">/cast 隐形术</span><br></pre></td></tr></table></figure><p>焦点打断宏</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#showtooltip 法术反制</span></span><br><span class="line">/clearfocus [target=focus,dead]</span><br><span class="line">/clearfocus [target=focus,noexists]</span><br><span class="line">/cast [target=focus,harm,exists][harm] [target=targettarget, harm][target=mouseover,harm] 法术反制</span><br></pre></td></tr></table></figure><p>焦点变羊宏（注意替换自己的变形术）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#showtooltip 变形术(龟)</span></span><br><span class="line">/clearfocus [target=focus,dead]</span><br><span class="line">/clearfocus [target=focus,noexists]</span><br><span class="line">/cast [target=focus,harm,exists][harm] [target=targettarget, harm][target=mouseover,harm] 变形术(龟)</span><br></pre></td></tr></table></figure><p>法力青玉，左键使用，右键销毁并重新制作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#showtooltip 法力青玉</span></span><br><span class="line">/use [btn:1] 法力青玉</span><br><span class="line">/stopmacro [btn:1]</span><br><span class="line">/script <span class="built_in">local</span> g,i,j=GetContainerItemLink <span class="keyword">for</span> i=0,4 <span class="keyword">do</span> <span class="keyword">for</span> j=1,20 <span class="keyword">do</span> <span class="keyword">if</span> g(i,j) <span class="keyword">then</span> <span class="keyword">if</span> strfind(g(i,j),<span class="string">&quot;:33312:&quot;</span>) <span class="keyword">then</span> PickupContainerItem(i,j) DeleteCursorItem() end end end end</span><br><span class="line">/cast 制造法力宝石(等级 6)</span><br></pre></td></tr></table></figure><p>取消冰箱宏</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#showtooltip 寒冰屏障</span></span><br><span class="line">/cancelaura 寒冰屏障</span><br></pre></td></tr></table></figure><p>爆发宏</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#showtooltip 冰冷血脉</span></span><br><span class="line">/use 10</span><br><span class="line">/use 13</span><br><span class="line">/use 14</span><br><span class="line">/cast 狂暴(种族特长)</span><br><span class="line">/cast 冰冷血脉</span><br><span class="line">/use 法力青玉</span><br><span class="line">/use 加速药水</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 魔兽世界 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 魔兽 </tag>
            
            <tag> 宏命令 </tag>
            
            <tag> 游戏攻略 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WLK防骑基础指南</title>
      <link href="/posts/3a65933b/"/>
      <url>/posts/3a65933b/</url>
      
        <content type="html"><![CDATA[<h3 id="属性权重"><a href="#属性权重" class="headerlink" title="属性权重"></a>属性权重</h3><p>基础属性权重：<br>        防御等级需要达到541等级才能免爆（附魔1W荣誉换的强效斗士铭文，达到537等级即可）<br>        8%命中（263等级，技能无未命中）<br>        26精准（BOSS正面无躲闪招架）<br>影响仇恨属性权重：<br>        力量 &gt; 命中 &gt; 攻强 &gt; 急速 &gt; 精准 &gt; 暴击 &gt; 敏捷 &gt; 格挡值<br>        WLK版本推荐走血甲流，FQ本身不缺仇恨，命中精准不达标只会影响开怪的时候可能出现技能未命中，操作得当的话不会有什么影响。</p><h3 id="天赋雕文"><a href="#天赋雕文" class="headerlink" title="天赋雕文"></a>天赋雕文</h3><ul><li><p>天赋加点<br><img src="/img/article/2024_07/0718/05.jpg"></p></li><li><p>雕文</p></li></ul><p>大雕文前两个常驻，第三个根据情况来选择，拯救雕文多一个减伤技能，锤子雕文拉群怪更好。</p><table><thead><tr><th align="center">大雕文</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">神圣恳求雕文(常驻)</td><td align="center">当神圣恳求处于激活状态时，你受到的所有伤害降低3%</td></tr><tr><td align="center">真理圣印雕文(常驻)</td><td align="center">你的复仇圣印和腐蚀圣印在激活状态下可以为你提供10精准</td></tr><tr><td align="center">拯救雕文</td><td align="center">当你对自己施放拯救之手时，你受到的伤害也降低20%</td></tr><tr><td align="center">正义之锤雕文</td><td align="center">你的正义之锤攻击的目标增加1个</td></tr><tr><td align="center"><strong>小雕文</strong></td><td align="center"></td></tr><tr><td align="center">圣疗雕文</td><td align="center">使你的圣疗术的冷却时间缩短5分钟</td></tr><tr><td align="center">真理雕文</td><td align="center">当你的感知亡灵技能处于激活状态下时，使你对亡灵造成的伤害提高1%</td></tr></tbody></table><h3 id="附魔宝石"><a href="#附魔宝石" class="headerlink" title="附魔宝石"></a>附魔宝石</h3><ul><li>附魔</li></ul><table><thead><tr><th>部位</th><th>附魔</th></tr></thead><tbody><tr><td>头部</td><td>坚定防御者秘药（银色北伐军崇敬）</td></tr><tr><td>肩膀</td><td>强效斗士铭文（1W荣誉兑换）&#x2F; 强效巅峰铭文（霍迪尔崇拜）</td></tr><tr><td>披风</td><td>附魔披风 - 极效护甲</td></tr><tr><td>胸甲</td><td>附魔胸甲 - 强效防御</td></tr><tr><td>护腕</td><td>附魔护腕 - 特效耐力</td></tr><tr><td>武器</td><td>附魔武器 - 猫鼬</td></tr><tr><td>盾牌</td><td>附魔盾牌 - 防御</td></tr><tr><td>手套</td><td>装甲护网（工程学）</td></tr><tr><td>腰带</td><td>永恒腰带扣</td></tr><tr><td>腿</td><td>霜皮腿甲片</td></tr><tr><td>鞋</td><td>硝化甘油推进器</td></tr></tbody></table><ul><li>宝石<br>多彩：<strong>质朴之大地侵攻钻石</strong>（32耐力，2%装备护甲）<br>红色：<strong>狡诈曙光猫眼石</strong>（蓝色：8敏12耐）&#x2F; <strong>狡诈恐惧石</strong>（紫色：10敏15耐）触发多彩<br>黄色：缺防等<strong>华丽森林翡翠</strong>（蓝色：8防12耐）&#x2F; <strong>华丽祖尔之眼</strong>（紫色：10防15耐） 防等达标直接插 <strong>致密天蓝石</strong>（蓝色：24耐）&#x2F; <strong>致密巨锆石</strong>（紫色：30耐）<br>蓝色：防等达标直接插 <strong>致密天蓝石</strong>（蓝色：24耐）&#x2F; <strong>致密巨锆石</strong>（紫色：30耐）</li></ul><h3 id="仇恨技能优先级和常用宏"><a href="#仇恨技能优先级和常用宏" class="headerlink" title="仇恨技能优先级和常用宏"></a>仇恨技能优先级和常用宏</h3><p>起手开BOSS：清算 &gt; 翅膀 &gt; 飞盾 &gt; 审判 &gt; 696循环</p><p>696循环：不能插奉献雕文，强化审判只能点1点。所谓696循环就是在FQ的两大核心技能6秒正义盾击和6秒正义之锤之间按照仇恨最高的技能优先级填充的打法。<br>单目标：盾击 + 填充技能 + 锤子 &#x2F; 多目标的时候只需要把盾击和锤子换一下顺序即可  填充技能优先级： 奉献 &gt; 审判 &gt; 神盾<br>例如：盾击 - 奉献 - 锤子 - 审判 - 盾击 - 神盾 - 锤子 - 奉献 - 盾击</p><ul><li>宏命令<br>696循环一键懒人宏 在站桩BOSS可以使用,在应对较灵活的场景不建议使用。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/startattack</span><br><span class="line">/castsequence reset=8/combat 正义盾击,奉献,正义之锤,智慧审判,正义盾击,神圣之盾,正义之锤,奉献,正义盾击,智慧审判,正义之锤,神圣之盾</span><br><span class="line"></span><br></pre></td></tr></table></figure>696循环灵活2键宏 把696循环拆解成2个宏,可以搭配其他技能非常灵活,大多数场景都可应对,把这两个宏放倒技能栏 1 和 2 上,12对按即可实现696循环（推荐使用）<br>核心技能正义之锤和正义盾击<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/startattack</span><br><span class="line">/castsequence reset=5.5/combat 正义之锤,正义盾击</span><br></pre></td></tr></table></figure>填充技能奉献 审判 神盾<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/startattack</span><br><span class="line">/castsequence reset=8/combat 奉献,智慧审判,神圣之盾</span><br></pre></td></tr></table></figure>牺牲取消宏，取消吸收伤害，只要20%团队减伤<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#showtooltip 神圣牺牲</span></span><br><span class="line">/cancelaura 神圣牺牲</span><br><span class="line">/cast 神圣牺牲</span><br></pre></td></tr></table></figure>审判宏<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#showtooltip</span></span><br><span class="line">/cast 智慧审判</span><br><span class="line">/startattack</span><br></pre></td></tr></table></figure>取消无敌宏<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#showtooltip  圣盾术</span></span><br><span class="line">/cancelaura 圣盾术</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 魔兽世界 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 魔兽 </tag>
            
            <tag> 宏命令 </tag>
            
            <tag> 游戏攻略 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WLK生存猎基础指南</title>
      <link href="/posts/bf190a3a/"/>
      <url>/posts/bf190a3a/</url>
      
        <content type="html"><![CDATA[<h3 id="属性权重"><a href="#属性权重" class="headerlink" title="属性权重"></a>属性权重</h3><p>属性权重： 命中8%（263等级）＞ 敏捷 ＞ 暴击（60%）＞ AP ＞ 物穿 ＞ 急速<br>猎人本体命中会也会影响宠物的命中，所以命中要作为第一优先级属性，达标之后首选高敏高爆的装备，急速的收益最低，急速不会减少GCD，只能到稳固射击和乱射的读条。</p><h3 id="天赋及雕文"><a href="#天赋及雕文" class="headerlink" title="天赋及雕文"></a>天赋及雕文</h3><ul><li>天赋加点<br><img src="/img/article/2024_07/0718/01.jpg"></li><li>雕文</li></ul><table><thead><tr><th align="center">大雕文</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">杀戮射击雕文</td><td align="center">杀戮射击冷却时间缩短6秒</td></tr><tr><td align="center">爆炸射击雕文</td><td align="center">爆炸射击暴击率提高4%</td></tr><tr><td align="center">爆炸陷阱雕文</td><td align="center">爆炸陷阱的持续伤害可以暴击</td></tr><tr><td align="center"><strong>小雕文</strong></td><td align="center"></td></tr><tr><td align="center">治疗宠物雕文</td><td align="center">你的治疗宠物法术可以略微提高宠物的快乐值</td></tr><tr><td align="center">复活宠物雕文</td><td align="center">使你在施放复活宠物时因受到伤害而承受的施法推迟时间缩短100%</td></tr><tr><td align="center">假死雕文</td><td align="center">你的假死技能的冷却时间缩短5秒</td></tr></tbody></table><ul><li>宠物加点<br><img src="/img/article/2024_07/0718/02.jpg"></li></ul><h3 id="附魔和宝石"><a href="#附魔和宝石" class="headerlink" title="附魔和宝石"></a>附魔和宝石</h3><ul><li>附魔</li></ul><table><thead><tr><th align="center">部位</th><th align="center">附魔</th></tr></thead><tbody><tr><td align="center">头盔</td><td align="center">折磨秘药（黑锋骑士团-崇敬声望）</td></tr><tr><td align="center">肩膀</td><td align="center">强效利斧铭文（霍迪尔之子-崇拜声望）</td></tr><tr><td align="center">披风</td><td align="center">高弹力衬垫（工程学375）</td></tr><tr><td align="center">胸部</td><td align="center">附魔胸甲 - 强力属性</td></tr><tr><td align="center">护腕</td><td align="center">附魔护腕 - 强效突袭</td></tr><tr><td align="center">手</td><td align="center">附魔手套 - 特效敏捷 或 超级加速器（工程学）</td></tr><tr><td align="center">腰带</td><td align="center">永恒腰带扣</td></tr><tr><td align="center">腿</td><td align="center">冰鳞腿甲片（制皮）</td></tr><tr><td align="center">脚</td><td align="center">硝化甘油推进器</td></tr><tr><td align="center">单手武器</td><td align="center">附魔武器 - 超强潜能</td></tr><tr><td align="center">双手武器</td><td align="center">附魔双手武器 - 杀戮</td></tr><tr><td align="center">远程武器</td><td align="center">觅心瞄准镜</td></tr></tbody></table><ul><li>宝石<br><strong>命中达标多彩触发之后，无视镶孔奖励，直接强插敏捷宝石（精致血玉石&#x2F;精致龙眼石）</strong><br>多彩插槽：<strong>残酷之大地侵攻钻石</strong>（21敏3%暴伤）<br>红色插槽：<strong>精致血玉石</strong>（蓝色：16敏） &#x2F; <strong>精致赤玉石</strong>（紫色：20敏） 命中不够的时候插 <strong>反光帝黄晶</strong>（蓝色：8敏8命中）&#x2F; <strong>反光紫黄晶</strong>（紫色：10敏10命中）<br>黄色插槽：命中不够的时候插 <strong>刚硬秋色石</strong> (蓝色：16命中) &#x2F; <strong>刚硬王者琥珀</strong>（紫色：20命中） 或 <strong>反光帝黄晶</strong>（蓝色：8敏8命中）&#x2F; <strong>反光紫黄晶</strong>（紫色：10敏10命中）<br>一般情况下触发多彩宝石，只需要插1个蓝槽，根据实际情况可以插 <strong>狡诈曙光猫眼石</strong>（蓝色：8敏12耐）&#x2F; <strong>狡诈恐惧石</strong>（紫色：10敏15耐） 或者 <strong>轻盈森林翡翠</strong>（蓝色：8命中，12耐）&#x2F; <strong>轻盈祖尔之眼</strong>（紫色：10命中15耐）</li></ul><h3 id="输出优先级和常用宏"><a href="#输出优先级和常用宏" class="headerlink" title="输出优先级和常用宏"></a>输出优先级和常用宏</h3><ul><li>输出优先级<ol><li>单体优先级为：杀戮射击&gt;爆炸射击&gt;爆炸陷阱&gt;毒蛇钉刺&gt;瞄准&#x2F;多重&gt;稳固射击</li><li>双目标优先级为：杀戮射击&gt;爆炸射击&gt;爆炸陷阱&gt;多重&gt;毒蛇钉刺&gt;稳固射击</li><li>三目标优先级：杀戮射击&gt;爆炸陷阱&gt;乱射(有加速buff)&gt;爆炸射击&gt;多重(无嗜血)&gt;乱射(无加速buff)</li><li>4目标及以上优先级：爆炸陷阱&gt;乱射(有加速buff)&gt;偷杀戮射击&gt;乱射(无加速buff)&gt;爆炸射击</li></ol></li><li>宏命令<br>434爆炸射击宏<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#showtooltip 爆炸射击</span></span><br><span class="line">/cast 狂怒之嚎</span><br><span class="line">/petattack</span><br><span class="line">/castsequence reset=2,target 爆炸射击,爆炸射击(等级 3)</span><br><span class="line">/cast 杀戮命令</span><br><span class="line">/script UlErrorsFrame:Clear()</span><br></pre></td></tr></table></figure>鼠标指向乱射宏<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#showtooltip 乱射</span></span><br><span class="line">/use [@cursor]萨隆邪铁炸弹</span><br><span class="line">/cast [@cursor]乱射</span><br><span class="line">/petattack</span><br></pre></td></tr></table></figure>多重射击&#x2F;瞄准射击，按住Alt切换成瞄准射击<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#showtooltip</span></span><br><span class="line">/cast [mod:Alt]瞄准射击</span><br><span class="line">/cast 多重射击</span><br><span class="line">/script UlErrorsFrame:Clear()</span><br></pre></td></tr></table></figure>龙鹰&#x2F;蝰蛇切换宏<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#showtooltip </span></span><br><span class="line">/castsequence 龙鹰守护,蝰蛇守护</span><br></pre></td></tr></table></figure>爆炸陷阱宏<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#showtooltips</span></span><br><span class="line">/cast [@cursor]陷阱发射器:爆炸陷阱(等级 1)</span><br></pre></td></tr></table></figure>稳固射击宏<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#showtooltip 稳固射击</span></span><br><span class="line">/cast 杀戮命令</span><br><span class="line">/cast 稳固射击</span><br><span class="line">/petattack</span><br></pre></td></tr></table></figure>焦点目标误导宏，不做焦点默认是给自己的宠物误导<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#showtooltip 误导</span></span><br><span class="line">/cast [target=focus,<span class="built_in">help</span>][<span class="built_in">help</span>][target=targettarget,<span class="built_in">help</span>][target=pet]误导</span><br><span class="line">/script <span class="built_in">local</span> u,t=UnitName,<span class="string">&quot;focus&quot;</span>;t=u(t);<span class="keyword">if</span> not t <span class="keyword">then</span> t=u(<span class="string">&quot;targettarget&quot;</span>);end;<span class="keyword">if</span> t <span class="keyword">then</span> SendChatMessage(<span class="string">&quot;我已误导 &quot;</span>..t,<span class="string">&quot;yell&quot;</span>);end</span><br></pre></td></tr></table></figure>一键近战宏<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#showtooltip 摔绊</span></span><br><span class="line">/castsequence reset=5 摔绊,猛禽一击,摔绊,猫鼬撕咬</span><br><span class="line">/cast! 自动射击</span><br></pre></td></tr></table></figure>逃脱宏<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#showtolltip 逃脱</span></span><br><span class="line">/cast 逃脱</span><br><span class="line">/cancelaura 降落伞</span><br></pre></td></tr></table></figure>爆发宏，第二行放上自己的种族技能，我用的是巨魔LR<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#showtooltip 急速射击</span></span><br><span class="line">/cast 急速射击</span><br><span class="line">/cast 狂暴(种族特长)</span><br><span class="line">/cast 野性呼唤</span><br><span class="line">/use 13</span><br><span class="line">/use 14</span><br><span class="line">/use 10</span><br><span class="line">/use 加速药水</span><br></pre></td></tr></table></figure></li><li>宠物相关宏<br>一个合格的猎人，必须要会灵活控制宠物，单体战斗中宠物占比10-12%的DPS。<br>控制宠物攻击宏<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#showtooltip 杀戮命令</span></span><br><span class="line">/petattack</span><br><span class="line">/petdefensive</span><br><span class="line">/cast 杀戮命令</span><br></pre></td></tr></table></figure>控制宠物跟随主人<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/petpassive</span><br><span class="line">/petfollow</span><br></pre></td></tr></table></figure>多合一宠物技能宏，没有宠物召唤宠物，有宠物是治疗宠物，宠物死亡右键点击是复活宠物，没有死亡是解散宠物。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#showtooltip 治疗宠物</span></span><br><span class="line">/castsequence [@pet,dead,nomod] 复活宠物; [btn:2,pet,nomod] 解散野兽;[nopet,nomod]reset=2 召唤宠物,复活宠物;[nomod]reset=2 治疗宠物, 解散野兽</span><br></pre></td></tr></table></figure>秒收宠物宏，开荒神技，TBC版本就在用，注意<strong>嗷呜</strong>替换成你自己的宠物名字，还要确定背包中有蒸汽车控制器<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#showtooltip 召唤宠物</span></span><br><span class="line">/cast [nopet,@pet,nodead]召唤宠物</span><br><span class="line">/petattack [pet:嗷呜][harm,exists]</span><br><span class="line">/stopmacro [nopet][@pet,dead]</span><br><span class="line">/use [pet:嗷呜]蒸汽车控制器</span><br><span class="line">/cancelaura 蒸汽坦克控制器</span><br><span class="line">/stopmacro [nopet:蒸汽坦克]</span><br><span class="line">/run PetDismiss()</span><br></pre></td></tr></table></figure>解除主人自身控制宏<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#showtooltip 主人的召唤</span></span><br><span class="line">/stopcasting</span><br><span class="line">/cast [<span class="built_in">help</span>]主人的召唤;[target=player,<span class="built_in">help</span>]主人的召唤;</span><br><span class="line">/cast 疾奔 </span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 魔兽世界 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 魔兽 </tag>
            
            <tag> 宏命令 </tag>
            
            <tag> 游戏攻略 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IntelliJ IDEA 2024激活教程</title>
      <link href="/posts/62b41ced/"/>
      <url>/posts/62b41ced/</url>
      
        <content type="html"><![CDATA[<h2 id="idea-2024-01版本激活"><a href="#idea-2024-01版本激活" class="headerlink" title="idea 2024.01版本激活"></a>idea 2024.01版本激活</h2><p>先在<a href="https://www.jetbrains.com.cn/idea/promo/?bd_vid=8524920405083365743">官网</a>下载好idea，安装完成后点击<a href="https://pan.baidu.com/s/1xlB1qq7OeiZouDj26M8a-A?pwd=vus3">下载</a>脚本工具包。</p><ol><li>打开工具包中的<strong>install-current-user.vbs</strong>文件，弹出的窗口点击确定等待1-2分钟直到出现 <strong>Done.</strong> 的提示点确定。<br><img src="/img/article/2024_07/0711/01.jpg"><br><img src="/img/article/2024_07/0711/02.jpg"><br><img src="/img/article/2024_07/0711/03.jpg"></li><li>点击<a href="http://jets.idejihuo.com/v2">地址</a>下载激活码。<br><img src="/img/article/2024_07/0711/04.jpg"></li><li>复制激活码打开idea粘贴激活，如果出现错误按照上面步骤重试即可。<br><img src="/img/article/2024_07/0711/05.jpg"></li></ol><h2 id="常见问题和推荐插件"><a href="#常见问题和推荐插件" class="headerlink" title="常见问题和推荐插件"></a>常见问题和推荐插件</h2><div class="note blue anzhiyufont anzhiyu-icon-dengpao simple"><p>idea下载插件超时</p></div><blockquote><p>访问以下地址： <a href="http://tool.chinaz.com/speedtest/plugins.jetbrains.com">http://tool.chinaz.com/speedtest/plugins.jetbrains.com</a><br>找到耗时最短的服务器 例如: 13.35.49.114<br>修改hosts文件<br>    在C:\Windows\System32\drivers\etc\hosts中最后添加<br>    13.35.49.114 plugins.jetbrains.com</p></blockquote><div class="note blue anzhiyufont anzhiyu-icon-dengpao simple"><p>常用插件</p></div><ol><li><strong>Lombok</strong><blockquote><p>Lombok能以简单的注解形式来简化java代码，提高开发人员的开发效率。</p></blockquote></li><li><strong>codeGlance</strong><blockquote><p>快速定位代码。右侧小地图。 这个主要是代码过多方便定位</p></blockquote></li><li><strong>Translation</strong><blockquote><p>在平时的开发中，有时候对于变量的命名是否很头疼，这款插件可以帮助你翻译单词，对于英语差的同学真是福音</p></blockquote></li><li><strong>Free Mybatis plugin</strong><blockquote><p>生成mapper xml文件 快速从代码跳转到mapper及从mapper返回代码 mybatis自动补全及语法错误提示 集成mybatis generator gui界面 这个插件超级实用，可以从mapper接口跳转到mybatis的xml文件中，还能找到对应的方</p></blockquote></li><li><strong>Rainbow Brackets</strong><blockquote><p>彩虹括号，代码中有多个括号会显示不同的颜色。</p></blockquote></li><li><strong>RestfulToolkit</strong><blockquote><p>根据 URL 直接跳转到对应的方法定义 ( 快捷键搜索 Ctrl + Alt + N 或者 Ctrl + \ ); —这个个人感觉非常好用，和Ctrl + F一样重要</p></blockquote></li><li><strong>Bito</strong><blockquote><p>Bito 是一个继Copilot之后的又一款神级IDEA代码辅助插件,它的强大之处就是可以通过类似于ChatGPT对话的方式来编写代码，分析代码等，生成的代码可以复制以及直接插入。最最关键的是它的注册流程很简单，而且免费，不用科学上网。</p></blockquote></li></ol>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> 教程 </tag>
            
            <tag> 开发工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>桌面美化</title>
      <link href="/posts/6ad0178d/"/>
      <url>/posts/6ad0178d/</url>
      
        <content type="html"><![CDATA[<ul><li><strong>准备工作</strong><br>最近配了新的电脑，给桌面好好的美化了一番，最后效果如图所示。<br>需要准备的软件：<ol><li>Winstep Nexus</li><li>TranslucentTB</li><li>Rainmeter</li><li>Wallpaper Engine</li></ol></li></ul><p>下载地址放到了文章末尾，下面分享下美观过程。<br><img src="/img/article/2024_07/0709/01.jpg"></p><ul><li><p><strong>Winstep Nexus</strong> 是来自国外的一款桌面导航软件，能够拖曳任何程序图标到Dock上，功能强大，便捷实用。<br>安装完成之后，首先给Dock栏设置成透明。右下角图标打开首选项，在外观中选择Dock透明度，拉到100%点击确定应用。<br><img src="/img/article/2024_07/0709/02.jpg"><br>把自带的多余的图标都删掉，插入自己的程序启动图标即可。<br><img src="/img/article/2024_07/0709/03.jpg"></p></li><li><p><strong>TranslucentTB</strong> 是一款可以实现将win10的任务窗进行透明设置的软件，软件使用操作方式十分简单，下载安装之后直接点击就可以轻松完成，软件体积极小，不占用内存。<br>安装完成设置一下即可。<br><img src="/img/article/2024_07/0709/04.jpg"></p></li><li><p><strong>Rainmeter</strong> 雨滴插件是一款桌面美化工具，我们只需要用到其中的一款时钟的皮肤，安装完成之后双击工具包中的<strong>Welfare_1.0.rmskin</strong>把皮肤也一起安装到插件里面。打开Rainmeter管理器创建并加载空主题，然后在皮肤中选择刚才安装的皮肤Welfare，加载Clock.ini。<br><img src="/img/article/2024_07/0709/05.jpg"><br><img src="/img/article/2024_07/0709/06.jpg"><br>调整适当的位置，最后效果如图<br><img src="/img/article/2024_07/0709/07.jpg"></p></li><li><p><strong>Wallpaper Engine</strong> 这个不用多说了，steam上非常用名的壁纸引擎，最后选择一个你喜欢的壁纸完成~ 我用的壁纸叫 SY-飘飘欲仙，其他用到的软件都整合到一起，点击下方链接下载即可。</p></li><li><p><strong>软件获取</strong></p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://fu99999.lanzouw.com/ifBDh23zrilc">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://assets.woozooo.com/assets/favicon.ico)">          <i class="anzhiyufont anzhiyu-icon-link" style="display: none"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">桌面美化工具包</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div></li></ul>]]></content>
      
      
      <categories>
          
          <category> 生活日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从零开始搭建博客</title>
      <link href="/posts/5658bba9/"/>
      <url>/posts/5658bba9/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前我是把博客部署在GiteePages上，免费并且在大陆访问速度也不错。现在GiteePages的功能下线了，官方也没有给出明确的时间恢复。随着学习东西越来越多，自己的笔记越来越多，做个博客还是很有必要的，除了能记录下自己的生活和学习，还能把自己踩过的坑分享给别人，也是件不错的事😊。本文主打白嫖0成本即可实现，现在方案是把Hexo提交给GitHub仓库中，通过Cloudflare托管访问，实测访问速度勉强能用，域名是统一的xxx.pages.dev，也可以自己准备个域名在部署完成之后修改为自己的域名。这里在解释下为什么不直接部署在GitHubPages上，原因不用多说了，大陆几乎访问不了且在GitHubPages上部署仓库必须是公开的，出于个人信息安全考虑，使用cloudflare pages部署比较好。</p><h2 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h2><ol><li>安装Git</li><li>安装Node.js</li><li>安装Hexo</li><li>注册GitHub</li><li>生成SSH秘钥添加到GitHub账号中</li><li>创建GitHub仓库，将hexo上传到GitHub仓库</li><li>注册Cloudflare并在Pages部署你的hexo博客(完成~~白嫖版😋)</li><li>设置个人域名(需要花钱)</li></ol><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><p>Git的<a href="https://git-scm.com/download/win"><strong>官网</strong></a>国内访问速度超慢，我这已经有下载包的安装包，直接<a href="https://fu99999.lanzouw.com/ijcfX23kcazi"><strong>点击下载</strong></a>即可。<br>安装完成之后在命令行里输入 <mark class="hl-label blue">git&nbsp;--version</mark>  来查看一下版本验证是否安装成功。</p><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p>Hexo是基于node.js编写的，所以需要安装一下node.js和里面的npm工具。<br>直接在<a href="https://nodejs.org/zh-cn/"><strong>官网</strong></a>进行下载，这里推荐下载“长期维护版”。<br>按步骤安装好后<mark class="hl-label blue">Win&nbsp;+&nbsp;R</mark> 打开命令提示符，再输入<mark class="hl-label blue">npm</mark> 回车，如果出现如图所示的帮助内容则说明npm安装成功且环境配置正确。<br><img src="/img/article/2024_07/0705/01.jpg"><br>如果出现 <span class='p red'>node 不是内部或外部命令，也不是可运行的程序或批处理文件</span>的提示，按照如下步骤来修复环境:</p><details class="folding-tag" ><summary> 添加环境变量 </summary>              <div class='content'>              <p><img src="/img/article/2024_07/0705/02.jpg"><br><img src="/img/article/2024_07/0705/03.jpg"><br><img src="/img/article/2024_07/0705/04.jpg"></p><p>然后一路“确定”，再重新测试环境即可。</p>              </div>            </details><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>git和nodejs安装好后，就可以安装Hexo了，首先创建一个文件夹用来存放博客文件，然后进入文件夹，右键 <mark class="hl-label blue">Open&nbsp;Git&nbsp;Bash&nbsp;here</mark> <br>输入下面命令来安装Hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>安装完后输入 <mark class="hl-label blue">hexo&nbsp;-v</mark>  验证是否安装成功<br>接下来构建Hexo,即初始化我们的博客，输入 <mark class="hl-label blue">hexo&nbsp;init&nbsp;folder</mark>  folder替换成你的文件夹名字，例如我创建的叫hexoblog，执行完成如下图</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init hexoblog</span><br></pre></td></tr></table></figure><p><img src="/img/article/2024_07/0705/05.jpg"></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;folder&gt;</span><br><span class="line">├── _config.yml     //主题配置文件</span><br><span class="line">├── package.json    //npm文件</span><br><span class="line">├── node_modules    //依赖包</span><br><span class="line">├── scaffolds       //模板文件夹</span><br><span class="line">├── source          //博客源文件</span><br><span class="line">|   ├── _drafts     //可删</span><br><span class="line">|   └── _posts      //存储你写的文章的文件夹</span><br><span class="line">└── themes          //放置主题的文件夹</span><br></pre></td></tr></table></figure><p>更换hexo其他主题和一些美化的配置这里就不做演示了，具体可以到Hexo的<a href="https://hexo.io/zh-cn/"><strong>官方文档</strong></a>中查阅学习<br>这里再解释一下Hexo常用的几个命令，后面部署中会用到。</p><ol><li><mark class="hl-label blue">hexo&nbsp;g</mark>  ----- 生成博客静态页面(hexo generate)</li><li><mark class="hl-label blue">hexo&nbsp;s</mark>  ----- 本地浏览博客(hexo server)本地浏览地址：http://localhost:4000</li><li><mark class="hl-label blue">hexo&nbsp;cl</mark>  ---- 清理 hexo g 生成的内容(hexo clean)</li><li><mark class="hl-label blue">hexo&nbsp;d</mark>  ----- 发布博客(hexo deploy)</li></ol><h3 id="注册GitHub"><a href="#注册GitHub" class="headerlink" title="注册GitHub"></a>注册GitHub</h3><p>接下来就去注册一个github账号，用来存放我们的网站。大多数小伙伴应该都有了吧，作为一个合格的程序猿（媛）还是要有一个的。<br>国内访问github时好时坏，如果打不开网页，可能需要魔法来辅助下，具体操作方法可在<a href="https://94a1f649.wind-of-grace.pages.dev/posts/812d49a5/">科学上网</a>一文中查阅。(校验码联系博主获取)</p><h3 id="生成SSH添加到GitHub"><a href="#生成SSH添加到GitHub" class="headerlink" title="生成SSH添加到GitHub"></a>生成SSH添加到GitHub</h3><p>注册GitHub账号后，我们回到桌面右键 <mark class="hl-label blue">Open&nbsp;Git&nbsp;Bash&nbsp;here</mark> ，然后输入下面命令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;yourname&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;youremail&quot;</span></span><br></pre></td></tr></table></figure><p>yourname输入你的GitHub用户名，youremail输入你GitHub的邮箱，配置好之后创建SSH，输入下面命令一路回车</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;youremail&quot;</span></span><br></pre></td></tr></table></figure><p>完成之后在C盘Users中的.ssh文件夹中找到id_rsa.pub，用记事本打开复制里面的秘钥。打开GitHub右上角点击头像Settings点击SSH and GPG keys创建一个新的SSH起个名字，把刚才的秘钥复制进去如图所示:<br><img src="/img/article/2024_07/0705/06.jpg"><br>添加完成之后在<mark class="hl-label blue">git&nbsp;bash</mark> 输入下面命令，出现你的用户名，那就添加成功了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p><img src="/img/article/2024_07/0705/07.jpg"></p><h3 id="创建GitHub仓库，将hexo上传到GitHub仓库"><a href="#创建GitHub仓库，将hexo上传到GitHub仓库" class="headerlink" title="创建GitHub仓库，将hexo上传到GitHub仓库"></a>创建GitHub仓库，将hexo上传到GitHub仓库</h3><p>打开GitHub，在右上角处点击New repository。<br>设置仓库名称(尽量不用使用中文命名)，属性选择私人仓库。这里说明一下因为我们要使用Cloudflare部署博客，需要把博客的源码上传到仓库中，出于对个人信息的安全考虑，所以设置为私人仓库。创建完成之后，复制git链接，建议使用SSH链接。<br><img src="/img/article/2024_07/0705/08.jpg"><br>在除C盘外的任意盘根目录下，右键 <mark class="hl-label blue">Open&nbsp;Git&nbsp;Bash&nbsp;here</mark> 输入:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:yourname/example.git</span><br></pre></td></tr></table></figure><p>这里把链接替换成你自己的用户名和仓库名，会自动下载仓库的文件夹，注意当前目录不要有和仓库同名的文件夹。<br>将之前博客文件全部复制到github仓库文件夹内如图：（PS：这里我复制的是我自己的博客文件）<br><img src="/img/article/2024_07/0705/09.jpg"><br>git常用的几个命令：</p><ol><li><mark class="hl-label blue">git&nbsp;init</mark>  ----- 创建git仓库</li><li><mark class="hl-label blue">git&nbsp;add&nbsp;.</mark>  ----- 将所有文件添加到暂存区</li><li><mark class="hl-label blue">git&nbsp;commit&nbsp;-m&nbsp;"更新博客内容"</mark>  ----- 将暂存区内容添加到本地仓库中，"更新博客内容"是本次更新的内容描述</li><li><mark class="hl-label blue">git&nbsp;push&nbsp;-u&nbsp;origin&nbsp;master</mark>  ----- 推送本地仓库到git仓库master</li></ol><p>比如这次我对博客进行更新，进入到git仓库的文件夹，右键 <mark class="hl-label blue">Open&nbsp;Git&nbsp;Bash&nbsp;here</mark>  同步仓库时需要输入的命令就是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;更新博客内容&quot;</span></span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p>如果不打算每次写commit，这里已经写好了一个快捷指令，下载放到博客根目录每次更新代码双击指令即可。</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://fu99999.lanzouw.com/iMv3923l5s1g">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://assets.woozooo.com/assets/favicon.ico)">          <i class="anzhiyufont anzhiyu-icon-link" style="display: none"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">git-commands.bat</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><h3 id="注册Cloudflare并在Pages部署你的hexo博客"><a href="#注册Cloudflare并在Pages部署你的hexo博客" class="headerlink" title="注册Cloudflare并在Pages部署你的hexo博客"></a>注册Cloudflare并在Pages部署你的hexo博客</h3><p>没有Cloudflare的小伙伴先在<a href="https://www.cloudflare-cn.com/"><strong>官网</strong></a>注册好账号后，进入主页点击Workers和Pages，选择Pages连接到Git选择你的博客仓库<br><img src="/img/article/2024_07/0705/10.jpg"><br>构建下配置内容，按照图中内容填写<br><img src="/img/article/2024_07/0705/11.jpg"><br>添加环境变量<mark class="hl-label blue">NODE_VERSION</mark> ，<mark class="hl-label blue">NPM_VERSION</mark> ，值为你的电脑中nodejs和npm的版本号<br><img src="/img/article/2024_07/0705/12.jpg"><br>最开始部署，大功告成，完结撒花😊！部署完成之后打开cloudflare给的链接即可看到你的博客啦~</p><h3 id="设置个人域名"><a href="#设置个人域名" class="headerlink" title="设置个人域名"></a>设置个人域名</h3><p>在你部署的项目中找到自定义域名<br><img src="/img/article/2024_07/0705/13.jpg"><br>输入你要使用的域名，并在域名解析中添加一个cname解析，指向cloudflare pages分配的地址，就可以用你的域名访问博客了！<br>本文主要介绍0成本快速搭建博客，(主打白嫖哈哈😅)域名就不做过多赘述了网上有很多，腾讯云，阿里云都可以。感兴趣的小伙伴可以去了解一下。</p>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Hexo </tag>
            
            <tag> 日常分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新电脑配置</title>
      <link href="/posts/fa6a4cab/"/>
      <url>/posts/fa6a4cab/</url>
      
        <content type="html"><![CDATA[<ul><li><p><strong>配置清单</strong><br>主板：华硕TUF GAMING B760重炮手Ⅱ<br>显卡：华硕RTX4060TI O8G ATS巨齿鲨<br>CPU：intel i5-12600KF<br>内存：芝奇DDR5-6400 16GX2<br>硬盘：三星PM9A1 1T<br>电源：航嘉 750W 金牌模组<br>机箱：航嘉 S980 龙卷风黑色全景版<br>风扇：棱镜四代 ARGB 风扇 x7<br>键盘：狼蛛F87 Pro<br>鼠标: 罗技G304<br>音响: 漫步者花再 Halo SoundBar<br>最后总计费用 8580 元</p></li><li><p><strong>装机效果图</strong><br><img src="/img/article/2024_07/0630/01.jpg"><br><img src="/img/article/2024_07/0630/02.jpg"><br><img src="/img/article/2024_07/0630/03.jpg"></p></li><li><p><strong>鲁大师跑分</strong><br><img src="/img/article/2024_07/0630/04.jpg"></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 生活日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RabbitMQ 延时队列取消订单</title>
      <link href="/posts/e9621ecc/"/>
      <url>/posts/e9621ecc/</url>
      
        <content type="html"><![CDATA[<ul><li><strong>准备工作</strong></li></ul><ol><li>首先需要下载RabbitMQ延迟队列插件，<a href="https://www.rabbitmq.com/docs/community-plugins">官网下载地址</a>，我本地的RabbitMQ版本是<strong>3.12.10</strong>所以下了个同版本的延迟队列插件<a href="https://fu99999.lanzouw.com/i0WHJ1plbpdc">3.12.10插件下载地址</a>。<br><img src="/img/article/2024_02/0228/01.jpg"></li><li>将下载插件包放到RabbitMQ安装目录下的<strong>plugins</strong>文件夹中。<br><img src="/img/article/2024_02/0228/02.jpg"></li><li>在RabbitMQ目录下的<strong>sbin</strong>文件夹中打开<strong>CMD</strong>输入命令：<strong>rabbitmq-plugins enable rabbitmq_delayed_message_exchange</strong>出现如图提示表示安装成功。<br><img src="/img/article/2024_02/0228/03.jpg"></li><li>执行重启RabbitMQ命令 <strong>RabbitMQ Service - start  ， RabbitMQ Service - stop</strong> 浏览器进入RabbitMQ管理页面<strong><a href="http://localhost:15672/">http://localhost:15672</a></strong> 在 <strong>exchanges</strong> 选项中找到 <strong>Add a new exchange - type</strong> 下拉选中有 <strong>x-delayed-message</strong> 表示延迟队列插件已经成功安装好了。<br><img src="/img/article/2024_02/0228/04.jpg"></li></ol><ul><li><strong>RabbitMQ 延时队列取消订单</strong></li><li>实现思路和之前差不多，创建订单成功后，发一个带有订单信息的延时消息，然后当到达指定时间后，判断一下订单是否未支付。如果已支付 就不做任何处理，如果未支付，就取消订单。</li></ul><ol><li>创建消息队列<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderDelayedMessageConfig</span> &#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">DIRECT_QUEUE</span> <span class="operator">=</span> <span class="string">&quot;order.queue.direct&quot;</span>;<span class="comment">//队列</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">DELAYED_EXCHANGE</span> <span class="operator">=</span> <span class="string">&quot;order.exchange.delayed&quot;</span>;<span class="comment">//延迟交换机</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ROUTING_KEY</span> <span class="operator">=</span> <span class="string">&quot;order.routingKey.bind&quot;</span>;<span class="comment">//绑定的routing-key</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 定义队列</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@Bean</span></span><br><span class="line">  <span class="keyword">public</span> Queue <span class="title function_">directQueue</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Queue</span>(DIRECT_QUEUE, <span class="literal">true</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 定义延迟交换机</span></span><br><span class="line"><span class="comment">   * args:根据该参数进行灵活路由，设置为“direct”，意味着该插件具有与直连交换机具有相同的路由行为</span></span><br><span class="line"><span class="comment">   * 交换机类型为 x-delayed-message</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@Bean</span></span><br><span class="line">  <span class="keyword">public</span> CustomExchange <span class="title function_">delayedExchange</span><span class="params">()</span> &#123;</span><br><span class="line">      Map&lt;String, Object&gt; args = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, Object&gt;();</span><br><span class="line">      args.put(<span class="string">&quot;x-delayed-type&quot;</span>, <span class="string">&quot;direct&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">CustomExchange</span>(DELAYED_EXCHANGE, <span class="string">&quot;x-delayed-message&quot;</span>, <span class="literal">true</span>, <span class="literal">false</span>, args);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 队列和延迟交换机绑定</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@Bean</span></span><br><span class="line">  <span class="keyword">public</span> Binding <span class="title function_">orderBinding</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> BindingBuilder.bind(directQueue()).to(delayedExchange()).with(ROUTING_KEY).noargs();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>创建生产者(下单之后发延迟信息)<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/order&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FuOrderController</span> &#123;</span><br><span class="line">   <span class="meta">@Resource</span></span><br><span class="line">   <span class="keyword">private</span> FuOrderService orderService;</span><br><span class="line">   <span class="meta">@Resource</span></span><br><span class="line">   <span class="keyword">private</span> RabbitTemplate rabbitTemplate;</span><br><span class="line">   <span class="meta">@Resource</span></span><br><span class="line">   <span class="keyword">private</span> RedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Value(&quot;$&#123;wind.order.exchange&#125;&quot;)</span></span><br><span class="line">   <span class="keyword">private</span> String orderExchange; <span class="comment">//订单交换机</span></span><br><span class="line"></span><br><span class="line">   <span class="meta">@Value(&quot;$&#123;wind.order.routingKey&#125;&quot;)</span></span><br><span class="line">   <span class="keyword">private</span> String orderRoutingKey; <span class="comment">//订单路由key</span></span><br><span class="line"></span><br><span class="line">   <span class="meta">@PostMapping(&quot;createOrderByDelayMQ&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> R <span class="title function_">createOrderByDelayMQ</span><span class="params">(<span class="meta">@RequestBody</span> FuOrder fuOrder, HttpServletRequest request)</span> &#123;</span><br><span class="line">       <span class="comment">// 保存订单至数据库</span></span><br><span class="line">       <span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> request.getHeader(<span class="string">&quot;token&quot;</span>);</span><br><span class="line">       <span class="type">Random</span> <span class="variable">random</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">       <span class="type">String</span> <span class="variable">orderNo</span> <span class="operator">=</span> String.valueOf(random.nextLong()).replace(<span class="string">&quot;-&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">       fuOrder.setOrderNo(Long.valueOf(orderNo));</span><br><span class="line">       fuOrder.setCreateTime(LocalDateTime.now());</span><br><span class="line">       fuOrder.setUserId(Math.toIntExact(JwtUtils.getUserId(token)));</span><br><span class="line">       <span class="type">boolean</span> <span class="variable">order</span> <span class="operator">=</span> orderService.save(fuOrder);</span><br><span class="line">       <span class="keyword">if</span> (order) &#123;</span><br><span class="line">           <span class="comment">// 将订单ID推送至延迟队列</span></span><br><span class="line">           rabbitTemplate.convertAndSend(</span><br><span class="line">                   OrderDelayedMessageConfig.DELAYED_EXCHANGE,</span><br><span class="line">                   OrderDelayedMessageConfig.ROUTING_KEY,</span><br><span class="line">                   fuOrder.getId(),</span><br><span class="line">                   message -&gt; &#123;</span><br><span class="line">                       message.getMessageProperties().setDelay(<span class="number">10000</span>); <span class="comment">// 设置延迟时间</span></span><br><span class="line">                       <span class="keyword">return</span> message;</span><br><span class="line">                   &#125;);</span><br><span class="line">           <span class="keyword">return</span> R.ok().message(<span class="string">&quot;创建订单成功&quot;</span>);</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           <span class="keyword">return</span> R.error().message(<span class="string">&quot;创建订单失败&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>创建消费者<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RabbitListener(queues = OrderDelayedMessageConfig.DIRECT_QUEUE)</span><span class="comment">//监听队列名称</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderDelayConsumer</span> &#123;</span><br><span class="line">  <span class="meta">@Resource</span></span><br><span class="line">  <span class="keyword">private</span> FuOrderService orderService;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@RabbitHandler</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">process</span><span class="params">(Long orderId)</span> &#123;</span><br><span class="line">      <span class="comment">// 取消订单</span></span><br><span class="line">      <span class="type">FuOrder</span> <span class="variable">fuOrder</span> <span class="operator">=</span> orderService.getById(orderId);</span><br><span class="line">      <span class="type">FuOrder</span> <span class="variable">overdueOrder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FuOrder</span>();</span><br><span class="line">      BeanUtils.copyProperties(fuOrder,overdueOrder);</span><br><span class="line">      overdueOrder.setStatus(<span class="number">0</span>);</span><br><span class="line">      overdueOrder.setClosetTime(LocalDateTime.now());</span><br><span class="line">      overdueOrder.setUpdateTime(LocalDateTime.now());</span><br><span class="line">      orderService.updateById(overdueOrder);</span><br><span class="line">      log.info(<span class="string">&quot;MQ延迟队列过期未支付订单处理结束&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> JAVA开发笔记 </tag>
            
            <tag> RabbitMQ </tag>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Springboot整合ShardingSphere实现分库分表,读写分离</title>
      <link href="/posts/2aa48838/"/>
      <url>/posts/2aa48838/</url>
      
        <content type="html"><![CDATA[<h2 id="ShardingSphere简介"><a href="#ShardingSphere简介" class="headerlink" title="ShardingSphere简介"></a>ShardingSphere简介</h2><p><a href="https://shardingsphere.apache.org/document/current/cn/overview/"><strong>Apache ShardingSphere</strong></a> 是一款分布式的数据库生态系统， 可以将任意数据库转换为分布式数据库，并通过数据分片、弹性伸缩、加密等能力对原有数据库进行增强。它由Sharding-JDBC、Sharding-Proxy和Sharding-Sidecar（计划中）这3款相互独立的产品组成,我们只关注 <strong>Sharding-JDBC</strong> 即可。<strong>Sharding-JDBC</strong> 定位为轻量级Java框架，在Java的JDBC层提供的额外服务。 它使用客户端直连数据库，以jar包形式提供服务，无需额外部署和依赖，可理解为增强版的JDBC驱动，完全兼容JDBC和各种ORM框架的使用。<strong>Sharding-JDBC</strong> 主要功能：<strong>数据分片</strong> 和 <strong>读写分离</strong> 通过<strong>Sharding-JDBC</strong> ，应用可以透明的使用jdbc访问已经分库分表、读写分离的多个数据源，而不用关心数据源的数量以及数据如何分布。</p><h2 id="SpringBoot整合ShardingSphere"><a href="#SpringBoot整合ShardingSphere" class="headerlink" title="SpringBoot整合ShardingSphere"></a>SpringBoot整合ShardingSphere</h2><p>本次记录项目版本为<strong>SpringBoot(2.4.0)</strong>,<strong>ShardingSphere(4.0.0-RC1)</strong></p><div class="note anzhiyufont anzhiyu-icon-fan simple"><p>PS：由于<strong>ShardingSphere</strong>版本过高启动项目会出现报错,经测试<strong>4.0.0-RC1</strong>在当前<strong>SpringBoot</strong>版本启动正常，更换其他版本请自行调试</p></div><h3 id="ShardingSphere读写分离"><a href="#ShardingSphere读写分离" class="headerlink" title="ShardingSphere读写分离"></a>ShardingSphere读写分离</h3><ul><li>拟定我们要为订单表实现读写分离，插入，修改在主库 <strong>ds0</strong> 中进行，查询在从库 <strong>ds1</strong> 中操作。</li></ul><ol><li>先创建订单表,这里是用本地运行2个MYSQL服务分别在库中创建，具体实现请参考<a href="https://wind-of-grace.gitee.io/posts/ebbf4489/">本地同时运行多个MYSQL服务</a>一文。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `fu_order`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `fu_order` (</span><br><span class="line">                            `id` <span class="type">bigint</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;订单id&#x27;</span>,</span><br><span class="line">                            `user_id` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;用户id&#x27;</span>,</span><br><span class="line">                            `product_id` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;商品id&#x27;</span>,</span><br><span class="line">                            `order_no` <span class="type">bigint</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;订单号&#x27;</span>,</span><br><span class="line">                            `quantity` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;商品数量&#x27;</span>,</span><br><span class="line">                            `total_price` <span class="type">decimal</span>(<span class="number">20</span>,<span class="number">2</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;商品总价,单位（元）保留2位小数点&#x27;</span>,</span><br><span class="line">                            `status` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;订单状态(0:已取消,1:待支付,2:已付款)&#x27;</span>,</span><br><span class="line">                            `end_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;交易完成时间&#x27;</span>,</span><br><span class="line">                            `closet_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;交易关闭时间&#x27;</span>,</span><br><span class="line">                            `create_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">                            `update_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">                            `is_deleted` tinyint(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;逻辑删除&#x27;</span>,</span><br><span class="line">                            <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">                            <span class="keyword">UNIQUE</span> KEY `order_no_index` (`order_no`) <span class="keyword">USING</span> BTREE,</span><br><span class="line">                            <span class="keyword">UNIQUE</span> KEY `order_no_user_id_index` (`user_id`,`order_no`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT <span class="operator">=</span> <span class="number">1</span>  CHARSET<span class="operator">=</span>utf8mb4 COMMENT<span class="operator">=</span><span class="string">&#x27;订单表&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li>在项目pom.xml中引入相关依赖<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- ShardingSphere --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shardingsphere<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sharding-jdbc-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.0-RC1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shardingsphere<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sharding-jdbc-spring-namespace<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.0-RC1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>配置文件<div class="note anzhiyufont anzhiyu-icon-fan simple"><p>PS：需要配置下<strong>mybatis-plus</strong>中的命名为dataSource的bean和<strong>shardingjdbc</strong>中的bean名字冲突导致无法启动项目的问题。本项目数据库使用<strong>Jasypt</strong>进行加密，如需配置请参考<a href="https://wind-of-grace.gitee.io/posts/87971af6/">Jasypt加密库</a>一文。</p></div><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">jackson:</span></span><br><span class="line">    <span class="attr">time-zone:</span> <span class="string">GMT+8</span></span><br><span class="line">  <span class="comment"># shardingsphere 读写分离配置</span></span><br><span class="line">  <span class="attr">main:</span></span><br><span class="line">    <span class="attr">allow-bean-definition-overriding:</span> <span class="literal">true</span> <span class="comment"># 启动项目报bean冲突配置(shardingsphere/mybatisplus)</span></span><br><span class="line">  <span class="attr">shardingsphere:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">datasource:</span></span><br><span class="line">      <span class="attr">ds0:</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">com.zaxxer.hikari.HikariDataSource</span></span><br><span class="line">        <span class="attr">jdbc-url:</span> <span class="string">ENC(1Ec2OVfgDl1nKRf4f2wXI1f1uhLa2FCc3Aw3mxVnChU64rlqO/PemyFSfHK/G0n5DQySOKllf3A/LJKKaUNfIS+ZoYKiODV40FmaVac+62XDlzdhU3qigmwTdfWNyihK7Peng+8wmiMiuziXe5huVpNoUbKD+9pj)</span></span><br><span class="line">        <span class="attr">password:</span> <span class="string">ENC(j/o7k6nZe+yAMoWVWRnjFg==)</span></span><br><span class="line">        <span class="attr">username:</span> <span class="string">ENC(ytrxf1igA4bazqZ6TOOc1A==)</span></span><br><span class="line">      <span class="attr">ds1:</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">com.zaxxer.hikari.HikariDataSource</span></span><br><span class="line">        <span class="attr">jdbc-url:</span> <span class="string">ENC(rHDezuPA7GdjUHe+RP7cdZlOx/O4TjoTOfsncXmePbm8b27Viocz2YZJvORLoAl8KiV5Qs/f2OjzaJ+cBFHwG5p29u0Yuj37tGNVqiP64qWTU9U2AL8GgQY38VeAJl3O72vxPxOpwnGnsyFWNzLFqX0boEhQIaEX)</span></span><br><span class="line">        <span class="attr">password:</span> <span class="string">ENC(j/o7k6nZe+yAMoWVWRnjFg==)</span></span><br><span class="line">        <span class="attr">username:</span> <span class="string">ENC(ytrxf1igA4bazqZ6TOOc1A==)</span></span><br><span class="line">      <span class="comment"># 配置数据源</span></span><br><span class="line">      <span class="attr">names:</span> <span class="string">ds0,ds1</span></span><br><span class="line">    <span class="attr">masterslave:</span></span><br><span class="line">      <span class="comment"># 配置slave节点的负载均衡均衡策略,采用轮询机制</span></span><br><span class="line">      <span class="attr">load-balance-algorithm-type:</span> <span class="string">round_robin</span></span><br><span class="line">      <span class="comment"># 配置主库master,负责数据的写入</span></span><br><span class="line">      <span class="attr">master-data-source-name:</span> <span class="string">ds0</span></span><br><span class="line">      <span class="comment"># 配置主从名称</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">ms</span></span><br><span class="line">      <span class="comment"># 配置从库slave节点</span></span><br><span class="line">      <span class="attr">slave-data-source-names:</span> <span class="string">ds1</span></span><br><span class="line">    <span class="attr">props:</span></span><br><span class="line">      <span class="attr">sql:</span></span><br><span class="line">        <span class="attr">show:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">sharding:</span></span><br><span class="line">      <span class="comment"># 配置默认数据源ds1 默认数据源,主要用于写</span></span><br><span class="line">      <span class="attr">default-data-source-name:</span> <span class="string">ds0</span></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">com/fu99999/note/mapper/xml/*.xml</span></span><br><span class="line">  <span class="attr">type-aliases-package:</span> <span class="string">com.ppdai.shardingjdbc.entity</span> <span class="comment"># shardingjdbc整合mybatis的配置</span></span><br></pre></td></tr></table></figure></li><li>测试</li></ol><ul><li>启动项目创建一个新订单,控制台输出如图,Insert语句是在<strong>ds0</strong>主库中的表执行。<br><img src="/img/article/2024_02/0222/01.jpg"></li><li>我们在查询刚插入的这条订单信息，可以看出select语句是在<strong>ds1</strong>从库执行，所以没有查到数据。<br><img src="/img/article/2024_02/0222/02.jpg"><br><img src="/img/article/2024_02/0222/03.jpg"></li><li>需要配置数据库主从同步才能在从库中查到数据，请参考<a href="https://wind-of-grace.gitee.io/posts/81fe7684/">MQSQL主从数据同步配置</a>一文。<br><img src="/img/article/2024_02/0222/04.jpg"></li></ul><h3 id="ShardingSphere分库分表"><a href="#ShardingSphere分库分表" class="headerlink" title="ShardingSphere分库分表"></a>ShardingSphere分库分表</h3><ol><li>分别在3306库和3307库创建3张订单表,根据id字段取模确定最终数据的位置，数据库环境配置如下：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">localhost:3306</span><br><span class="line">  wind-of-grace</span><br><span class="line">    fu_order_0</span><br><span class="line">    fu_order_1</span><br><span class="line">    fu_order_2</span><br><span class="line">localhost:3307</span><br><span class="line"> wind-of-grace</span><br><span class="line">    fu_order_0</span><br><span class="line">    fu_order_1</span><br><span class="line">    fu_order_2</span><br></pre></td></tr></table></figure></li><li>三张表的逻辑表为fu_order_0<div class="note anzhiyufont anzhiyu-icon-fan simple"><p>PS：这里不能将主键的生成规则设置成自增长，需要使用<strong>shardingsphere</strong>中的<strong>SNOWFLAKE</strong>雪花算法来生成主键</p></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `fu_order_0`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `fu_order_0` (</span><br><span class="line">                            `id` <span class="type">bigint</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;订单id&#x27;</span>,</span><br><span class="line">                            `user_id` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;用户id&#x27;</span>,</span><br><span class="line">                            `product_id` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;商品id&#x27;</span>,</span><br><span class="line">                            `order_no` <span class="type">bigint</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;订单号&#x27;</span>,</span><br><span class="line">                            `quantity` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;商品数量&#x27;</span>,</span><br><span class="line">                            `total_price` <span class="type">decimal</span>(<span class="number">20</span>,<span class="number">2</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;商品总价,单位（元）保留2位小数点&#x27;</span>,</span><br><span class="line">                            `status` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;订单状态(0:已取消,1:待支付,2:已付款)&#x27;</span>,</span><br><span class="line">                            `end_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;交易完成时间&#x27;</span>,</span><br><span class="line">                            `closet_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;交易关闭时间&#x27;</span>,</span><br><span class="line">                            `create_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">                            `update_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">                            `is_deleted` tinyint(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;逻辑删除&#x27;</span>,</span><br><span class="line">                            <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">                            <span class="keyword">UNIQUE</span> KEY `order_no_index` (`order_no`) <span class="keyword">USING</span> BTREE,</span><br><span class="line">                            <span class="keyword">UNIQUE</span> KEY `order_no_user_id_index` (`user_id`,`order_no`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 COMMENT<span class="operator">=</span><span class="string">&#x27;订单表_0&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li>配置文件<br>定义分库分表规则：根据主键分片，偶数主键的记录放入<strong>ds0</strong>库（或表），奇数主键的记录放入<strong>ds1</strong>库（或表）<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">jackson:</span></span><br><span class="line">    <span class="attr">time-zone:</span> <span class="string">GMT+8</span></span><br><span class="line">  <span class="comment"># shardingsphere 分库分表配置</span></span><br><span class="line">  <span class="comment"># 启动项目报bean冲突配置(shardingsphere/mybatisplus)</span></span><br><span class="line">  <span class="attr">main:</span></span><br><span class="line">    <span class="attr">allow-bean-definition-overriding:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">shardingsphere:</span></span><br><span class="line">    <span class="comment"># 是否启用</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">datasource:</span></span><br><span class="line">      <span class="attr">ds0:</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">com.zaxxer.hikari.HikariDataSource</span></span><br><span class="line">        <span class="attr">driverClassName:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line">        <span class="attr">jdbc-url:</span> <span class="string">ENC(1Ec2OVfgDl1nKRf4f2wXI1f1uhLa2FCc3Aw3mxVnChU64rlqO/PemyFSfHK/G0n5DQySOKllf3A/LJKKaUNfIS+ZoYKiODV40FmaVac+62XDlzdhU3qigmwTdfWNyihK7Peng+8wmiMiuziXe5huVpNoUbKD+9pj)</span></span><br><span class="line">        <span class="attr">password:</span> <span class="string">ENC(j/o7k6nZe+yAMoWVWRnjFg==)</span></span><br><span class="line">        <span class="attr">username:</span> <span class="string">ENC(ytrxf1igA4bazqZ6TOOc1A==)</span></span><br><span class="line">      <span class="attr">ds1:</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">com.zaxxer.hikari.HikariDataSource</span></span><br><span class="line">        <span class="attr">driverClassName:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line">        <span class="attr">jdbc-url:</span> <span class="string">ENC(rHDezuPA7GdjUHe+RP7cdZlOx/O4TjoTOfsncXmePbm8b27Viocz2YZJvORLoAl8KiV5Qs/f2OjzaJ+cBFHwG5p29u0Yuj37tGNVqiP64qWTU9U2AL8GgQY38VeAJl3O72vxPxOpwnGnsyFWNzLFqX0boEhQIaEX)</span></span><br><span class="line">        <span class="attr">password:</span> <span class="string">ENC(j/o7k6nZe+yAMoWVWRnjFg==)</span></span><br><span class="line">        <span class="attr">username:</span> <span class="string">ENC(ytrxf1igA4bazqZ6TOOc1A==)</span></span><br><span class="line">      <span class="comment"># 配置ds0 和ds1两个数据源</span></span><br><span class="line">      <span class="attr">names:</span> <span class="string">ds0,ds1</span></span><br><span class="line">    <span class="comment"># 打印SQL</span></span><br><span class="line">    <span class="attr">props:</span></span><br><span class="line">      <span class="attr">sql:</span></span><br><span class="line">        <span class="attr">show:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># 分库策略 根据id取模确定数据进哪个数据库 偶数存ds0库/表 奇数存ds1库/表</span></span><br><span class="line">    <span class="attr">sharding:</span></span><br><span class="line">      <span class="attr">default-database-strategy:</span></span><br><span class="line">        <span class="attr">inline:</span></span><br><span class="line">          <span class="attr">algorithm-expression:</span> <span class="string">ds$-&gt;&#123;id</span> <span class="string">%</span> <span class="number">2</span><span class="string">&#125;</span></span><br><span class="line">          <span class="attr">sharding-column:</span> <span class="string">id</span></span><br><span class="line">      <span class="comment"># 具体分表策略</span></span><br><span class="line">      <span class="attr">tables:</span></span><br><span class="line">        <span class="attr">fu_order:</span></span><br><span class="line">          <span class="attr">actual-data-nodes:</span> <span class="string">ds$-&gt;&#123;0..1&#125;.fu_order_$-&gt;&#123;0..2&#125;</span></span><br><span class="line">          <span class="comment"># ※千万不能将主键的生成规则设置成自增长，需要按照一定规则来生成主键，这里使用shardingsphere中的SNOWFLAKE俗称雪花算法来生成主键</span></span><br><span class="line">          <span class="attr">key-generator:</span></span><br><span class="line">            <span class="attr">column:</span> <span class="string">id</span></span><br><span class="line">            <span class="attr">type:</span> <span class="string">SNOWFLAKE</span> <span class="comment"># 使用SNOWFLAKE算法生成主键</span></span><br><span class="line">          <span class="comment"># 分表字段id</span></span><br><span class="line">          <span class="comment"># 分表策略 根据id取模,确定数据最终落在那个表中</span></span><br><span class="line">          <span class="attr">table-strategy:</span></span><br><span class="line">            <span class="attr">inline:</span></span><br><span class="line">              <span class="attr">algorithm-expression:</span> <span class="string">fu_order_$-&gt;&#123;id</span> <span class="string">%</span> <span class="number">3</span><span class="string">&#125;</span></span><br><span class="line">              <span class="attr">sharding-column:</span> <span class="string">id</span></span><br></pre></td></tr></table></figure></li><li>测试</li></ol><ul><li>启动项目创建几个订单，观察控制台输出<br><img src="/img/article/2024_02/0222/05.jpg"><br><img src="/img/article/2024_02/0222/06.jpg"></li><li>根据分库分表规则，订单被分别插入到<strong>ds1</strong>库中的<strong>fu_order_0</strong>表和<strong>ds0</strong>库中的<strong>fu_order_1</strong>表中<br><img src="/img/article/2024_02/0222/07.jpg"></li></ul>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> JAVA开发笔记 </tag>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot整合ElasticSearch实现常用查询功能</title>
      <link href="/posts/b4b8dcdf/"/>
      <url>/posts/b4b8dcdf/</url>
      
        <content type="html"><![CDATA[<h3 id="ES简介"><a href="#ES简介" class="headerlink" title="ES简介"></a>ES简介</h3><p>Elaticsearch，简称为ES，它提供了一个分布式多用户能力的<strong>全文搜索引擎</strong>，基于RESTful web接口。它可以近乎实时的存储、检索数据；本身扩展性很好，可以扩展到上百台服务器，处理 PB 级别的数据。<br><strong>全文搜索引擎</strong><br>Google，百度类的网站搜索，它们都是根据网页中的关键字生成索引，我们在搜索的时候输入关键字，它们会将该关键字即索引匹配到的所有网页返回；还有常见的项目中应用日志的搜索等等。对于这些非结构化的数据文本，关系型数据库搜索不是能很好的支持。</p><p>一般传统数据库，全文检索都实现的很鸡肋，因为一般也没人用数据库存文本字段。进行全文检索需要扫描整个表，如果数据量大的话即使对 SQL 的语法优化，也收效甚微。建立了索引，但是维护起来也很麻烦，对于 insert 和 update 操作都会重新构建索引。</p><p><strong>全文搜索引擎</strong>指的是目前广泛应用的主流搜索引擎。它的工作原理是计算机索引程序通过扫描文章中的每一个词，对每一个词建立一个索引，指明该词在文章中出现的次数和位置，当用户查询时，检索程序就根据事先建立的索引进行查找，并将查找的结果反馈给用户的检索方式。这个过程类似于通过字典中的检索字表查字的过程。</p><h3 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h3><p>首先需要检查SpringBoot对应的Elaticsearch版本，这里要以SpringBoot版本为主，安装对应的ES以及相关插件。<br><a href="https://docs.spring.io/spring-data/elasticsearch/reference/">Spring Data Elasticsearch - 参考文档</a><br><img src="/img/article/2024_02/0218/01.jpg"><br>下面需要下载ES和ik分词器，这里我的项目是SpringBoot:2.4.0版本，对应的ES版本为7.9.3<a href="https://www.elastic.co/cn/">Elasticsearch官网</a>。<br><a href="https://pan.baidu.com/s/1Pw6CdDTe6YdshQ0Dn6ZIqA?pwd=3grw">elasticsearch-7.9.3下载地址</a><br><a href="https://fu99999.lanzv.com/isSrx1ieudtg">elasticsearch-analysis-ik-7.9.3下载地址</a><br>注意：ik分词器需要解压到es的安装目录 <strong>&#x2F;plugins&#x2F;ik-7.9.3</strong> 内。<br><img src="/img/article/2024_02/0218/02.jpg"><br>进入es安装目录 <strong>&#x2F;bin</strong> 右键运行 <strong>elasticsearch.bat</strong> 文件启动 <strong>ES</strong> 服务。<br>打开浏览器，输入地址： <strong><a href="http://localhost:9200/">http://localhost:9200</a></strong> 测试返回结果，返回结果如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;DESKTOP-TAPNIHG&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;cluster_name&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;elasticsearch&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;cluster_uuid&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;fx1uOY3VRpm0_TEIJOx4Xw&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;number&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;7.9.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build_flavor&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;default&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;zip&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build_hash&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;c4138e51121ef06a6404866cddc601906fe5c868&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build_date&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;2020-10-16T10:36:16.141335Z&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build_snapshot&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;lucene_version&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;8.6.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;minimum_wire_compatibility_version&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;6.8.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;minimum_index_compatibility_version&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;6.0.0-beta1&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;tagline&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;You Know, for Search&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="整合SpringBoot和Elasticsearch"><a href="#整合SpringBoot和Elasticsearch" class="headerlink" title="整合SpringBoot和Elasticsearch"></a>整合SpringBoot和Elasticsearch</h3><p><strong>Spring Data Elasticsearch 介绍</strong><br>Spring Data Elasticsearch基于Spring Data API简化 Elasticsearch 操作，将原始操作Elasticsearch 的客户端API进行封装。Spring Data为Elasticsearch 项目提供集成搜索引擎。Spring Data Elasticsearch POJO的关键功能区域为中心的模型与Elastichsearch交互文档和轻松地编写一个存储索引库数据访问层。<br><a href="https://spring.io/projects/spring-data-elasticsearch">Spring Data Elasticsearch官网</a></p><ol><li>在项目中添加es相关依赖<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-elasticsearch<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>给application.yml添加es配置<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">elasticsearch:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">9200</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">level:</span></span><br><span class="line">    <span class="attr">com:</span></span><br><span class="line">      <span class="attr">es:</span> <span class="string">debug</span></span><br></pre></td></tr></table></figure></li><li>数据实体类<br><strong>Spring Data Elasticsearch常用注解</strong></li></ol><blockquote><p><strong>@Document()</strong> 指定实体类和索引对应关系<br>属性：</p><ul><li>indexName 索引名称</li><li>shards 主分片数量。从ES 7开始默认1</li><li>replicas 复制分片数量。从ES 7开始默认1</li></ul><p><strong>@Id</strong> ES主键</p><p><strong>@Field()</strong> 指定普通属性<br> 属性：</p><ul><li>name 字段类型。默认为当前属性名</li><li>type 对应Elasticsearch中属性类型，默认是FieldType.Auto</li><li>analyzer 分词器名称，必须type&#x3D;Text才有效。默认为standard</li><li>index 是否创建索引。默认true</li></ul></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.IdType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.TableId;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModelProperty;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.annotation.Id;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.elasticsearch.annotations.Document;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.elasticsearch.annotations.Field;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.elasticsearch.annotations.FieldType;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 商品 ES 实体</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> wind-of-grace</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2024/2/7 10:34</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Document(indexName = &quot;product&quot;, shards = 3, replicas = 1)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductES</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * es 注解</span></span><br><span class="line"><span class="comment">     * type : 字段数据类型</span></span><br><span class="line"><span class="comment">     * analyzer : 分词器类型</span></span><br><span class="line"><span class="comment">     * index : 是否索引(默认:true)</span></span><br><span class="line"><span class="comment">     * Keyword : 短语,不进行分词</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span> <span class="comment">// es id</span></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;商品id&quot;)</span></span><br><span class="line">    <span class="meta">@TableId(value = &quot;id&quot;, type = IdType.AUTO)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Field(type = FieldType.Text, analyzer = &quot;ik_max_word&quot;)</span></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;商品名称&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Field(type = FieldType.Double)</span></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;价格,单位（元）保留2位小数点&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Double price;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Field(type = FieldType.Keyword)</span></span><br><span class="line">    <span class="keyword">private</span> String category;<span class="comment">//分类名称</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Field(type = FieldType.Keyword, index = false)</span></span><br><span class="line">    <span class="keyword">private</span> String images;<span class="comment">//图片地址</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>配置类<blockquote><ul><li>ElasticsearchRestTemplate是spring-data-elasticsearch项目中的一个类,和其他spring项目中的 template类似。</li><li>在新版的spring-data-elasticsearch 中，ElasticsearchRestTemplate 代替了原来的ElasticsearchTemplate。</li><li>原因是ElasticsearchTemplate基于TransportClient，TransportClient即将在8.x 以后的版本中移除。所以，我们推荐使用ElasticsearchRestTemplate。</li><li>ElasticsearchRestTemplate基于RestHighLevelClient客户端的。需要自定义配置类，继承AbstractElasticsearchConfiguration，并实现elasticsearchClient()抽象方法，创建RestHighLevelClient对象。</li><li>创建AbstractElasticsearchConfiguration配置类</li></ul></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">AbstractElasticsearchConfiguration</span>  <span class="keyword">extends</span> <span class="title class_">ElasticsearchConfigurationSupport</span> &#123;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//需重写本方法</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">abstract</span> RestHighLevelClient <span class="title function_">elasticsearchClient</span><span class="params">()</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="meta">@Bean(name = &#123; &quot;elasticsearchOperations&quot;, &quot;elasticsearchTemplate&quot; &#125;)</span></span><br><span class="line">  <span class="keyword">public</span> ElasticsearchOperations <span class="title function_">elasticsearchOperations</span><span class="params">(ElasticsearchConverter elasticsearchConverter)</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ElasticsearchRestTemplate</span>(elasticsearchClient(), elasticsearchConverter);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><strong>需要自定义配置类，继承AbstractElasticsearchConfiguration，并实现elasticsearchClient()抽象方法，创建RestHighLevelClient对象。</strong><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;elasticsearch&quot;)</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ElasticsearchConfig</span> <span class="keyword">extends</span> <span class="title class_">AbstractElasticsearchConfiguration</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.elasticsearch.host&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String host ;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.elasticsearch.port&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer port ;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//重写父类方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> RestHighLevelClient <span class="title function_">elasticsearchClient</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">RestClientBuilder</span> <span class="variable">builder</span> <span class="operator">=</span> RestClient.builder(<span class="keyword">new</span> <span class="title class_">HttpHost</span>(host, port));</span><br><span class="line">        <span class="type">RestHighLevelClient</span> <span class="variable">restHighLevelClient</span> <span class="operator">=</span> <span class="keyword">new</span></span><br><span class="line">                <span class="title class_">RestHighLevelClient</span>(builder);</span><br><span class="line">        <span class="keyword">return</span> restHighLevelClient;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>Mapper数据访问对象<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ProductMapper</span> <span class="keyword">extends</span> <span class="title class_">ElasticsearchRepository</span>&lt;ProductES, Long&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="Spring-Data-Elasticsearch集成测试"><a href="#Spring-Data-Elasticsearch集成测试" class="headerlink" title="Spring Data Elasticsearch集成测试"></a>Spring Data Elasticsearch集成测试</h3><ol><li>索引操作<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpringDataESIndexTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> ElasticsearchRestTemplate elasticsearchRestTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">createIndex</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//创建索引，系统初始化会自动创建索引</span></span><br><span class="line">        System.out.println(<span class="string">&quot;创建索引&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteIndex</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//创建索引，系统初始化会自动创建索引</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flg</span> <span class="operator">=</span> elasticsearchRestTemplate.deleteIndex(ProductES.class);</span><br><span class="line">        System.out.println(<span class="string">&quot;删除索引 = &quot;</span> + flg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>打开POSTMAN 检测索引是否创建和删除 GET请求<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:9200/_cat/indices?v </span><br></pre></td></tr></table></figure></li><li>文档操作<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpringDataESProductDaoTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> ProductMapper productMapper;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 新增</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">ProductES</span> <span class="variable">product</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ProductES</span>();</span><br><span class="line">        product.setId(<span class="number">2L</span>);</span><br><span class="line">        product.setName(<span class="string">&quot;苹果手机&quot;</span>);</span><br><span class="line">        product.setCategory(<span class="string">&quot;手机&quot;</span>);</span><br><span class="line">        product.setPrice(<span class="number">7999.0</span>);</span><br><span class="line">        product.setImages(<span class="string">&quot;https://wind-of-grace.gitee.io/&quot;</span>);</span><br><span class="line">        productMapper.save(product);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// POSTMAN, GET http://localhost:9200/product/_doc/2</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 修改</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">update</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">ProductES</span> <span class="variable">product</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ProductES</span>();</span><br><span class="line">        product.setId(<span class="number">2L</span>);</span><br><span class="line">        product.setName(<span class="string">&quot;小米 2 手机&quot;</span>);</span><br><span class="line">        product.setCategory(<span class="string">&quot;手机&quot;</span>);</span><br><span class="line">        product.setPrice(<span class="number">9999.0</span>);</span><br><span class="line">        product.setImages(<span class="string">&quot;https://wind-of-grace.gitee.io/&quot;</span>);</span><br><span class="line">        productMapper.save(product);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// POSTMAN, GET http://localhost:9200/product/_doc/2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据 id 查询</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findById</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">ProductES</span> <span class="variable">product</span> <span class="operator">=</span> productMapper.findById(<span class="number">2L</span>).get();</span><br><span class="line">        System.out.println(product);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询所有</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findAll</span><span class="params">()</span> &#123;</span><br><span class="line">        Iterable&lt;ProductES&gt; products = productMapper.findAll();</span><br><span class="line">        <span class="keyword">for</span> (ProductES product : products) &#123;</span><br><span class="line">            System.out.println(product);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 删除</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">ProductES</span> <span class="variable">product</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ProductES</span>();</span><br><span class="line">        product.setId(<span class="number">2L</span>);</span><br><span class="line">        productMapper.delete(product);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 批量新增</span></span><br><span class="line">    <span class="comment">// POSTMAN, GET http://localhost:9200/product/_search</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveAll</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;ProductES&gt; productList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="type">ProductES</span> <span class="variable">product</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ProductES</span>();</span><br><span class="line">            product.setId(Long.valueOf(i));</span><br><span class="line">            product.setName(<span class="string">&quot;[&quot;</span> + i + <span class="string">&quot;]小米手机&quot;</span>);</span><br><span class="line">            product.setCategory(<span class="string">&quot;手机&quot;</span>);</span><br><span class="line">            product.setPrice(<span class="number">1999.0</span> + i);</span><br><span class="line">            product.setImages(<span class="string">&quot;https://wind-of-grace.gitee.io/&quot;</span>);</span><br><span class="line">            productList.add(product);</span><br><span class="line">        &#125;</span><br><span class="line">        productMapper.saveAll(productList);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 分页查询</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findByPageable</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//设置排序(排序方式，正序还是倒序，排序的 id)</span></span><br><span class="line">        <span class="type">Sort</span> <span class="variable">sort</span> <span class="operator">=</span> Sort.by(Sort.Direction.DESC, <span class="string">&quot;id&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">pageNo</span> <span class="operator">=</span> <span class="number">0</span>;<span class="comment">//当前页，第一页从 0 开始， 1 表示第二页</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">pageSize</span> <span class="operator">=</span> <span class="number">5</span>;<span class="comment">//每页显示多少条</span></span><br><span class="line">        <span class="comment">//设置查询分页</span></span><br><span class="line">        <span class="type">PageRequest</span> <span class="variable">pageRequest</span> <span class="operator">=</span> PageRequest.of(pageNo, pageSize, sort);</span><br><span class="line">        <span class="comment">//分页查询</span></span><br><span class="line">        Page&lt;ProductES&gt; productPage = productMapper.findAll(pageRequest);</span><br><span class="line">        <span class="keyword">for</span> (ProductES Product : productPage.getContent()) &#123;</span><br><span class="line">            System.out.println(Product);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>文档搜索<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpringDataESSearchTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> ProductMapper productMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> ElasticsearchRestTemplate elasticsearchRestTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * term 查询</span></span><br><span class="line"><span class="comment">     * search(termQueryBuilder) 调用搜索方法，参数查询构建器对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">termQuery</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">TermQueryBuilder</span> <span class="variable">termQueryBuilder</span> <span class="operator">=</span> QueryBuilders.termQuery(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;小米&quot;</span>);</span><br><span class="line">        Iterable&lt;ProductES&gt; products = productMapper.search(termQueryBuilder);</span><br><span class="line">        <span class="keyword">for</span> (ProductES product : products) &#123;</span><br><span class="line">            System.out.println(product);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * term 查询加分页</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">termQueryByPage</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">pageNo</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">pageSize</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line">        <span class="comment">//设置查询分页</span></span><br><span class="line">        <span class="type">PageRequest</span> <span class="variable">pageRequest</span> <span class="operator">=</span> PageRequest.of(pageNo, pageSize);</span><br><span class="line">        <span class="type">TermQueryBuilder</span> <span class="variable">termQueryBuilder</span> <span class="operator">=</span> QueryBuilders.termQuery(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;小米&quot;</span>);</span><br><span class="line">        Iterable&lt;ProductES&gt; products =</span><br><span class="line">                productMapper.search(termQueryBuilder, pageRequest);</span><br><span class="line">        <span class="keyword">for</span> (ProductES product : products) &#123;</span><br><span class="line">            System.out.println(product);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 高亮查询</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testHighlightQuery</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//构建查询条件</span></span><br><span class="line">        <span class="type">BoolQueryBuilder</span> <span class="variable">boolQuery</span> <span class="operator">=</span> QueryBuilders.boolQuery();</span><br><span class="line">        boolQuery.should(QueryBuilders.matchQuery(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;华为手机&quot;</span>));</span><br><span class="line">        <span class="comment">//设置高亮字段</span></span><br><span class="line">        <span class="type">HighlightBuilder</span> <span class="variable">highlightBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HighlightBuilder</span>();</span><br><span class="line">        <span class="comment">//设置标签前缀</span></span><br><span class="line">        highlightBuilder.preTags(<span class="string">&quot;&lt;font color=&#x27;red&#x27;&gt;&quot;</span>);</span><br><span class="line">        <span class="comment">//设置标签后缀</span></span><br><span class="line">        highlightBuilder.postTags(<span class="string">&quot;&lt;/font&gt;&quot;</span>);</span><br><span class="line">        <span class="comment">//设置高亮字段</span></span><br><span class="line">        highlightBuilder.field(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        <span class="comment">// 构建查询</span></span><br><span class="line">        <span class="type">NativeSearchQuery</span> <span class="variable">searchQuery</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">NativeSearchQueryBuilder</span>()</span><br><span class="line">                .withQuery(boolQuery)</span><br><span class="line">                .withHighlightBuilder(highlightBuilder)</span><br><span class="line">                .build();</span><br><span class="line">        <span class="comment">//执行查询</span></span><br><span class="line">        SearchHits&lt;ProductES&gt; searchHits = elasticsearchRestTemplate.search(searchQuery, ProductES.class);</span><br><span class="line">        <span class="comment">//获取查询结果</span></span><br><span class="line">        searchHits.forEach(searchHit -&gt; &#123;</span><br><span class="line">            System.out.println(searchHit.toString());</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 高亮查询加分页</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testHighlightByPage</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//当前页</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">pageNo</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//每页显示条数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">pageSize</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line">        <span class="comment">//设置查询分页</span></span><br><span class="line">        <span class="type">PageRequest</span> <span class="variable">pageRequest</span> <span class="operator">=</span> PageRequest.of(pageNo, pageSize);</span><br><span class="line">        <span class="comment">//构建查询条件</span></span><br><span class="line">        <span class="type">BoolQueryBuilder</span> <span class="variable">boolQuery</span> <span class="operator">=</span> QueryBuilders.boolQuery();</span><br><span class="line">        boolQuery.should(QueryBuilders.matchQuery(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;华为手机&quot;</span>));</span><br><span class="line">        <span class="comment">//设置高亮字段</span></span><br><span class="line">        <span class="type">HighlightBuilder</span> <span class="variable">highlightBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HighlightBuilder</span>();</span><br><span class="line">        <span class="comment">//设置标签前缀</span></span><br><span class="line">        highlightBuilder.preTags(<span class="string">&quot;&lt;font color=&#x27;red&#x27;&gt;&quot;</span>);</span><br><span class="line">        <span class="comment">//设置标签后缀</span></span><br><span class="line">        highlightBuilder.postTags(<span class="string">&quot;&lt;/font&gt;&quot;</span>);</span><br><span class="line">        <span class="comment">//设置高亮字段</span></span><br><span class="line">        highlightBuilder.field(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        <span class="comment">// 构建查询</span></span><br><span class="line">        <span class="type">NativeSearchQuery</span> <span class="variable">searchQuery</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">NativeSearchQueryBuilder</span>()</span><br><span class="line">                .withQuery(boolQuery)</span><br><span class="line">                .withHighlightBuilder(highlightBuilder)</span><br><span class="line">                .withPageable(pageRequest)</span><br><span class="line">                .build();</span><br><span class="line">        <span class="comment">//执行查询</span></span><br><span class="line">        SearchHits&lt;ProductES&gt; searchHits = elasticsearchRestTemplate.search(searchQuery, ProductES.class);</span><br><span class="line">        <span class="comment">//获取查询结果</span></span><br><span class="line">        searchHits.forEach(searchHit -&gt; &#123;</span><br><span class="line">            System.out.println(searchHit.toString());</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 模糊查询</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testFuzzyQuery</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//构建查询条件</span></span><br><span class="line">        <span class="type">FuzzyQueryBuilder</span> <span class="variable">fuzzyQuery</span> <span class="operator">=</span> QueryBuilders.fuzzyQuery(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;苹果&quot;</span>).fuzziness(Fuzziness.ONE);</span><br><span class="line">        <span class="comment">// 构建查询</span></span><br><span class="line">        <span class="type">NativeSearchQuery</span> <span class="variable">searchQuery</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">NativeSearchQueryBuilder</span>()</span><br><span class="line">                .withQuery(fuzzyQuery)</span><br><span class="line">                .build();</span><br><span class="line">        <span class="comment">//执行查询</span></span><br><span class="line">        SearchHits&lt;ProductES&gt; searchHits = elasticsearchRestTemplate.search(searchQuery, ProductES.class);</span><br><span class="line">        <span class="comment">//获取查询结果</span></span><br><span class="line">        searchHits.forEach(searchHit -&gt; &#123;</span><br><span class="line">            System.out.println(searchHit.toString());</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 最大查询</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testMaxQuery</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">FuzzyQueryBuilder</span> <span class="variable">fuzzyQuery</span> <span class="operator">=</span> QueryBuilders.fuzzyQuery(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;华为&quot;</span>).fuzziness(Fuzziness.ONE);</span><br><span class="line">        <span class="comment">// 构建查询</span></span><br><span class="line">        <span class="type">NativeSearchQuery</span> <span class="variable">searchQuery</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">NativeSearchQueryBuilder</span>()</span><br><span class="line">                .withQuery(fuzzyQuery)</span><br><span class="line">                .addAggregation(AggregationBuilders.max(<span class="string">&quot;maxAge&quot;</span>).field(<span class="string">&quot;age&quot;</span>))</span><br><span class="line">                .build();</span><br><span class="line">        <span class="comment">//执行查询</span></span><br><span class="line">        SearchHits&lt;ProductES&gt; searchHits = elasticsearchRestTemplate.search(searchQuery, ProductES.class);</span><br><span class="line">        <span class="comment">//获取查询结果</span></span><br><span class="line">        searchHits.forEach(searchHit -&gt; &#123;</span><br><span class="line">            System.out.println(searchHit.toString());</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分组查询</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGroupQuery</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 构建查询</span></span><br><span class="line">        <span class="type">NativeSearchQuery</span> <span class="variable">searchQuery</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">NativeSearchQueryBuilder</span>()</span><br><span class="line">                .addAggregation(AggregationBuilders.terms(<span class="string">&quot;name&quot;</span>).field(<span class="string">&quot;price&quot;</span>))</span><br><span class="line">                .build();</span><br><span class="line">        <span class="comment">//执行查询</span></span><br><span class="line">        SearchHits&lt;ProductES&gt; searchHits = elasticsearchRestTemplate.search(searchQuery, ProductES.class);</span><br><span class="line">        <span class="comment">//获取查询结果</span></span><br><span class="line">        searchHits.forEach(searchHit -&gt; &#123;</span><br><span class="line">            System.out.println(searchHit.toString());</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 范围查询</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testRangeQuery</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//构建条件查询：id为30-50，按价格分组</span></span><br><span class="line">        <span class="type">BoolQueryBuilder</span> <span class="variable">boolQuery</span> <span class="operator">=</span> QueryBuilders.boolQuery();</span><br><span class="line">        boolQuery.must(QueryBuilders.rangeQuery(<span class="string">&quot;id&quot;</span>).from(<span class="number">30</span>).to(<span class="number">50</span>));</span><br><span class="line">        <span class="comment">// 构建查询</span></span><br><span class="line">        <span class="type">NativeSearchQuery</span> <span class="variable">searchQuery</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">NativeSearchQueryBuilder</span>()</span><br><span class="line">                .withQuery(boolQuery)</span><br><span class="line">                .addAggregation(AggregationBuilders.terms(<span class="string">&quot;name&quot;</span>).field(<span class="string">&quot;price&quot;</span>))</span><br><span class="line">                .build();</span><br><span class="line">        <span class="comment">//执行查询</span></span><br><span class="line">        SearchHits&lt;ProductES&gt; searchHits = elasticsearchRestTemplate.search(searchQuery, ProductES.class);</span><br><span class="line">        <span class="comment">//获取查询结果</span></span><br><span class="line">        searchHits.forEach(searchHit -&gt; &#123;</span><br><span class="line">            System.out.println(searchHit.toString());</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 组合查询</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testConditionQuery</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//构建条件查询：id为30-50，按价格分组</span></span><br><span class="line">        <span class="type">BoolQueryBuilder</span> <span class="variable">boolQuery</span> <span class="operator">=</span> QueryBuilders.boolQuery();</span><br><span class="line">        boolQuery.must(QueryBuilders.rangeQuery(<span class="string">&quot;id&quot;</span>).from(<span class="number">30</span>).to(<span class="number">50</span>));</span><br><span class="line">        <span class="comment">// 构建查询</span></span><br><span class="line">        <span class="type">NativeSearchQuery</span> <span class="variable">searchQuery</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">NativeSearchQueryBuilder</span>()</span><br><span class="line">                .withQuery(boolQuery)</span><br><span class="line">                .addAggregation(AggregationBuilders.terms(<span class="string">&quot;price&quot;</span>).field(<span class="string">&quot;price&quot;</span>))</span><br><span class="line">                .build();</span><br><span class="line">        <span class="comment">//执行查询</span></span><br><span class="line">        SearchHits&lt;ProductES&gt; searchHits = elasticsearchRestTemplate.search(searchQuery, ProductES.class);</span><br><span class="line">        <span class="comment">//获取查询结果</span></span><br><span class="line">        searchHits.forEach(searchHit -&gt; &#123;</span><br><span class="line">            System.out.println(searchHit.toString());</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><strong>为什么要使用Elasticsearch</strong></p><blockquote><p>系统中的数据， 随着业务的发展，时间的推移， 将会非常多， 而业务中往往采用模糊查询进行数据的搜索， 而模糊查询会导致查询引擎放弃索引，导致系统查询数据时都是全表扫描，在百万级别的数据库中，查询效率是非常低下的，而我们使用 ES 做一个全文索引，将经常查询的系统功能的某些字段，比如说电商系统的商品表中商品名，描述、价格还有 id 这些字段我们放入 ES 索引库里，可以提高查询速度。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> JAVA开发笔记 </tag>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL配置主从数据同步</title>
      <link href="/posts/81fe7684/"/>
      <url>/posts/81fe7684/</url>
      
        <content type="html"><![CDATA[<ol><li>在配置MySQL主从同步以前要确地本地至少已经有2个及以上服务在同时运行。可参考<a href="https://wind-of-grace.gitee.io/posts/ebbf4489/">相同IP运行多个MySQL服务</a>一文。<br><strong>我这里是有3个mysql服务在运行，mysql1为主库master(端口3306)，mysql2为从库slave(端口3307)之前已经配置好主从同步了，mysql3为从库slave2(端口3308)这次主要用3308库来演示同步配置。</strong><br><img src="/img/article/2023_12/1229/01.jpg"></li><li>打开Navicat,连上MySQL,运行命令列界面<br><img src="/img/article/2023_12/1229/02.jpg"></li><li>输入查看主库状态命令：<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show master status; </span><br></pre></td></tr></table></figure><img src="/img/article/2023_12/1229/03.jpg"><blockquote><p>File: 对应从库的配置文件<br>Position: 位置大小后面需要用到<br>Binlog_Do_DB: 需要同步的数据库<br>Binlog_Ignore_DB: 不需要同步的数据库<br><strong>可在my.ini的配置文件中进行修改。</strong></p></blockquote></li><li>给主库添加从库用户，在用户中新建用户，主机的 <strong>%</strong> 标识任何ip都可以连接到主库，然后把服务器的权限都勾选上。<br><img src="/img/article/2023_12/1229/04.jpg"><br><img src="/img/article/2023_12/1229/05.jpg"></li><li>打开从库的命令行(slave2端口3308)并输入命令：<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">change master to master_host=<span class="string">&#x27;192.168.1.108&#x27;</span>,master_user=<span class="string">&#x27;slave2&#x27;</span>,master_password=<span class="string">&#x27;123456&#x27;</span>,master_log_file=<span class="string">&#x27;mysql-bin.000003&#x27;</span>,master_log_pos=1525;</span><br></pre></td></tr></table></figure><img src="/img/article/2023_12/1229/06.jpg"><blockquote><p> master_host: 主库ip<br> master_user: 新建的从库用户<br> master_password: 新建的从库用户密码<br> master_log_file: 主库状态中file的值<br> master_log_pos : 主库状态中position的值<br> 执行之后显示<strong>Query OK</strong>配置完成</p></blockquote></li><li>继续在从库输入命令： <strong>start slave;</strong> 开启主从数据同步<br><img src="/img/article/2023_12/1229/07.jpg"></li><li>测试一下，在主库中新建一个测试表，打开从库检查是否同步。<br><img src="/img/article/2023_12/1229/08.jpg"><br><img src="/img/article/2023_12/1229/09.jpg"><br><strong>到此已完成主从配置数据同步。</strong></li></ol>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> MySQL </tag>
            
            <tag> JAVA开发笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows本地同时运行两个MySQL服务</title>
      <link href="/posts/ebbf4489/"/>
      <url>/posts/ebbf4489/</url>
      
        <content type="html"><![CDATA[<ul><li>在Windows本地同时运行2个MySQL服务，首先要删除系统用户的环境变量(如果本地MySQL数据库中没有存放太多数据建议直接导出数据后卸载)。</li><li>下面开始安装主库master</li></ul><ol><li><p>在MySQL官网下载最新免安装版本(.zip的文件)，<a href="https://dev.mysql.com/downloads/mysql">官网下载地址</a> <a href="https://pan.baidu.com/s/1U2zhrhA0m8gFHV3GTWRNTA?pwd=3795">百度网盘地址</a></p></li><li><p>解压后，创建一个<strong>my.ini</strong>的文件,为主库添加以下配置<br><img src="/img/article/2023_12/1228/01.jpg"></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="comment">#主库和从库需要不一致</span></span><br><span class="line"><span class="attr">server-id</span>=<span class="number">48</span></span><br><span class="line"><span class="attr">log-bin</span>=mysql-bin</span><br><span class="line"><span class="comment">#同步的数据库</span></span><br><span class="line"><span class="attr">binlog-do-db</span>=test</span><br><span class="line"> </span><br><span class="line"><span class="comment">#不需要同步的数据库</span></span><br><span class="line"><span class="attr">binlog-ignore-db</span>=mysql</span><br><span class="line"><span class="comment"># 设置3308端口</span></span><br><span class="line"><span class="attr">port</span>=<span class="number">3308</span></span><br><span class="line"><span class="comment"># 设置mysql的安装目录</span></span><br><span class="line"><span class="attr">basedir</span>=D:\Program Files\mysql-<span class="number">8.1</span>.<span class="number">0</span>-winx<span class="number">64_3308</span></span><br><span class="line"><span class="comment"># 设置mysql数据库的数据的存放目录</span></span><br><span class="line"><span class="attr">datadir</span>=D:\Program Files\mysql-<span class="number">8.1</span>.<span class="number">0</span>-winx<span class="number">64_3308</span>\Data</span><br><span class="line"><span class="comment"># 允许最大连接数</span></span><br><span class="line"><span class="attr">max_connections</span>=<span class="number">200</span></span><br><span class="line"><span class="comment"># 允许连接失败的次数。</span></span><br><span class="line"><span class="attr">max_connect_errors</span>=<span class="number">10</span></span><br><span class="line"><span class="comment"># 服务端使用的字符集默认为UTF8</span></span><br><span class="line"><span class="attr">character-set-server</span>=utf8</span><br><span class="line"><span class="comment"># 创建新表时将使用的默认存储引擎</span></span><br><span class="line"><span class="attr">default-storage-engine</span>=INNODB</span><br><span class="line"><span class="comment"># 默认使用“mysql_native_password”插件认证</span></span><br><span class="line"><span class="comment">#mysql_native_password</span></span><br><span class="line"><span class="attr">default_authentication_plugin</span>=mysql_native_password</span><br><span class="line"><span class="section">[mysql]</span></span><br><span class="line"><span class="comment"># 设置mysql客户端默认字符集</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8</span><br><span class="line"><span class="section">[client]</span></span><br><span class="line"><span class="comment"># 设置mysql客户端连接服务端时默认使用的端口</span></span><br><span class="line"><span class="attr">port</span>=<span class="number">3308</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8</span><br></pre></td></tr></table></figure></li><li><p>进入bin目录，打开CMD(一定要以管理员身份运行)<br><img src="/img/article/2023_12/1228/02.jpg"></p></li><li><p>输入命令： <strong>mysqld –initialize –user&#x3D;mysql –console</strong> </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --initialize --user=mysql --console</span><br></pre></td></tr></table></figure><p>这里一定要记录下初始的密码，一会需要用到(切记！！!)<br><img src="/img/article/2023_12/1228/03.jpg"></p></li><li><p>执行安装命令： <strong>mysqld –install mysql3 –defaults-file&#x3D;”D:\Program Files\mysql-8.1.0-winx64_3308\my.ini”</strong> 等号后面是你的安装路径。(这里为了演示之前已经运行了2个MySQL服务了，所以这是第三个服务起名叫mysql3，名字可以随便起)</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --install mysql3 --defaults-file=<span class="string">&quot;D:\Program Files\mysql-8.1.0-winx64_3308\my.ini&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/img/article/2023_12/1228/04.jpg"><br>出现 <strong>Service successfully installed</strong> 表示安装成功。</p></li><li><p>在服务中找到<strong>mysql3</strong>的服务启动。<br><img src="/img/article/2023_12/1228/05.jpg"></p></li><li><p>更改root的登陆密码，首先用初始密码进行登陆(第4步复制的初始密码) 执行命令： <strong>mysql -u root -p</strong> 这里注意<strong>初始密码不能复制只能手敲。</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><p><img src="/img/article/2023_12/1228/06.jpg"><br>然后输入命令：<strong>ALTER USER root@localhost IDENTIFIED  BY ‘root’;</strong> 将新密码设置为root</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER root@localhost IDENTIFIED  BY <span class="string">&#x27;root&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src="/img/article/2023_12/1228/07.jpg"><br>出现 <strong>Query OK</strong> 表示主库已经安装配置并运行完成了。</p></li></ol><ul><li>从库的安装slave</li><li>把之前下载的.zip包再解压一份出来，名字改为: <strong>mysql-8.1.0-winx64_3309</strong><br><img src="/img/article/2023_12/1228/08.jpg"></li><li>再复制一份主库的my.ini文件过来，修改的地方如下<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="comment">#主库和从库需要不一致</span></span><br><span class="line"><span class="attr">server-id</span>=<span class="number">49</span></span><br><span class="line"><span class="attr">log-bin</span>=mysql-bin</span><br><span class="line"><span class="comment">#同步的数据库</span></span><br><span class="line"><span class="attr">binlog-do-db</span>=test</span><br><span class="line"> </span><br><span class="line"><span class="comment">#不需要同步的数据库</span></span><br><span class="line"><span class="attr">binlog-ignore-db</span>=mysql</span><br><span class="line"><span class="comment"># 设置3309端口</span></span><br><span class="line"><span class="attr">port</span>=<span class="number">3309</span></span><br><span class="line"><span class="comment"># 设置mysql的安装目录</span></span><br><span class="line"><span class="attr">basedir</span>=D:\Program Files\mysql-<span class="number">8.1</span>.<span class="number">0</span>-winx<span class="number">64_3309</span></span><br><span class="line"><span class="comment"># 设置mysql数据库的数据的存放目录</span></span><br><span class="line"><span class="attr">datadir</span>=D:\Program Files\mysql-<span class="number">8.1</span>.<span class="number">0</span>-winx<span class="number">64_3309</span>\Data</span><br><span class="line"><span class="comment"># 允许最大连接数</span></span><br><span class="line"><span class="attr">max_connections</span>=<span class="number">200</span></span><br><span class="line"><span class="comment"># 允许连接失败的次数。</span></span><br><span class="line"><span class="attr">max_connect_errors</span>=<span class="number">10</span></span><br><span class="line"><span class="comment"># 服务端使用的字符集默认为UTF8</span></span><br><span class="line"><span class="attr">character-set-server</span>=utf8</span><br><span class="line"><span class="comment"># 创建新表时将使用的默认存储引擎</span></span><br><span class="line"><span class="attr">default-storage-engine</span>=INNODB</span><br><span class="line"><span class="comment"># 默认使用“mysql_native_password”插件认证</span></span><br><span class="line"><span class="comment">#mysql_native_password</span></span><br><span class="line"><span class="attr">default_authentication_plugin</span>=mysql_native_password</span><br><span class="line"><span class="section">[mysql]</span></span><br><span class="line"><span class="comment"># 设置mysql客户端默认字符集</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8</span><br><span class="line"><span class="section">[client]</span></span><br><span class="line"><span class="comment"># 设置mysql客户端连接服务端时默认使用的端口</span></span><br><span class="line"><span class="attr">port</span>=<span class="number">3309</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8</span><br></pre></td></tr></table></figure>重复安装主库的<strong>3-7</strong>步骤，注意第<strong>5</strong>步需要替换下执行命令的安装位置 为 <strong>mysqld –install mysql4 –defaults-file&#x3D;”D:\Program Files\mysql-8.1.0-winx64_3309\my.ini”</strong> 到最后一步出现 <strong>Query OK</strong> 从库也安装并运行完成了。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> 教程 </tag>
            
            <tag> MySQL </tag>
            
            <tag> JAVA开发笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot整合Mybatis-Plus+Druid实现读写分离</title>
      <link href="/posts/9e8659df/"/>
      <url>/posts/9e8659df/</url>
      
        <content type="html"><![CDATA[<h3 id="需求说明"><a href="#需求说明" class="headerlink" title="需求说明"></a>需求说明</h3><ul><li>由于演示项目是在本地，要实现读写分离需要运行两个MySQL服务，具体配置请参考 <a href="https://wind-of-grace.gitee.io/posts/ebbf4489/">相同IP运行两个MySQL服务</a> 一文。</li><li>数据库的主从同步请参考 <a href="https://wind-of-grace.gitee.io/posts/81fe7684/">MySQL配置主从同步</a> 一文。</li></ul><ol><li><p>给项目导入maven依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dynamic-datasource-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在application.yml中，重新配置数据源的主表和从表连接信息。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">jackson:</span></span><br><span class="line">    <span class="attr">time-zone:</span> <span class="string">GMT+8</span></span><br><span class="line">  <span class="comment"># 主从配置数据源</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">dynamic:</span></span><br><span class="line">      <span class="attr">primary:</span> <span class="string">master</span> <span class="comment"># 设置默认的数据源或者数据源组,默认值即为master</span></span><br><span class="line">      <span class="attr">datasource:</span></span><br><span class="line">        <span class="attr">master:</span></span><br><span class="line">          <span class="attr">username:</span> <span class="string">ENC(ytrxf1igA4bazqZ6TOOc1A==)</span></span><br><span class="line">          <span class="attr">password:</span> <span class="string">ENC(j/o7k6nZe+yAMoWVWRnjFg==)</span></span><br><span class="line">          <span class="comment"># url: jdbc:mysql://localhost:3306/test?zeroDateTimeBehavior=convertToNull&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false</span></span><br><span class="line">          <span class="attr">url:</span> <span class="string">ENC(HGhXM/YPMbWuzpJU4ih1Fp1odOPrBpp0JZf+3fWXC1UEQuepTvk0tEgOpRL1z0TiK7PJyLw7BaR8vFJeA/jfFk0i3+Vm5pSx5KYFRdOvjvyg4ae+BzmFCi5qdzspZQwGZotZKtjIEls=)</span></span><br><span class="line">        <span class="attr">slave:</span></span><br><span class="line">          <span class="attr">username:</span> <span class="string">ENC(ytrxf1igA4bazqZ6TOOc1A==)</span></span><br><span class="line">          <span class="attr">password:</span> <span class="string">ENC(j/o7k6nZe+yAMoWVWRnjFg==)</span></span><br><span class="line">          <span class="comment"># url: jdbc:mysql://localhost:3307/test?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=GMT%2B8</span></span><br><span class="line">          <span class="attr">url:</span> <span class="string">ENC(FS523JDxZiuSiZWOxHO4yj0+ZYht3vAgtK/rsXztN4mKJV8KOMN0M34fBKehuJ7jB8rkJoCWptoUqyBrF1pZSevs0OAjFrDXTx31baufuvX5s9Qvbhlk7EiWvaBU0APfXDKLm+5Eivs=)</span></span><br></pre></td></tr></table></figure></li><li><p>完成以上配置使用注解 <strong>@DS(“slave”)</strong> 即可实现主从切换， <strong>“slave”</strong> 是yml中配置的从库名字,不加注解默认使用主库 <strong>master</strong>，注解可以在service和mapper的方法上使用。</p></li></ol><ul><li>service层使用<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@DS(&quot;slave&quot;)</span><span class="comment">// 执行从表获取数据</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> IPage&lt;TabUserInfo&gt; <span class="title function_">listByPage</span><span class="params">(Page&lt;TabUserInfo&gt; pageParam, TabUserInfo userInfo)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (userInfo == <span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> baseMapper.selectPage(pageParam,<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    QueryWrapper&lt;TabUserInfo&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    <span class="type">String</span> <span class="variable">mobile</span> <span class="operator">=</span> userInfo.getMobile();</span><br><span class="line">    <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> userInfo.getName();</span><br><span class="line">    queryWrapper</span><br><span class="line">            .like(mobile!=<span class="literal">null</span>,<span class="string">&quot;mobile&quot;</span>,mobile)</span><br><span class="line">            .like(name!= <span class="literal">null</span>,<span class="string">&quot;name&quot;</span>, name);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> baseMapper.selectPage(pageParam,queryWrapper);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>mapper层使用<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@DS(&quot;slave&quot;)</span></span><br><span class="line"><span class="meta">@Select(&quot;&lt;script&gt;&quot; +</span></span><br><span class="line"><span class="meta">        &quot;SELECT mobile,name,id FROM tab_user_info WHERE 1=1&quot; +</span></span><br><span class="line"><span class="meta">        &quot;&lt;if test=&#x27;mobile != null and mobile != \&quot;\&quot; &#x27;&gt;&quot; +</span></span><br><span class="line"><span class="meta">        &quot; AND mobile = #&#123;mobile&#125;&quot; +</span></span><br><span class="line"><span class="meta">        &quot;&lt;/if&gt;&quot; +</span></span><br><span class="line"><span class="meta">        &quot; AND age = &#x27;18&#x27; order by id&quot; +</span></span><br><span class="line"><span class="meta">        &quot;&lt;/script&gt;&quot;)</span></span><br><span class="line">Map&lt;String, Object&gt; <span class="title function_">selByMobile</span><span class="params">(String mobile)</span>;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> JAVA开发笔记 </tag>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RabbitMQ实现订单30分钟超时自动关闭</title>
      <link href="/posts/9c2e1a7/"/>
      <url>/posts/9c2e1a7/</url>
      
        <content type="html"><![CDATA[<ul><li><strong>实现原理</strong><br>生成订单时，往MQ传递一个消息设置有效期30分钟，再该信息失效的时候(没有被消费的情况下)，执行客户端的一个方法来告知我们信息已经失效(消息过期投递到死信队列)，这时候我们在对订单做处理。</li></ul><ol><li>声明死信队列相关的属性<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderDlxConfig</span>  &#123;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 订单交换机</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Value(&quot;$&#123;wind.order.exchange&#125;&quot;)</span></span><br><span class="line">   <span class="keyword">private</span> String orderExchange;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 订单队列</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Value(&quot;$&#123;wind.order.queue&#125;&quot;)</span></span><br><span class="line">   <span class="keyword">private</span> String orderQueue;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 订单路由key</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Value(&quot;$&#123;wind.order.routingKey&#125;&quot;)</span></span><br><span class="line">   <span class="keyword">private</span> String orderRoutingKey;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 死信交换机</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Value(&quot;$&#123;wind.dlx.exchange&#125;&quot;)</span></span><br><span class="line">   <span class="keyword">private</span> String dlxExchange;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 死信队列</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Value(&quot;$&#123;wind.dlx.queue&#125;&quot;)</span></span><br><span class="line">   <span class="keyword">private</span> String dlxQueue;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 死信路由</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Value(&quot;$&#123;wind.dlx.routingKey&#125;&quot;)</span></span><br><span class="line">   <span class="keyword">private</span> String dlxRoutingKey;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Bean</span></span><br><span class="line">   <span class="keyword">public</span> Queue <span class="title function_">orderQueue</span><span class="params">()</span>&#123;</span><br><span class="line">       Map&lt;String, Object&gt; args = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;(<span class="number">2</span>);</span><br><span class="line">       <span class="comment">// 绑定我们的死信交换机</span></span><br><span class="line">       args.put(<span class="string">&quot;x-dead-letter-exchange&quot;</span>, dlxExchange);</span><br><span class="line">       <span class="comment">// 绑定我们的路由key</span></span><br><span class="line">       args.put(<span class="string">&quot;x-dead-letter-routing-key&quot;</span>, dlxRoutingKey);</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Queue</span>(orderQueue, <span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">false</span>, args);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="meta">@Bean</span></span><br><span class="line">   <span class="keyword">public</span> Queue <span class="title function_">orderDeadQueue</span><span class="params">()</span>&#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Queue</span>(dlxQueue);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">//绑定交换机</span></span><br><span class="line">   <span class="meta">@Bean</span></span><br><span class="line">   <span class="keyword">public</span> DirectExchange <span class="title function_">orderExchange</span><span class="params">()</span>&#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">DirectExchange</span>(orderExchange);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="meta">@Bean</span></span><br><span class="line">   <span class="keyword">public</span> DirectExchange <span class="title function_">orderDeadExchange</span><span class="params">()</span>&#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">DirectExchange</span>(dlxExchange);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//绑定路由键</span></span><br><span class="line">   <span class="meta">@Bean</span></span><br><span class="line">   <span class="keyword">public</span> Binding <span class="title function_">orderBindingExchange</span><span class="params">(Queue orderQueue, DirectExchange orderExchange)</span> &#123;</span><br><span class="line">       <span class="keyword">return</span> BindingBuilder.bind(orderQueue).to(orderExchange).with(orderRoutingKey);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">//绑定死信队列到死信交换机</span></span><br><span class="line">   <span class="meta">@Bean</span></span><br><span class="line">   <span class="keyword">public</span> Binding <span class="title function_">deadBindingExchange</span><span class="params">(Queue orderDeadQueue,  DirectExchange orderDeadExchange)</span> &#123;</span><br><span class="line">       <span class="keyword">return</span> BindingBuilder.bind(orderDeadQueue).to(orderDeadExchange).with(dlxRoutingKey);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>添加application.yml的相关配置<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">rabbitmq:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">5672</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">fu99999</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">fu99999</span></span><br><span class="line"><span class="comment"># MQ</span></span><br><span class="line"><span class="attr">wind:</span></span><br><span class="line">  <span class="comment"># 死信队列</span></span><br><span class="line">  <span class="attr">dlx:</span></span><br><span class="line">    <span class="attr">exchange:</span> <span class="string">wind_order_dlx_exchange</span></span><br><span class="line">    <span class="attr">queue:</span> <span class="string">wind_order_dlx_queue</span></span><br><span class="line">    <span class="attr">routingKey:</span> <span class="string">dlx</span></span><br><span class="line">  <span class="comment"># 订单队列</span></span><br><span class="line">  <span class="attr">order:</span></span><br><span class="line">    <span class="attr">exchange:</span> <span class="string">wind_order_exchange</span></span><br><span class="line">    <span class="attr">queue:</span> <span class="string">wind_order_queue</span></span><br><span class="line">    <span class="attr">routingKey:</span> <span class="string">order</span></span><br></pre></td></tr></table></figure></li><li>创建生产者(设置10秒过期，验证消息是否加入死信队列)</li></ol><ul><li>在创建订单后使用 rabbitTemplate.convertAndSend() 发送消息到RabbitMQ，将订单号作为消息发送到指定的交换机（orderExchange）和路由键（orderRoutingKey）</li><li>messagePostProcessor(): 定义了一个消息后处理器，用于设置消息的属性，通过message.getMessageProperties().setExpiration(“10000”);设置过期时间10秒<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/order&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FuOrderController</span> &#123;</span><br><span class="line">  <span class="meta">@Resource</span></span><br><span class="line">  <span class="keyword">private</span> FuOrderService orderService;</span><br><span class="line">  <span class="meta">@Resource</span></span><br><span class="line">  <span class="keyword">private</span> RabbitTemplate rabbitTemplate;</span><br><span class="line">  <span class="meta">@Resource</span></span><br><span class="line">  <span class="keyword">private</span> RedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Value(&quot;$&#123;wind.order.exchange&#125;&quot;)</span></span><br><span class="line">  <span class="keyword">private</span> String orderExchange; <span class="comment">//订单交换机</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@Value(&quot;$&#123;wind.order.routingKey&#125;&quot;)</span></span><br><span class="line">  <span class="keyword">private</span> String orderRoutingKey; <span class="comment">//订单路由key</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@PostMapping(&quot;createOrderByMQ&quot;)</span></span><br><span class="line">  <span class="keyword">public</span> R <span class="title function_">createOrderByMQ</span><span class="params">(<span class="meta">@RequestBody</span> FuOrder fuOrder, HttpServletRequest request)</span> &#123;</span><br><span class="line">      <span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> request.getHeader(<span class="string">&quot;token&quot;</span>);</span><br><span class="line">      <span class="type">Random</span> <span class="variable">random</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">      <span class="type">String</span> <span class="variable">orderNo</span> <span class="operator">=</span> String.valueOf(random.nextLong()).replace(<span class="string">&quot;-&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">      fuOrder.setOrderNo(Long.valueOf(orderNo));</span><br><span class="line">      fuOrder.setCreateTime(LocalDateTime.now());</span><br><span class="line">      fuOrder.setUserId(Math.toIntExact(JwtUtils.getUserId(token)));</span><br><span class="line">      <span class="type">boolean</span> <span class="variable">order</span> <span class="operator">=</span> orderService.save(fuOrder);</span><br><span class="line">      <span class="keyword">if</span> (order) &#123;</span><br><span class="line">          <span class="comment">// rabbit投递消息</span></span><br><span class="line">          rabbitTemplate.convertAndSend(orderExchange, orderRoutingKey, fuOrder.getId(), messagePostProcessor());</span><br><span class="line">          <span class="keyword">return</span> R.ok().message(<span class="string">&quot;创建订单成功&quot;</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> R.error().message(<span class="string">&quot;创建订单失败&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 处理待发送消息MQ</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">private</span> MessagePostProcessor <span class="title function_">messagePostProcessor</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MessagePostProcessor</span>() &#123;</span><br><span class="line">          <span class="meta">@Override</span></span><br><span class="line">          <span class="keyword">public</span> Message <span class="title function_">postProcessMessage</span><span class="params">(Message message)</span> <span class="keyword">throws</span> AmqpException &#123;</span><br><span class="line">              <span class="comment">//设置有效期30分钟</span></span><br><span class="line">              <span class="comment">//message.getMessageProperties().setExpiration(&quot;1800000&quot;);</span></span><br><span class="line">              message.getMessageProperties().setExpiration(<span class="string">&quot;10000&quot;</span>);<span class="comment">//10秒</span></span><br><span class="line">              <span class="keyword">return</span> message;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ol start="4"><li>创建死信消费者和消费者过期信息</li></ol><ul><li>死信队列消费方法:<br>@RabbitListener(queues &#x3D; “mayikt_order_dlx_queue”): 使用 @RabbitListener 注解标记了一个监听名为 “mayikt_order_dlx_queue” 的死信队列的方法。<br>public void orderConsumer(String orderId): 该方法接收从死信队列中获取的消息，消息内容为订单号 orderId。</li><li>然后处理未支付情况下的相关业务<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@RabbitListener(</span></span><br><span class="line"><span class="meta">        bindings = @QueueBinding(value = @Queue(&quot;wind_order_dlx_queue&quot;),</span></span><br><span class="line"><span class="meta">        exchange = @Exchange(value = &quot;wind_order_dlx_exchange&quot;, type = ExchangeTypes.DIRECT),</span></span><br><span class="line"><span class="meta">        key = &quot;dlx&quot;))</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderDlxConsumer</span> &#123;</span><br><span class="line">   <span class="meta">@Resource</span></span><br><span class="line">   <span class="keyword">private</span> FuOrderService orderService;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 监听我们的死信队列</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@RabbitHandler</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">orderConsumer</span><span class="params">(Long orderId)</span> &#123;</span><br><span class="line">       log.info(<span class="string">&quot;死信队列获取消息订单ID:&quot;</span> + orderId);</span><br><span class="line">       <span class="keyword">if</span> (StringUtils.isEmpty(orderId.toString())) &#123;</span><br><span class="line">           <span class="keyword">return</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="type">FuOrder</span> <span class="variable">orderEntity</span> <span class="operator">=</span> orderService.getById(orderId);</span><br><span class="line">       <span class="keyword">if</span> (<span class="literal">null</span> == orderEntity) &#123;</span><br><span class="line">           <span class="keyword">return</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="type">Integer</span> <span class="variable">orderStatus</span> <span class="operator">=</span> orderEntity.getStatus();</span><br><span class="line">       <span class="comment">// 判断未支付,取消订单</span></span><br><span class="line">       <span class="keyword">if</span> (<span class="number">1</span> == orderStatus) &#123;</span><br><span class="line">           <span class="type">FuOrder</span> <span class="variable">orderInfo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FuOrder</span>();</span><br><span class="line">           BeanUtils.copyProperties(orderEntity, orderInfo);</span><br><span class="line">           orderInfo.setStatus(<span class="number">0</span>);</span><br><span class="line">           orderInfo.setClosetTime(LocalDateTime.now());</span><br><span class="line">           orderInfo.setUpdateTime(LocalDateTime.now());</span><br><span class="line">           orderService.updateById(orderInfo);</span><br><span class="line">       &#125;</span><br><span class="line">       log.info(<span class="string">&quot;MQ死信队列过期未支付订单处理结束&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> JAVA开发笔记 </tag>
            
            <tag> RabbitMQ </tag>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring Boot项目实现订单超时未支付自动取消策略</title>
      <link href="/posts/a9e0e369/"/>
      <url>/posts/a9e0e369/</url>
      
        <content type="html"><![CDATA[<h3 id="需求说明"><a href="#需求说明" class="headerlink" title="需求说明"></a>需求说明</h3><p>在涉及到支付相关的应用中，通常需要实现个功能，用户在生成订单一段时间未完成支付，系统将会自动取消这个订单。本文将基于SpringBoot项目实现订单超时未支付的几种方案策略。</p><h3 id="方案1：定时任务"><a href="#方案1：定时任务" class="headerlink" title="方案1：定时任务"></a>方案1：定时任务</h3><ul><li>利用SpringBoot中的 <mark class="hl-label orange">@Scheduled</mark>  注解，实现定时任务。周期性的检查数据库中是否存在超时未支付的订单，如果存在则取消。代码如下：（<a href="https://cron.qqe2.com/">cron在线生成表达式参考</a>）<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Scheduled(cron = &quot;0 0/1 * * * ?  &quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">cancelUnpaidOrders</span><span class="params">()</span> &#123;</span><br><span class="line">    log.info(<span class="string">&quot;每分钟扫描超过30分钟未支付的订单&quot;</span>);</span><br><span class="line">    List&lt;FuOrder&gt; list = orderService.list();</span><br><span class="line">    <span class="keyword">for</span> (FuOrder fuOrder : list) &#123;</span><br><span class="line">        <span class="keyword">if</span> (fuOrder.getCreateTime().plusMinutes(<span class="number">30</span>).isBefore(LocalDateTime.now())</span><br><span class="line">                &amp;&amp; fuOrder.getStatus() == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="type">FuOrder</span> <span class="variable">newInfo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FuOrder</span>();</span><br><span class="line">            BeanUtils.copyProperties(fuOrder, newInfo);</span><br><span class="line">            newInfo.setStatus(<span class="number">0</span>);</span><br><span class="line">            newInfo.setClosetTime(LocalDateTime.now());</span><br><span class="line">            newInfo.setUpdateTime(LocalDateTime.now());</span><br><span class="line">            orderService.updateById(newInfo);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    log.info(<span class="string">&quot;定时处理订单表所有未支付订单结束&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>PS：注意不要忘记在启动类中添加开启定时任务 <mark class="hl-label orange">@EnableScheduling</mark>  注解。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@EnableTransactionManagement</span></span><br><span class="line"><span class="meta">@EnableScheduling</span> <span class="comment">//开启定时任务</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;com.fu99999.*.**.mapper&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">NoteApplication</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>  <span class="keyword">throws</span> UnknownHostException &#123;</span><br><span class="line"><span class="type">ConfigurableApplicationContext</span> <span class="variable">application</span> <span class="operator">=</span> SpringApplication.run(NoteApplication.class, args);</span><br><span class="line"><span class="type">TomcatServletWebServerFactory</span> <span class="variable">tomcatServlet</span> <span class="operator">=</span> application.getBean(TomcatServletWebServerFactory.class);</span><br><span class="line"><span class="type">String</span> <span class="variable">ip</span> <span class="operator">=</span> InetAddress.getLocalHost().getHostAddress();</span><br><span class="line"><span class="type">int</span> <span class="variable">port</span> <span class="operator">=</span> tomcatServlet.getPort();</span><br><span class="line"><span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> tomcatServlet.getContextPath();</span><br><span class="line">log.info(<span class="string">&quot;\n----------------------------------------------------------\n\t&quot;</span> +</span><br><span class="line"><span class="string">&quot;External: \thttp://&quot;</span> + ip + <span class="string">&quot;:&quot;</span> + port + path + <span class="string">&quot;/\n\t&quot;</span> +</span><br><span class="line"><span class="string">&quot;swagger-ui: \thttp://&quot;</span> + ip + <span class="string">&quot;:&quot;</span> + port + path + <span class="string">&quot;/swagger-ui/index.html\n\t&quot;</span> +</span><br><span class="line"><span class="string">&quot;Doc: \t\thttp://&quot;</span> + ip + <span class="string">&quot;:&quot;</span> + port + path + <span class="string">&quot;/doc.html\n&quot;</span> +</span><br><span class="line"><span class="string">&quot;----------------------------------------------------------&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="方案2：Redis过期事件"><a href="#方案2：Redis过期事件" class="headerlink" title="方案2：Redis过期事件"></a>方案2：Redis过期事件</h3><ul><li>利用redis的键过期事件功能,在用户下单时，生成一个令牌(有效期)30分钟,存放到redis。通过redis的过期事件通知功能触发订单取消操作。</li></ul><ol><li>首先写个创建订单并存入redis的接口（这里只演示Impl的代码），在写一个过期时，处理订单的方法用于redis自动调用。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;createOrderByRedisKey&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">createOrderByRedisKey</span><span class="params">(<span class="meta">@RequestBody</span> FuOrder fuOrder, HttpServletRequest request)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> request.getHeader(<span class="string">&quot;token&quot;</span>);</span><br><span class="line">    <span class="type">Random</span> <span class="variable">random</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">    <span class="type">String</span> <span class="variable">orderNo</span> <span class="operator">=</span> String.valueOf(random.nextLong()).replace(<span class="string">&quot;-&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    fuOrder.setOrderNo(Long.valueOf(orderNo));</span><br><span class="line">    fuOrder.setCreateTime(LocalDateTime.now());</span><br><span class="line">    fuOrder.setUserId(Math.toIntExact(JwtUtils.getUserId(token)));</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">order</span> <span class="operator">=</span> orderService.save(fuOrder);</span><br><span class="line">    <span class="keyword">if</span> (order) &#123;</span><br><span class="line">        redisTemplate.opsForValue().set(<span class="string">&quot;fu99999:order:&quot;</span> + fuOrder.getId(), fuOrder,<span class="number">30</span> , TimeUnit.MINUTES);</span><br><span class="line">        <span class="keyword">return</span> R.ok().message(<span class="string">&quot;创建订单成功&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> R.error().message(<span class="string">&quot;创建订单失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>然后要确保redis的配置（Windows系统通常是叫redis.windows.conf）中开启了键空间通知功能。通过在配置文件中添加或修改如下配置实现。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">notify-keyspace-events &quot;Ex&quot;</span><br></pre></td></tr></table></figure></li><li>在项目中新建Listener 并继承自 KeyExpirationEventMessageListener<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RedisKeyExpirationListener</span> <span class="keyword">extends</span> <span class="title class_">KeyExpirationEventMessageListener</span> &#123;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Resource</span></span><br><span class="line">   <span class="keyword">private</span> FuOrderService orderService;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="title function_">RedisKeyExpirationListener</span><span class="params">(RedisMessageListenerContainer listenerContainer)</span> &#123;</span><br><span class="line">       <span class="built_in">super</span>(listenerContainer);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 重写onMessage()方法处理过期Key</span></span><br><span class="line"><span class="comment">    * 用于对订单超时的的逻辑处理</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onMessage</span><span class="params">(Message message, <span class="type">byte</span>[] pattern)</span> &#123;</span><br><span class="line">       <span class="type">String</span> <span class="variable">expiredKey</span> <span class="operator">=</span> message.toString();</span><br><span class="line">       log.info(<span class="string">&quot;------------------redis key 失效; key = &quot;</span> + expiredKey);</span><br><span class="line">       <span class="keyword">if</span> (expiredKey.startsWith(<span class="string">&quot;fu99999:order:&quot;</span>)) &#123;</span><br><span class="line">           <span class="comment">// 处理订单超时逻辑</span></span><br><span class="line">           <span class="type">String</span> <span class="variable">orderId</span> <span class="operator">=</span> expiredKey.split(<span class="string">&quot;:&quot;</span>)[<span class="number">2</span>];</span><br><span class="line">           orderService.cancelOrder(Long.valueOf(orderId));</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">cancelOrder</span><span class="params">(Long orderId)</span> &#123;</span><br><span class="line">    <span class="type">FuOrder</span> <span class="variable">fuOrder</span> <span class="operator">=</span> baseMapper.selectById(orderId);</span><br><span class="line">    <span class="type">FuOrder</span> <span class="variable">overdueOrder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FuOrder</span>();</span><br><span class="line">    BeanUtils.copyProperties(fuOrder,overdueOrder);</span><br><span class="line">    overdueOrder.setStatus(<span class="number">0</span>);</span><br><span class="line">    overdueOrder.setClosetTime(LocalDateTime.now());</span><br><span class="line">    overdueOrder.setUpdateTime(LocalDateTime.now());</span><br><span class="line">    baseMapper.updateById(overdueOrder);</span><br><span class="line">    log.info(<span class="string">&quot;redis过期未支付订单处理结束&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>新建配置类 RedisListenerConfig<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RedisListenerConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    RedisMessageListenerContainer <span class="title function_">container</span><span class="params">(RedisConnectionFactory connectionFactory)</span> &#123;</span><br><span class="line">        <span class="type">RedisMessageListenerContainer</span> <span class="variable">container</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RedisMessageListenerContainer</span>();</span><br><span class="line">        container.setConnectionFactory(connectionFactory);</span><br><span class="line">        <span class="keyword">return</span> container;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="方案3：延迟队列-死信队列"><a href="#方案3：延迟队列-死信队列" class="headerlink" title="方案3：延迟队列(死信队列)"></a>方案3：延迟队列(死信队列)</h3><ul><li>使用消息队列（如RabbitMQ）的延迟队列功能，当订单生成时将订单ID推送到延迟队列，设置30分钟后过期，过期后消费该消息，取消订单。<br>具体实现代码详见 <a href="https://wind-of-grace.gitee.io/posts/9c2e1a7/">RabbitMQ实现订单30分钟超时自动关闭</a> 一文。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> JAVA开发笔记 </tag>
            
            <tag> RabbitMQ </tag>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RabbitMQ Windows下载安装</title>
      <link href="/posts/a79ec2fd/"/>
      <url>/posts/a79ec2fd/</url>
      
        <content type="html"><![CDATA[<h3 id="什么是MQ"><a href="#什么是MQ" class="headerlink" title="什么是MQ"></a>什么是MQ</h3><p><strong>MQ(Message Quene)</strong> : 翻译为 消息队列,通过典型的 生产者和消费者模型,生产者不断向消息队列中生产消息，消费者不断的从队列中获取消息。因为消息的生产和消费都是异步的，而且只关心消息的发送和接收，没有业务逻辑的侵入,轻松的实现系统间解耦。别名为 消息中间件 通过利用高效可靠的消息传递机制进行平台无关的数据交流，并基于数据通信来进行分布式系统的集成。</p><h3 id="下载Erlang和RabbitMQ"><a href="#下载Erlang和RabbitMQ" class="headerlink" title="下载Erlang和RabbitMQ"></a>下载Erlang和RabbitMQ</h3><p>RabbitMQ是使用Erlang语言开发的开源消息队列系统,所以安装RabbitMQ前需要先安装下Erlang。<a href="https://www.erlang.org/">Erlang官网地址</a>,如果下载速度慢可以从我的云盘里下载。</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://pan.baidu.com/s/1_25NIFDNZwCQJ65GaluPyQ?pwd=sazk">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://pan.baidu.com/m-static/base/static/images/favicon.ico)">          <i class="anzhiyufont anzhiyu-icon-link" style="display: none"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">Erlang安装包</div>            <div class="tag-link-sitename">百度云下载</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><p><img src="/img/article/2023_12/1219/01.jpg"><br><a href="https://www.rabbitmq.com/">RabbitMQ官网地址</a></p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://fu99999.lanzouu.com/isSrx1ieudtg">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://assets.woozooo.com/assets/favicon.ico)">          <i class="anzhiyufont anzhiyu-icon-link" style="display: none"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">RabbitMQ安装包</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><p><img src="/img/article/2023_12/1219/02.jpg"></p><h3 id="安装Erlang"><a href="#安装Erlang" class="headerlink" title="安装Erlang"></a>安装Erlang</h3><ol><li>打开.exe安装包，下一步即可，建议自定义安装目录，方便后续配置环境变量。<br><img src="/img/article/2023_12/1219/03.jpg"></li><li>设置环境变量 <mark class="hl-label orange">ERLANG_HOME</mark>  ,值为Erlang安装目录。<br><img src="/img/article/2023_12/1219/04.jpg"></li><li>添加环境变量 <mark class="hl-label orange">Path</mark>  配置，值为 <mark class="hl-label orange">%ERLANG_HOME%\bin</mark> 。<br><img src="/img/article/2023_12/1219/05.jpg"></li><li>打开CMD，输入<mark class="hl-label orange">erl</mark> 会显示erl相应的版本。<br><img src="/img/article/2023_12/1219/08.jpg"></li></ol><h3 id="安装RabbitMQ"><a href="#安装RabbitMQ" class="headerlink" title="安装RabbitMQ"></a>安装RabbitMQ</h3><ol><li>打开.exe安装包，下一步即可，建议自定义安装目录，方便后续配置环境变量。<br><img src="/img/article/2023_12/1219/09.jpg"></li><li>设置环境变量 <mark class="hl-label orange">RABBITMQ_HOME</mark>  ,值为RabbitMQ安装目录。<br><img src="/img/article/2023_12/1219/06.jpg"></li><li>添加环境变量 <mark class="hl-label orange">Path</mark>  配置，值为 <mark class="hl-label orange">%RABBITMQ_HOME%\sbin</mark> 。<br><img src="/img/article/2023_12/1219/07.jpg"><br><strong>PS</strong>: 如果已经安装了Erlang后，环境变量也配置了，打开rabbitmq-start闪退。<br>在CMD中执行以下两个命令(相应位置替换成你的安装位置)<blockquote><p>D:\Program Files\RabbitMQ Server\rabbitmq_server-3.12.10\sbin&gt;set ERLANG_HOME&#x3D;D:\Program Files\Erlang OTP<br>D:\Program Files\RabbitMQ Server\rabbitmq_server-3.12.10\sbin&gt;rabbitmq-plugins.bat enable rabbitmq_management</p></blockquote></li></ol><h3 id="配置RabbitMQ管理界面"><a href="#配置RabbitMQ管理界面" class="headerlink" title="配置RabbitMQ管理界面"></a>配置RabbitMQ管理界面</h3><ol><li>进入MQ安装的目录下(D:\Program Files\RabbitMQ Server\rabbitmq_server-3.12.10\sbin)这是我的本地地址，管理员运行<mark class="hl-label orange">rabbitmqctl.bat</mark> </li><li>访问管理系统界面，<mark class="hl-label orange">http://localhost:15672/</mark> <br><img src="/img/article/2023_12/1219/10.jpg"></li><li>输入默认的账号密码都是 <mark class="hl-label orange">guest</mark> </li><li>在管理界面中Admin中添加一个新的角色，输入Username,Password完成点击Add user<br><img src="/img/article/2023_12/1219/11.jpg"></li><li>添加完成之后，点击Name给角色设置权限，就可以在项目中配置使用了~<br><img src="/img/article/2023_12/1219/12.jpg"></li></ol>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> 教程 </tag>
            
            <tag> JAVA开发笔记 </tag>
            
            <tag> RabbitMQ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot项目使用Jasypt加密库给数据库加密</title>
      <link href="/posts/87971af6/"/>
      <url>/posts/87971af6/</url>
      
        <content type="html"><![CDATA[<h3 id="需求说明"><a href="#需求说明" class="headerlink" title="需求说明"></a>需求说明</h3><p>项目中会有使用配置文件来存放敏感信息（比如数据库密码、redis等）,但生产环境中如果采用明文配置将会有安全问题。为了消除安全隐患，最直接的方式就是把明文敏感信息加密,解密。Jasypt 框架提供了很好的解决方案。</p><h3 id="Jasypt-简介"><a href="#Jasypt-简介" class="headerlink" title="Jasypt 简介"></a>Jasypt 简介</h3><p><strong>Jasypt</strong> 是一个Java库，Java加密包，用于加密和解密敏感数据，它允许开发人员以很简单的方式添加基本加密功能，且无需深入研究加密原理。</p><h3 id="Jasypt的功能特性"><a href="#Jasypt的功能特性" class="headerlink" title="Jasypt的功能特性"></a>Jasypt的功能特性</h3><ul><li>安全性高</li><li>线程安全</li><li>配置性能高</li><li>跨语言平台等</li><li>详细介绍请见<a href="http://www.jasypt.org/">Jasypt官网</a></li></ul><h3 id="在SpringBoot项目中如何使用Jasypt"><a href="#在SpringBoot项目中如何使用Jasypt" class="headerlink" title="在SpringBoot项目中如何使用Jasypt"></a>在SpringBoot项目中如何使用Jasypt</h3><ol><li><p>添加<strong>Jasypt</strong>依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.ulisesbocchio<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jasypt-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>yml</strong>配置文件</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jasypt:</span></span><br><span class="line">  <span class="attr">encryptor:</span></span><br><span class="line">    <span class="attr">bean:</span> <span class="string">fu99999EncryptorBean</span></span><br></pre></td></tr></table></figure></li><li><p>配置文件中是以<strong>bean</strong>的方式注入,在启动类中添加<strong>jasypt</strong>的<strong>bean</strong>给数据库进行加密</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean(name = &quot;fu99999EncryptorBean&quot;)</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">public</span> StringEncryptor <span class="title function_">stringEncryptor</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">PooledPBEStringEncryptor</span> <span class="variable">encryptor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PooledPBEStringEncryptor</span>();</span><br><span class="line"><span class="type">SimpleStringPBEConfig</span> <span class="variable">config</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleStringPBEConfig</span>();</span><br><span class="line">config.setPassword(<span class="string">&quot;windOfGrace&quot;</span>);<span class="comment">// 加密的密钥，随便自己填写</span></span><br><span class="line">config.setAlgorithm(<span class="string">&quot;PBEWithMD5AndDES&quot;</span>);<span class="comment">// 加密的算法，这个算法是默认的</span></span><br><span class="line">config.setKeyObtentionIterations(<span class="string">&quot;1000&quot;</span>);</span><br><span class="line">config.setPoolSize(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">config.setProviderName(<span class="string">&quot;SunJCE&quot;</span>);</span><br><span class="line">config.setSaltGeneratorClassName(<span class="string">&quot;org.jasypt.salt.RandomSaltGenerator&quot;</span>);</span><br><span class="line">config.setIvGeneratorClassName(<span class="string">&quot;org.jasypt.iv.NoIvGenerator&quot;</span>);</span><br><span class="line">config.setStringOutputType(<span class="string">&quot;base64&quot;</span>);</span><br><span class="line">encryptor.setConfig(config);</span><br><span class="line"><span class="keyword">return</span> encryptor;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>写一个工具类或者写个<strong>main</strong>方法执行下需要加密的数据库地址</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">  System.out.println(stringEncryptor().encrypt(<span class="string">&quot;jdbc:mysql://localhost/test?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=GMT%2B8&quot;</span>));</span><br><span class="line">  System.out.println(stringEncryptor().encrypt(<span class="string">&quot;root&quot;</span>));</span><br><span class="line">  System.out.println(stringEncryptor().encrypt(<span class="string">&quot;123456&quot;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>把加密之后的秘钥配置到数据库地址中,注意格式ENC(秘钥)</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">jackson:</span></span><br><span class="line">    <span class="attr">time-zone:</span> <span class="string">GMT+8</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">ENC(Oxpc++igRsuJSCMb4cNJiN7tpna46QcTpDOMpjEd51lWpaYEELJ6asrk7jCmEHtlDaQ1GsDQ+B8VtdnQ1gg6w3uZ81a6KkGocQluWOuqmXI2yf5LQ0/r2d6LWN9FuqoqOeICVUcbmxY=)</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">ENC(ytrxf1igA4bazqZ6TOOc1A==)</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">ENC(j/o7k6nZe+yAMoWVWRnjFg==)</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> JAVA开发笔记 </tag>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mybatis-plus自定义Mapper.xml文件路径</title>
      <link href="/posts/ab030d2a/"/>
      <url>/posts/ab030d2a/</url>
      
        <content type="html"><![CDATA[<ul><li><strong>mybatis-plus</strong> 是有默认的.xml文件路径的,路径为&#x2F;mapper&#x2F;**&#x2F;*.xml,我们现在想自定义的它的位置而不是在resources目录下创建,最后的解构如下图<br><img src="/img/article/2023_12/1205/01.jpg"></li></ul><ol><li>首先在项目的 <strong>pom</strong> 文件中的 <strong>build</strong> 标签里添加下面这段配置<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>然后打开项目的 <strong>application.yml</strong> 配置文件,给 <strong>mapper-locations</strong> 添加路径配置<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mapper-locations:</span> <span class="string">com/fu99999/note/mapper/xml/*.xml</span></span><br></pre></td></tr></table></figure><img src="/img/article/2023_12/1205/02.jpg"><br><strong>最后重启项目，大功告成。</strong></li></ol>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> JAVA开发笔记 </tag>
            
            <tag> mybatis-plus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>resultMap,resultType在xml中多表联查写法</title>
      <link href="/posts/28c6bc0a/"/>
      <url>/posts/28c6bc0a/</url>
      
        <content type="html"><![CDATA[<ul><li>为了方便区分这里直接创建了UserVoToResultType，UserVoToResultMap两个返回的vo类。先看下<strong>ResultType</strong>的写法</li></ul><ol><li>vo类 UserVoToResultType<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserVoToResultType</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String mobile;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> Integer fileId;</span><br><span class="line">    <span class="keyword">private</span> String domainType;</span><br><span class="line">    <span class="keyword">private</span> String levelType;</span><br><span class="line">    <span class="keyword">private</span> String filesName;</span><br><span class="line">    <span class="keyword">private</span> String filesUrl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>Controller <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;listAllToResultType&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">listAllToResultType</span><span class="params">(<span class="meta">@RequestParam(name = &quot;pageNo&quot;, defaultValue = &quot;1&quot;)</span> Integer pageNo,</span></span><br><span class="line"><span class="params">                             <span class="meta">@RequestParam(name = &quot;pageSize&quot;, defaultValue = &quot;10&quot;)</span> Integer pageSize,</span></span><br><span class="line"><span class="params">                             <span class="meta">@RequestParam</span> Integer fileId)</span> &#123;</span><br><span class="line">    Page&lt;UserVoToResultType&gt; pageParam = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(pageNo, pageSize);</span><br><span class="line">    IPage&lt;UserVoToResultType&gt; listPage = userInfoService.listAllToResultType(pageParam,fileId);</span><br><span class="line">    <span class="keyword">return</span> R.ok().data(<span class="string">&quot;listPage&quot;</span>, listPage);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>直接跳过Service和Impl来到Mapper层<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IPage&lt;UserVoToResultType&gt; <span class="title function_">listAllToResultType</span><span class="params">(Page&lt;UserVoToResultType&gt; pageParam, Integer fileId)</span>;</span><br></pre></td></tr></table></figure></li><li>xml文件,直接将查询的结果映射到指定的vo中<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;listAllToResultType&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.baomidou.mybatisplus.core.metadata.IPage&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.fu99999.note.pojo.vo.UserVoToResultType&quot;</span>&gt;</span></span><br><span class="line">   select</span><br><span class="line">       tui.id,</span><br><span class="line">       tui.name,</span><br><span class="line">       tui.mobile,</span><br><span class="line">       tui.age,</span><br><span class="line">       tui.file_id,</span><br><span class="line">       tfi.domain_type,</span><br><span class="line">       tfi.level_type,</span><br><span class="line">       tfi.files_name,</span><br><span class="line">       tfi.files_url</span><br><span class="line">   from tab_user_info tui left join tab_file_info tfi on tui.file_id = tfi.id where tui.file_id = #&#123;fileId&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><ul><li><strong>ResultMap</strong>的写法</li></ul><ol><li>vo类 UserVoToResultMap<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserVoToResultMap</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String mobile;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> Integer fileId;</span><br><span class="line">    <span class="comment">// TabFileInfo是file表的实体类</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;TabFileInfo&gt; fileInfoList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>Controller<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;listAllToResultMap&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">listAllToResultMap</span><span class="params">(<span class="meta">@RequestParam(name = &quot;pageNo&quot;, defaultValue = &quot;1&quot;)</span> Integer pageNo,</span></span><br><span class="line"><span class="params">                            <span class="meta">@RequestParam(name = &quot;pageSize&quot;, defaultValue = &quot;10&quot;)</span> Integer pageSize,</span></span><br><span class="line"><span class="params">                            <span class="meta">@RequestParam</span> Integer fileId)</span> &#123;</span><br><span class="line">    Page&lt;UserVoToResultMap&gt; pageParam = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(pageNo, pageSize);</span><br><span class="line">    IPage&lt;UserVoToResultMap&gt; listPage = userInfoService.listAllToResultMap(pageParam,fileId);</span><br><span class="line">    <span class="keyword">return</span> R.ok().data(<span class="string">&quot;listPage&quot;</span>, listPage);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>直接跳过Service和Impl来到Mapper层<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IPage&lt;UserVoToResultMap&gt; <span class="title function_">listAllToResultMap</span><span class="params">(Page&lt;UserVoToResultMap&gt; pageParam, Integer fileId)</span>;</span><br></pre></td></tr></table></figure></li><li>xml文件<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- TabUserInfo表默认映射 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;baseResultMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;com.fu99999.note.pojo.vo.UserVoToResultMap&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;mobile&quot;</span> <span class="attr">column</span>=<span class="string">&quot;mobile&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;age&quot;</span> <span class="attr">column</span>=<span class="string">&quot;age&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;fileId&quot;</span> <span class="attr">column</span>=<span class="string">&quot;file_id&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 多表联查 映射 property=&quot;fileInfoList&quot; 为映射vo的对应表字段名字 ofType属性指定了集合中元素的类型 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;fileInfoList&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;com.fu99999.note.pojo.entity.TabFileInfo&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;domainType&quot;</span> <span class="attr">column</span>=<span class="string">&quot;domain_type&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;levelType&quot;</span> <span class="attr">column</span>=<span class="string">&quot;level_type&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;filesName&quot;</span> <span class="attr">column</span>=<span class="string">&quot;files_name&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;filesUrl&quot;</span> <span class="attr">column</span>=<span class="string">&quot;files_url&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;listAllToResultMap&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.baomidou.mybatisplus.core.metadata.IPage&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;baseResultMap&quot;</span>&gt;</span></span><br><span class="line">    select</span><br><span class="line">        tui.id,</span><br><span class="line">        tui.name,</span><br><span class="line">        tui.mobile,</span><br><span class="line">        tui.age,</span><br><span class="line">        tui.file_id,</span><br><span class="line">        tfi.domain_type,</span><br><span class="line">        tfi.level_type,</span><br><span class="line">        tfi.files_name,</span><br><span class="line">        tfi.files_url</span><br><span class="line">    from tab_user_info tui left join tab_file_info tfi on tui.file_id = tfi.id where tui.file_id = #&#123;fileId&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><ul><li><strong>总结：在做多表联查的时候ResultMap需要在xml中添加collection标签来映射需要返回的字段，需要注意的是property为实体字段名column是对应的数据库中的名字。而ResultType需要注意的是SQL查询的结果要和映射的对象一一对应。</strong></li></ul>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> mybatis </tag>
            
            <tag> JAVA开发笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot项目@spring.active@启动报错</title>
      <link href="/posts/564b1e9/"/>
      <url>/posts/564b1e9/</url>
      
        <content type="html"><![CDATA[<ul><li><strong>SpringBoot项</strong> 启动后报错，信息如下图：<br><img src="/img/article/2023_12/1204/01.jpg"></li><li>项目的pom文件<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">profiles</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开发环境 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>dev<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--默认激活--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>true<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">spring.profiles.active</span>&gt;</span>dev<span class="tag">&lt;/<span class="name">spring.profiles.active</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 环境标识，需要与配置文件的名称相对应 --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--本地编译时自行修改--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">log.homepath</span>&gt;</span>/home/logs<span class="tag">&lt;/<span class="name">log.homepath</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 生产环境 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>prod<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">spring.profiles.active</span>&gt;</span>prod<span class="tag">&lt;/<span class="name">spring.profiles.active</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>application.yml配置<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">@spring.profiles.active@</span></span><br></pre></td></tr></table></figure></li><li>经分析原因，主要是由于此处 <strong>@spring.profiles.active@</strong> 值未解析导致，解决方法：</li><li>在 <strong>pom</strong> 中的 <strong>build</strong> 里面加入 <strong>resources</strong> 标签内容如下<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>添加之后重启项目完美解决报错问题。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> JAVA开发笔记 </tag>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>@Validated注解和@Valid注解区别</title>
      <link href="/posts/51480014/"/>
      <url>/posts/51480014/</url>
      
        <content type="html"><![CDATA[<h3 id="Validated注解和-Valid注解区别"><a href="#Validated注解和-Valid注解区别" class="headerlink" title="@Validated注解和@Valid注解区别"></a>@Validated注解和@Valid注解区别</h3><p><strong>@Valid</strong> 与 <strong>@Validated</strong> 都是用来校验接收参数的,其中 <strong>@Validated</strong>是Spring的注解，对 <strong>@Valid</strong> 进行了封装，所有功能强大。 <strong>@Valid</strong> 是javax包下的注解属于JDK提供的。</p><ul><li><strong>@Valid</strong> 没有分组的功能</li><li><strong>@Validated</strong> 提供了一个分组功能，可以在入参验证时，根据不同的分组采用不同的验证机制</li><li><strong>@Valid</strong> 可以用在方法、构造函数、方法参数和成员属性（字段）上，支持嵌套检测</li><li><strong>@Validated</strong> 可以用在类型、方法和方法参数上。但是不能用在成员属性（字段）上，不支持嵌套检测</li></ul><p>在<strong>SpringBoot</strong>项目中使用需要先引入以下<strong>Maven</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-validation<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Validated注解和-Valid注解使用场景"><a href="#Validated注解和-Valid注解使用场景" class="headerlink" title="@Validated注解和@Valid注解使用场景"></a>@Validated注解和@Valid注解使用场景</h3><ul><li>给请求参数添加校验<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@EqualsAndHashCode(callSuper = false)</span></span><br><span class="line"><span class="meta">@ApiModel(value=&quot;TabUserInfo对象&quot;, description=&quot;用户表&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TabUserInfo</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;主键&quot;)</span></span><br><span class="line">    <span class="meta">@TableId(value = &quot;id&quot;, type = IdType.AUTO)</span></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;姓名&quot;)</span></span><br><span class="line">    <span class="comment">// validated参数校验</span></span><br><span class="line">    <span class="meta">@NotNull(message = &quot;姓名不能为空&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;手机&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String mobile;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;年龄&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li>Controller层<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;saveOrUpdate&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">saveOrUpdate</span><span class="params">(<span class="meta">@RequestBody</span> <span class="meta">@Valid</span> TabUserInfo userInfo)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">saved</span> <span class="operator">=</span> userInfoService.saveOrUpdate(userInfo);</span><br><span class="line">        <span class="keyword">if</span> (saved) &#123;</span><br><span class="line">            <span class="keyword">return</span> R.ok().message(<span class="string">&quot;操作成功&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> R.error().message(<span class="string">&quot;操作失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li>Postman测试<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="string">&quot;5&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;mobile&quot;</span><span class="punctuation">:</span> <span class="string">&quot;13201235669&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li>IDEA控制台的打印<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">DefaultHandlerExceptionResolver :</span> <span class="string">Resolved</span> [<span class="attr">org.springframework.web.bind.MethodArgumentNotValidException:</span> <span class="string">Validation</span> <span class="string">failed</span> <span class="string">for</span> <span class="string">argument</span> [<span class="number">0</span>] <span class="string">in</span> <span class="string">public</span> <span class="string">com.fu99999.note.result.R</span> <span class="string">com.fu99999.note.controller.TabUserInfoController.saveOrUpdate(com.fu99999.note.pojo.entity.TabUserInfo):</span> [<span class="string">Field</span> <span class="string">error</span> <span class="string">in</span> <span class="string">object</span> <span class="string">&#x27;tabUserInfo&#x27;</span> <span class="string">on</span> <span class="string">field</span> <span class="attr">&#x27;name&#x27;:</span> <span class="string">rejected</span> <span class="string">value</span> [<span class="literal">null</span>]<span class="string">;</span> <span class="string">codes</span> [<span class="string">NotNull.tabUserInfo.name</span>,<span class="string">NotNull.name</span>,<span class="string">NotNull.java.lang.String</span>,<span class="string">NotNull</span>]<span class="string">;</span> <span class="string">arguments</span> [<span class="attr">org.springframework.context.support.DefaultMessageSourceResolvable:</span> <span class="string">codes</span> [<span class="string">tabUserInfo.name</span>,<span class="string">name</span>]<span class="string">;</span> <span class="string">arguments</span> []<span class="string">;</span> <span class="string">default</span> <span class="string">message</span> [<span class="string">name</span>]]<span class="string">;</span> <span class="string">default</span> <span class="string">message</span> [<span class="string">姓名不能为空</span>]] ]</span><br></pre></td></tr></table></figure><img src="/img/article/2023_12/1201/01.jpg"><br><strong>@Valid</strong> 的校验不通过会抛出异常，在使用 <strong>@Valid</strong> 注解的请求参数后面可以跟一个 <strong>BindingResult</strong> 对象，这个对象的作用是将所有的异常信息存起来。在源码中可以看出 <strong>BindingResult</strong> 继承 <strong>Error</strong> 对象，异常的信息可以从 <strong>Errors</strong> 中拿到。下面我们自己写一个工具类来返回这些信息。<br><img src="/img/article/2023_12/1201/02.jpg"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HandleValidateErr</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> R <span class="title function_">handleValidateErr</span><span class="params">(BindingResult bindingResult)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">message</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        List&lt;ObjectError&gt; allErrors = bindingResult.getAllErrors();</span><br><span class="line">        <span class="keyword">for</span> (ObjectError allError : allErrors) &#123;</span><br><span class="line">            message = allError.getDefaultMessage();</span><br><span class="line">            <span class="keyword">if</span>(StringUtils.isNotBlank(message))&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> R.error().message(message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>给Controller层添加BindingResult对象<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;saveOrUpdate&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">saveOrUpdate</span><span class="params">(<span class="meta">@RequestBody</span> <span class="meta">@Valid</span> TabUserInfo userInfo, BindingResult bindingResult)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (bindingResult.hasErrors()) &#123;</span><br><span class="line">        <span class="keyword">return</span> HandleValidateErr.handleValidateErr(bindingResult);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">saved</span> <span class="operator">=</span> userInfoService.saveOrUpdate(userInfo);</span><br><span class="line">    <span class="keyword">if</span> (saved) &#123;</span><br><span class="line">        <span class="keyword">return</span> R.ok().message(<span class="string">&quot;操作成功&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> R.error().message(<span class="string">&quot;操作失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>返回结果<br><img src="/img/article/2023_12/1201/03.jpg"><br><strong><span class='p red'>@Validated的使用方法和@Valid相同，因为本来就是对@Valid注解的封装</span></strong></li></ul><h3 id="Validated的分组校验"><a href="#Validated的分组校验" class="headerlink" title="@Validated的分组校验"></a>@Validated的分组校验</h3><ul><li>分别校验Gropu1和Gropu2接口类<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Gropu1</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Gropu2</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>在实体类中分别加入Gropu1和Gropu2的校验规则<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@EqualsAndHashCode(callSuper = false)</span></span><br><span class="line"><span class="meta">@ApiModel(value=&quot;TabUserInfo对象&quot;, description=&quot;用户表&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TabUserInfo</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;主键&quot;)</span></span><br><span class="line">    <span class="meta">@TableId(value = &quot;id&quot;, type = IdType.AUTO)</span></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;姓名&quot;)</span></span><br><span class="line">    <span class="meta">@NotNull(message = &quot;姓名不能为空&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Group2的参数校验</span></span><br><span class="line">    <span class="meta">@Pattern(groups = Group2.class, regexp= &quot;123456&quot;,message =&quot;手机号必须是123456&quot; )</span></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;手机&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String mobile;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Group1的参数校验</span></span><br><span class="line">    <span class="meta">@Min(groups = Group1.class,value=18,message = &quot;age1必须大于等于18&quot;)</span></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;年龄&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li>在Controller添加两个校验接口<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;getGroup1Validated&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">getGroup1Validated</span><span class="params">(<span class="meta">@Validated(Group1.class)</span> <span class="meta">@RequestBody</span> TabUserInfo userInfo)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> R.ok().data(<span class="string">&quot;userInfo&quot;</span>,userInfo);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@GetMapping(&quot;getGroup2Validated&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">getGroup2Validated</span><span class="params">(<span class="meta">@Validated(Group2.class)</span> <span class="meta">@RequestBody</span> TabUserInfo userInfo)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> R.ok().data(<span class="string">&quot;userInfo&quot;</span>,userInfo);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>校验结果<br><img src="/img/article/2023_12/1201/04.jpg"><br><strong><span class='p red'>@Validated(Gropu1.class)如果指定了分组，那么只会对指定分组下的参数进行校验，别的不会管</span></strong></li></ul>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> JAVA开发笔记 </tag>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>eclipse项目如何在IDEA中导入并运行</title>
      <link href="/posts/daa02af0/"/>
      <url>/posts/daa02af0/</url>
      
        <content type="html"><![CDATA[<div class="note anzhiyufont anzhiyu-icon-rocket simple"><p><strong>eclipse</strong> 项目如何在 <strong>IDEA</strong> 中 <strong>打开</strong></p></div><ol><li><p>打开IDEA，依次点击 <strong>File</strong> &gt; <strong>New</strong> &gt; <strong>Project from Existing Sources</strong><br><img src="/img/article/2023_11/1129/01.jpg"></p></li><li><p>选择需要导入的 <strong>eclipse</strong> 项目，点击OK<br><img src="/img/article/2023_11/1129/02.jpg"></p></li><li><p>勾选 <strong>Import project from external model</strong>，选择 <strong>Eclipse</strong>，点击 <strong>Next</strong><br><img src="/img/article/2023_11/1129/03.jpg"></p></li><li><p>后面几步都是点击 <strong>Next</strong>，无需改动其他<br><img src="/img/article/2023_11/1129/04.jpg"></p></li><li><p>选择本地安装的JDK版本，点击 <strong>Create</strong><br><img src="/img/article/2023_11/1129/05.jpg"></p></li><li><p>成功打开，界面如下所示<br><img src="/img/article/2023_11/1129/06.jpg"></p></li></ol><div class="note anzhiyufont anzhiyu-icon-rocket simple"><p><strong>eclipse</strong> 项目如何在 <strong>IDEA</strong> 中 <strong>运行</strong></p></div><ol><li><p>给项目添加需要的依赖，打开IDAE的设置Setting添加JDK版本<br><img src="/img/article/2023_11/1129/07.jpg"></p></li><li><p>在 <strong>File</strong> &gt; <strong>Project Structure</strong> &gt; 选择<strong>Modules</strong> 修改项目 <strong>resources</strong> 文件夹<br><img src="/img/article/2023_11/1129/08.jpg"></p></li><li><p>在 <strong>File</strong> &gt; <strong>Project Structure</strong> &gt; 选择<strong>Libraries</strong> 给项目添加相关依赖<br><img src="/img/article/2023_11/1129/09.jpg"></p></li><li><p>在<strong>Modules</strong> 中添加 <strong>Web</strong><br><img src="/img/article/2023_11/1129/10.jpg"><br>注意在<strong>Modules</strong> &gt; <strong>Dependencies</strong> 中添加 <strong>Tomcat</strong><br><img src="/img/article/2023_11/1129/15.jpg"></p></li><li><p>在 <strong>File</strong> &gt; <strong>Project Structure</strong> &gt; 选择<strong>Facets</strong> 修改刚才添加的 <strong>Web</strong> 的路径<br><img src="/img/article/2023_11/1129/11.jpg"></p></li><li><p>在 <strong>File</strong> &gt; <strong>Project Structure</strong> &gt; 选择<strong>Artifacts</strong> 添加 <strong>Web Application</strong><br><img src="/img/article/2023_11/1129/12.jpg"><br>这里需要注意的是上面的名字格式和把右侧未引入的依赖拉到lib包中<br><img src="/img/article/2023_11/1129/16.jpg"></p></li><li><p>给 <strong>IDEA</strong> 添加本地的 <strong>Tomcat</strong><br><img src="/img/article/2023_11/1129/13.jpg"></p></li><li><p>最后给项目设置启动容器 <strong>Tomcat</strong> 点击 <strong>Apply</strong> 完成。<br><img src="/img/article/2023_11/1129/14.jpg"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> 开发工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux部署服务常用命令和脚本</title>
      <link href="/posts/7fce129e/"/>
      <url>/posts/7fce129e/</url>
      
        <content type="html"><![CDATA[<div class="note blue anzhiyufont anzhiyu-icon-bullhorn simple"><p>前端和后端项目部署到 <strong>Linux</strong> 服务器上的常用命令</p></div><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Tab键 打出名字前几位按Tab自动补全完整名字</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 返回上两级目录</span></span><br><span class="line"><span class="string">cd</span> <span class="string">..</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入指定目录</span></span><br><span class="line"><span class="string">cd</span> <span class="string">/xx/xx/xx</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看目录</span></span><br><span class="line"><span class="string">ls</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看目录(列表)</span></span><br><span class="line"><span class="string">ll</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建文件夹</span></span><br><span class="line"><span class="string">mkdir</span> <span class="string">文件名</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行.sh脚本</span></span><br><span class="line"><span class="string">./xxx.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看日志的最后100行 xxx.log是服务器日志的名字</span></span><br><span class="line"><span class="string">tail</span> <span class="string">-100f</span> <span class="string">xxx.log</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份项目:原名称.bak 或者原名称.bak+时间</span></span><br><span class="line"><span class="string">xxxxx-1.0-SNAPSHOT.jar.bak</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看正在运行的java程序</span></span><br><span class="line"><span class="string">ps</span> <span class="string">-ef|grep</span> <span class="string">java</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看sh脚本</span></span><br><span class="line"><span class="string">cat</span> <span class="string">xxx.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑脚本 i 进入编辑 : 进入退出 q 退出 qw 退出并保存 q! 强制退出不保存</span></span><br><span class="line"><span class="string">vim</span> <span class="string">xxx.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 清屏</span></span><br><span class="line"><span class="string">Ctrl</span> <span class="string">+</span> <span class="string">l</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止程序</span></span><br><span class="line"><span class="string">Ctrl</span> <span class="string">+</span> <span class="string">c</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除文件</span></span><br><span class="line"><span class="string">rm</span> <span class="string">-rf</span> <span class="string">文件名</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 部署前端项目到xx目录下 (前端项目需要先删除旧的项目后部署)</span></span><br><span class="line"><span class="string">\cp</span> <span class="string">-rf</span> <span class="string">/xx/xx/xx/文件名</span> <span class="string">./</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 前端项目打包</span></span><br><span class="line"><span class="string">npm</span> <span class="string">run</span> <span class="string">build</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><div class="note blue anzhiyufont anzhiyu-icon-bullhorn simple"><p>后端部署项目启动&#x2F;停止 <strong>.sh</strong> 脚本</p></div><p><strong>停止正在运行的项目，脚本名称 shutdown-你的项目名称.sh</strong> </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment">#停止xx目录下的项目</span></span><br><span class="line">projectDir=<span class="string">&quot;/xx/xx/xx/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#项目的名字</span></span><br><span class="line">jarName=<span class="string">&quot;xxxxx-1.0-SNAPSHOT.jar&quot;</span></span><br><span class="line"></span><br><span class="line">count=$(ps -ef |grep <span class="variable">$&#123;jarName&#125;</span> |grep -v <span class="string">&quot;grep&quot;</span> |<span class="built_in">wc</span> -l)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;count&#125;</span> -gt 0 ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;已存在<span class="variable">$&#123;count&#125;</span>个<span class="variable">$&#123;jarName&#125;</span>程序在运行&quot;</span></span><br><span class="line">        jarPid=$(ps x |grep <span class="variable">$&#123;jarName&#125;</span> | grep -v grep | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$&#123;jarPid&#125;</span></span><br><span class="line">        <span class="built_in">kill</span> -9 <span class="variable">$&#123;jarPid&#125;</span></span><br><span class="line">        output=`<span class="built_in">echo</span> <span class="string">&quot;正在关闭<span class="variable">$&#123;jarName&#125;</span>程序,进程id<span class="variable">$&#123;jarPid&#125;</span>&quot;</span>`</span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$&#123;output&#125;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;没有对应的程序在运行&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p><strong>启动项目，脚本名称 start-你的项目名称.sh</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#启动目录下的jar包 --server.port=端口号</span></span><br><span class="line"><span class="built_in">nohup</span> java -jar /xx/xxx/xxx/xxxxx-1.0-SNAPSHOT.jar  --server.port=49002  &gt;/dev/null 2&gt;&amp;1 &amp;</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;startup form ok&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> Linux </tag>
            
            <tag> JAVA开发笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IntelliJ IDEA 如何优雅的添加文档注释</title>
      <link href="/posts/8bbb8f5d/"/>
      <url>/posts/8bbb8f5d/</url>
      
        <content type="html"><![CDATA[<p>在日常的开发中，最常用的注释就是 <strong>类注释</strong> 和 <strong>方法注释</strong> ，分别为类和方法添加描述信息，日期，作者等，增强代码的可读性，方便日后维护。但是项目中都会有很多的类和方法，手动依次添加过于麻烦。下面就介绍下如何高效，便捷的添加这些注释。</p><p><img src="/img/article/2023_11/1109/01.jpg"></p><h3 id="类注释"><a href="#类注释" class="headerlink" title="类注释"></a>类注释</h3><p>在IDEA中，依次选择 <strong>File &gt; Setting &gt; Editor &gt; File and Code Templates &gt; Files &gt; Class</strong> 编辑栏中看到的是类的默认模板，把自己模板添加到里面 <strong><span class='p green'>(绿色框内容是博主的模板)</span></strong> <strong><span class='p red'>注意:不要把原来的信息覆盖。</span></strong></p><p><img src="/img/article/2023_11/1109/02.jpg"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>:     wind-of-grace</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:  TODO  </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>:    $&#123;DATE&#125; $&#123;TIME&#125;</span></span><br><span class="line"><span class="comment"> */</span> </span><br></pre></td></tr></table></figure><p>想要一次性为所有的文件都应用上模板，选择 <strong>Files</strong> 旁边的 <strong>Includes</strong> , 在 <strong>File Header</strong> 的编辑栏里添加自己的模板即可。</p><p><img src="/img/article/2023_11/1109/03.jpg"></p><div class="note blue anzhiyufont anzhiyu-icon-bullhorn simple"><p>其它类型的文件可根据自己的需要进行修改。 <strong>${}</strong>  中的值代表变量，下面是支持的变量</p></div><table><thead><tr><th align="center">变量名</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">${PACKAGE_NAME}</td><td align="center">当前新建文件的包名</td></tr><tr><td align="center">${NAME}</td><td align="center">新建文件时指定的文件名</td></tr><tr><td align="center">${USER}</td><td align="center">当前登录用户昵称</td></tr><tr><td align="center">${DATE}</td><td align="center">当前系统日期</td></tr><tr><td align="center">${TIME}</td><td align="center">当前系统时间</td></tr><tr><td align="center">${YEAR}</td><td align="center">当前系统年份</td></tr><tr><td align="center">${MONTH}</td><td align="center">当前系统月份</td></tr><tr><td align="center">${MONTH_NAME_SHORT}</td><td align="center">当前系统月份缩写（Jan、Feb…）</td></tr><tr><td align="center">${MONTH_NAME_FULL}</td><td align="center">当前系统月份全拼 (January, February…)</td></tr><tr><td align="center">${DAY}</td><td align="center">当前系统日份</td></tr><tr><td align="center">${HOUR}</td><td align="center">当前系统时间（时）</td></tr><tr><td align="center">${MINUTE}</td><td align="center">当前系统时间（分）</td></tr><tr><td align="center">${PROJECT_NAME}</td><td align="center">项目名称</td></tr></tbody></table><h3 id="方法注释"><a href="#方法注释" class="headerlink" title="方法注释"></a>方法注释</h3><p>方法注释没有系统默认模板，需要通过 <strong>自定义用户模板</strong> 进行快捷添加。<br>在IDEA中，依次选择 <strong>File &gt; Setting &gt; Editor &gt; Live Templates</strong>，点击右上角 <strong>+</strong> ，选择 <strong>Templates Group</strong> 创建一个新的自定义组 在点击加号选 <strong>Live Template</strong>，创建一个用户自定义模板。<br>根据需要填写快捷键，描述等信息 <strong><span class='p green'>(绿色框内容是博主的模板)</span></strong><br><img src="/img/article/2023_11/1109/04.jpg"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">*</span><br><span class="line"> * <span class="meta">@Author</span> wind-of-grace</span><br><span class="line"> * <span class="meta">@Date</span> $date$ $time$</span><br><span class="line"> * <span class="meta">@Description</span> $context$</span><br><span class="line"> * <span class="meta">@Param</span> $param$</span><br><span class="line"> * <span class="meta">@Return</span> $<span class="keyword">return</span>$</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><p>模板中的变量使用 <strong>“$$”</strong> 包裹，可以在 <strong>Edit Variables</strong> 中进行编辑<br><img src="/img/article/2023_11/1109/05.jpg"></p><p>然后把注释的作用域选择为所有 <strong>JAVA</strong> 文件<br><img src="/img/article/2023_11/1109/06.jpg"></p><p>最后在需要加注释的方法上输入 &#x2F;*s <strong>(这里的s为刚才Abbreviation中填写的值，博主刚才填写的是s)</strong> 回车 方法注释将自动生成。<br><img src="/img/article/2023_11/1109/07.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> 开发工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mybatis使用@Select条件过滤查询</title>
      <link href="/posts/3e6a0ed1/"/>
      <url>/posts/3e6a0ed1/</url>
      
        <content type="html"><![CDATA[<p>有时候项目中没有配置xml文件，需要使用 <strong>@Select</strong> 注解做条件过滤查询，实例方法如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据手机号查询年龄18的用户信息,如不传则全查年龄18的用户（MyBatis <span class="doctag">@Select</span>()写法）</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Select(&quot;&lt;script&gt;&quot; +</span></span><br><span class="line"><span class="meta">        &quot;SELECT mobile,name,id FROM tab_user_info WHERE 1=1&quot; +</span></span><br><span class="line"><span class="meta">        &quot;&lt;if test=&#x27;mobile != null and mobile != \&quot;\&quot; &#x27;&gt;&quot; +</span></span><br><span class="line"><span class="meta">        &quot; AND mobile = #&#123;mobile&#125;&quot; +</span></span><br><span class="line"><span class="meta">        &quot;&lt;/if&gt;&quot; +</span></span><br><span class="line"><span class="meta">        &quot; AND age = &#x27;18&#x27; &quot; +</span></span><br><span class="line"><span class="meta">        &quot;&lt;/script&gt;&quot;)</span></span><br><span class="line">Map&lt;String, Object&gt; <span class="title function_">selByMobile</span><span class="params">(String mobile)</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> mybatis </tag>
            
            <tag> JAVA开发笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JSONObject、JSONArray 非空判断</title>
      <link href="/posts/da623c86/"/>
      <url>/posts/da623c86/</url>
      
        <content type="html"><![CDATA[<ul><li><p>JSONObject、JSONArray 非空判断，这么写的好处是 <strong>null.isEmpty()</strong> 和 <strong>null.size()</strong> 会报空指针异常，添加上 <strong>||</strong> 或  <strong>&amp;&amp;</strong> ，程序就会走不到这一步，所以下面的公式不会报错。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//JSONObject空判断</span></span><br><span class="line"><span class="keyword">if</span> (jsonObj == <span class="literal">null</span> || jsonObj.isEmpty()) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;jsonObj为空&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//JSONObject非空判断</span></span><br><span class="line"><span class="keyword">if</span> (jsonObj != <span class="literal">null</span> &amp;&amp; !jsonObj.isEmpty()) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;jsonObj为非空&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//JSONArray空判断</span></span><br><span class="line"><span class="keyword">if</span> (jsonArray == <span class="literal">null</span> || jsonArray.size() == <span class="number">0</span>) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;jsonArray为空&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//JSONArray非空判断</span></span><br><span class="line"><span class="keyword">if</span> (jsonArray != <span class="literal">null</span> &amp;&amp; jsonArray.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;jsonArray为空&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>实际开发中对JSON数据操作时，<strong>JSONObject &#x2F; JSONArray</strong> 如果为空，在取值 <strong>getJSONObject() &#x2F; getJSONArray()</strong> 会报错，这时就需要先进行判断。<br><strong><span class='p red'>注意：如果给在下面实例中16行代码只写成if (clutterForm.size() > 0)进行判断，运行后则会报NullPointerException</span></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line"> <span class="type">String</span> <span class="variable">json1</span> <span class="operator">=</span> <span class="string">&quot;&#123;\&quot;code\&quot;:200,\&quot;msg\&quot;:null,\&quot;data\&quot;:&#123;\&quot;basicForm\&quot;:[&#123;\&quot;formType\&quot;:\&quot;1\&quot;,\&quot;formVersion\&quot;:\&quot;70\&quot;&#125;],\&quot;clutterForm\&quot;:\&quot;\&quot;&#125;&#125;&quot;</span>;</span><br><span class="line"> <span class="type">String</span> <span class="variable">json2</span> <span class="operator">=</span> <span class="string">&quot;&#123;\&quot;code\&quot;:200,\&quot;data\&quot;:&#123;\&quot;basicForm\&quot;:[&#123;\&quot;formType\&quot;:\&quot;1\&quot;,\&quot;formVersion\&quot;:\&quot;66\&quot;&#125;],\&quot;clutterForm\&quot;:[&#123;\&quot;pcJson\&quot;:&#123;\&quot;gutter\&quot;:0,\&quot;column\&quot;:[&#123;\&quot;readonly\&quot;:true,\&quot;prop\&quot;:\&quot;123\&quot;&#125;]&#125;&#125;]&#125;&#125;&quot;</span>;</span><br><span class="line"></span><br><span class="line"> <span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"> <span class="type">JSONArray</span> <span class="variable">columnEvery</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"> List&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"> list.add(json1);</span><br><span class="line"> list.add(json2);</span><br><span class="line"></span><br><span class="line"> <span class="keyword">for</span> (String json : list) &#123;</span><br><span class="line">     jsonObject = JSON.parseObject(json);</span><br><span class="line">     <span class="keyword">if</span> (jsonObject.containsKey(<span class="string">&quot;data&quot;</span>) &amp;&amp; jsonObject.getJSONObject(<span class="string">&quot;data&quot;</span>).containsKey(<span class="string">&quot;clutterForm&quot;</span>)) &#123;</span><br><span class="line">         com.alibaba.fastjson.<span class="type">JSONArray</span> <span class="variable">clutterForm</span> <span class="operator">=</span> jsonObject.getJSONArray(<span class="string">&quot;clutterForm&quot;</span>);</span><br><span class="line">         <span class="keyword">if</span> (clutterForm != <span class="literal">null</span> &amp;&amp; clutterForm.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">             com.alibaba.fastjson.<span class="type">JSONObject</span> <span class="variable">pcJson</span> <span class="operator">=</span> clutterForm.getJSONObject(<span class="number">0</span>).getJSONObject(<span class="string">&quot;pcJson&quot;</span>);</span><br><span class="line">             <span class="keyword">if</span> (pcJson.containsKey(<span class="string">&quot;column&quot;</span>)) &#123;</span><br><span class="line">                 com.alibaba.fastjson.<span class="type">JSONArray</span> <span class="variable">column</span> <span class="operator">=</span> pcJson.getJSONArray(<span class="string">&quot;column&quot;</span>);</span><br><span class="line">                 <span class="keyword">if</span> (columnEvery == <span class="literal">null</span>) &#123;</span><br><span class="line">                     columnEvery = column;</span><br><span class="line">                 &#125;</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> JSON </tag>
            
            <tag> JAVA开发笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>判断字段是否存在于JSON中并且这个字段是JSONArray</title>
      <link href="/posts/a8b6e537/"/>
      <url>/posts/a8b6e537/</url>
      
        <content type="html"><![CDATA[<ul><li><strong>记录下实际开发过程中遇到的问题。<span class='p red'>报错信息:java.lang.ClassCastException: java.lang.String cannot be cast to com.alibaba.fastjson.JSONArray</span></strong><br>模拟调用返回的数据JSON<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;basicForm&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;formType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;formVersion&quot;</span><span class="punctuation">:</span> <span class="string">&quot;73&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;emptyJson&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;contactMobile&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;contactCode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;contactName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;applyerName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;contactType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;applyerAreaCode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;applyerMobile&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;applyerPageType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;applyerPageCode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">                    <span class="punctuation">&#125;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;clutterForm&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;basicForm&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;formType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;formVersion&quot;</span><span class="punctuation">:</span> <span class="string">&quot;73&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;emptyJson&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;contactMobile&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;contactCode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;contactName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;applyerName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;contactType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;applyerAreaCode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;applyerMobile&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;applyerPageType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;applyerPageCode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">                    <span class="punctuation">&#125;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;clutterForm&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;formVersion&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;templateId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;960b1dbd-0acc-4626-8a55-15ff0f1962b3&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;pcJson&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;submitBtn&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;emptyText&quot;</span><span class="punctuation">:</span> <span class="string">&quot;清空&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;column&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                            <span class="punctuation">&#123;</span></span><br><span class="line">                                <span class="attr">&quot;arrow&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;display&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;labelWidth&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0px&quot;</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;title&quot;</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;children&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                                    <span class="attr">&quot;column&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">                                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;prop&quot;</span><span class="punctuation">:</span> <span class="string">&quot;yhzsx&quot;</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;styles&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                                    <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#000&quot;</span><span class="punctuation">,</span></span><br><span class="line">                                    <span class="attr">&quot;fontSize&quot;</span><span class="punctuation">:</span> <span class="string">&quot;18px&quot;</span></span><br><span class="line">                                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;原核准事项&quot;</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;collapse&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">                            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                            <span class="punctuation">&#123;</span></span><br><span class="line">                                <span class="attr">&quot;arrow&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;display&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;labelWidth&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0px&quot;</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;title&quot;</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;children&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                                    <span class="attr">&quot;column&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">                                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;prop&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bghdsx&quot;</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;styles&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                                    <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#000&quot;</span><span class="punctuation">,</span></span><br><span class="line">                                    <span class="attr">&quot;fontSize&quot;</span><span class="punctuation">:</span> <span class="string">&quot;18px&quot;</span></span><br><span class="line">                                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;变更后的事项&quot;</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;collapse&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">                            <span class="punctuation">&#125;</span></span><br><span class="line">                        <span class="punctuation">]</span></span><br><span class="line">                    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;taskHandleItemCode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;11230000MB1846112W200011606000401&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure></li></ul><p>需求是取出JSON中的”formVersion”的值，这俩条JSON中第一条没有formVersion，而且clutterForm返回的是””,所以要对clutterForm进行校验，实例如下：<br><strong><span class='p red'>注意：在if判断中必须要加上 jsonObject.getJSONObject(data).get(clutterForm) instanceof JSONArray 校验clutterForm是否是一个JSONArray否则会报错</span></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 取出JSON中的&quot;formVersion&quot;的值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"> <span class="type">String</span> <span class="variable">json1</span> <span class="operator">=</span> <span class="string">&quot;&#123;\&quot;code\&quot;:200,\&quot;msg\&quot;:null,\&quot;data\&quot;:&#123;\&quot;basicForm\&quot;:[&#123;\&quot;formType\&quot;:\&quot;1\&quot;,\&quot;formVersion\&quot;:\&quot;73\&quot;,\&quot;emptyJson\&quot;:&#123;\&quot;contactMobile\&quot;:\&quot;\&quot;,\&quot;address\&quot;:\&quot;\&quot;,\&quot;contactCode\&quot;:\&quot;\&quot;,\&quot;contactName\&quot;:\&quot;\&quot;,\&quot;applyerName\&quot;:\&quot;\&quot;,\&quot;contactType\&quot;:\&quot;\&quot;,\&quot;applyerAreaCode\&quot;:\&quot;\&quot;,\&quot;applyerMobile\&quot;:\&quot;\&quot;,\&quot;applyerPageType\&quot;:\&quot;\&quot;,\&quot;applyerPageCode\&quot;:\&quot;\&quot;&#125;&#125;],\&quot;clutterForm\&quot;:\&quot;\&quot;&#125;&#125;&quot;</span>;</span><br><span class="line"> <span class="type">String</span> <span class="variable">json2</span> <span class="operator">=</span> <span class="string">&quot;&#123;\&quot;code\&quot;:200,\&quot;msg\&quot;:null,\&quot;data\&quot;:&#123;\&quot;basicForm\&quot;:[&#123;\&quot;formType\&quot;:\&quot;1\&quot;,\&quot;formVersion\&quot;:\&quot;73\&quot;,\&quot;emptyJson\&quot;:&#123;\&quot;contactMobile\&quot;:\&quot;\&quot;,\&quot;address\&quot;:\&quot;\&quot;,\&quot;contactCode\&quot;:\&quot;\&quot;,\&quot;contactName\&quot;:\&quot;\&quot;,\&quot;applyerName\&quot;:\&quot;\&quot;,\&quot;contactType\&quot;:\&quot;\&quot;,\&quot;applyerAreaCode\&quot;:\&quot;\&quot;,\&quot;applyerMobile\&quot;:\&quot;\&quot;,\&quot;applyerPageType\&quot;:\&quot;\&quot;,\&quot;applyerPageCode\&quot;:\&quot;\&quot;&#125;&#125;],\&quot;clutterForm\&quot;:[&#123;\&quot;formVersion\&quot;:\&quot;2\&quot;,\&quot;templateId\&quot;:\&quot;960b1dbd-0acc-4626-8a55-15ff0f1962b3\&quot;,\&quot;pcJson\&quot;:&#123;\&quot;submitBtn\&quot;:false,\&quot;emptyText\&quot;:\&quot;清空\&quot;,\&quot;column\&quot;:[&#123;\&quot;arrow\&quot;:false,\&quot;display\&quot;:true,\&quot;labelWidth\&quot;:\&quot;0px\&quot;,\&quot;type\&quot;:\&quot;title\&quot;,\&quot;children\&quot;:&#123;\&quot;column\&quot;:[]&#125;,\&quot;prop\&quot;:\&quot;yhzsx\&quot;,\&quot;styles\&quot;:&#123;\&quot;color\&quot;:\&quot;#000\&quot;,\&quot;fontSize\&quot;:\&quot;18px\&quot;&#125;,\&quot;value\&quot;:\&quot;原核准事项\&quot;,\&quot;collapse\&quot;:true&#125;,&#123;\&quot;arrow\&quot;:false,\&quot;display\&quot;:true,\&quot;labelWidth\&quot;:\&quot;0px\&quot;,\&quot;type\&quot;:\&quot;title\&quot;,\&quot;children\&quot;:&#123;\&quot;column\&quot;:[]&#125;,\&quot;prop\&quot;:\&quot;bghdsx\&quot;,\&quot;styles\&quot;:&#123;\&quot;color\&quot;:\&quot;#000\&quot;,\&quot;fontSize\&quot;:\&quot;18px\&quot;&#125;,\&quot;value\&quot;:\&quot;变更后的事项\&quot;,\&quot;collapse\&quot;:true&#125;]&#125;,\&quot;taskHandleItemCode\&quot;:\&quot;11230000MB1846112W200011606000401\&quot;&#125;]&#125;&#125;&quot;</span>;</span><br><span class="line"> List&lt;String&gt; resultList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"> resultList.add(json1);</span><br><span class="line"> resultList.add(json2);</span><br><span class="line"> <span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"> <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"> <span class="keyword">for</span> (String s : resultList) &#123;</span><br><span class="line">     jsonObject = JSON.parseObject(s);</span><br><span class="line">     <span class="type">String</span> <span class="variable">formVersion</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">     <span class="keyword">if</span> (jsonObject.containsKey(<span class="string">&quot;data&quot;</span>)</span><br><span class="line">             &amp;&amp; jsonObject.getJSONObject(<span class="string">&quot;data&quot;</span>).containsKey(<span class="string">&quot;clutterForm&quot;</span>)</span><br><span class="line">             &amp;&amp; jsonObject.getJSONObject(<span class="string">&quot;data&quot;</span>).get(<span class="string">&quot;clutterForm&quot;</span>) <span class="keyword">instanceof</span> JSONArray) &#123;</span><br><span class="line">         <span class="type">JSONArray</span> <span class="variable">clutterForm</span> <span class="operator">=</span> jsonObject.getJSONObject(<span class="string">&quot;data&quot;</span>).getJSONArray(<span class="string">&quot;clutterForm&quot;</span>);</span><br><span class="line">         <span class="keyword">if</span> (clutterForm != <span class="literal">null</span> &amp;&amp; clutterForm.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">             <span class="type">JSONObject</span> <span class="variable">formObject</span> <span class="operator">=</span> clutterForm.getJSONObject(<span class="number">0</span>);</span><br><span class="line">             formVersion = formObject.getString(<span class="string">&quot;formVersion&quot;</span>);</span><br><span class="line">         &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">             formVersion = <span class="string">&quot;&quot;</span>;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     System.out.println(<span class="string">&quot;第&quot;</span> + count + <span class="string">&quot;次version的值：&quot;</span> + formVersion);</span><br><span class="line">     count++;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>打印结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">第1次version的值：</span><br><span class="line">第2次version的值：2</span><br><span class="line"></span><br><span class="line">Process finished with exit code 0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> JSON </tag>
            
            <tag> JAVA开发笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>科学上网</title>
      <link href="/posts/812d49a5/"/>
      <url>/posts/812d49a5/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请微信联系管理员获取." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="55f07f2bb61b86b9065a90bd589d32eef57ee930dffcb546e8bf02c5c5ed89ee">1868d13fbeecd372b4e681d7356fd0bf37e58f44ee6038da56ca03904fd776b603efcf320979267338bf8ac141c1d8691308550f79884fe6afff1d08320be92c83560d411ad28b0b96b902aa223038354ae89014a6b8ab015ce9ecc70e649ad614b0fec5e5b7b2f6e668a0fb006308a8c8d43ef15bf6eda8c5b71b6824575f92a80e282394177b653943cacc40baf6dbb5aaa54213fee22a5e143a2f314f4312424407808aa0cfbba9b81f224ad34c8c03011693f05170298a5a6d56906190b04e2ae4b103e13b4d33e94ee43abbf86e2cad5d9bc44523b5235a960680c88a11c91443843a87d8048958e8dcf80d0f7b2430f469fe2bf25cfe64879b91ca251c54a62e8879109656331bebcf60107d9af298101f5bbb7c89ccd3033f3b5d3409496061edf161723f3178c273a43526dd5412d9596d074ea3dfde10086069110990d782a9498c82ab2329b908b7c92973b5a453f33afc7a3ccb77cfc840eb63098109d8705b12a9fbbff452828dbc6052ca0cc40852aa14a66330e3c3fb785bc72d488d9922e7a6a5f5896da7b85f02e9801b1518ac568e3885c71f448bf7da81e1f6772a86b88d2eadc14dd5346ef1212619becf37e80dd45d8979b977d1b4a02ed822313eba2abe6819b3fa34beff1abc3a6d8858876b8d30fab2bcea7a118245e7ba05462182c52e08bdfc22a809a3d13d6044d88860cc464ff8dc7e29cb942b41706e8e79d28b378e66cee8fb9f3f08d0332ca06eed43fe4e88201d24fda522c99c0aaa8b31384e95b9ffe0baa1696e989da838671315af4c8ae98ffb07546c7b9b4fbfb2bf4700b4018af29fc870aab8cf89387d88a3dd48803a1f6e57afab492e33c4a0cb044a5d3d9fabaddb662eb60c8bacab49d6221437cad4bd8a5cdd42cad73b3335300052e1730f8703c17cf8efb8892524824dc29cc9019efc549386d598feca931d173db9784e6f8334f2df5d807cb061858a41cccce0cca63f457e9a36d2d369453958e79937dff6d5368d99c676d9bbf926506c16841e9cb86d6176eb9751134c1a62525d4a0e6e99f8b1c9d23eff4ac6b34c00e05c7ec790aaf7eb86c9c306c8d104d2b2414646be4834fbb188f5a4b28e15942e5ff21fa5c9caf93270d16c63669d668f1c9656c4d569035cb01c1113f94a764b5998958d84d22579009b23f14d1507e742e8e5be9927f4983c94d976a1ca19c87777eaee98136df2e3395f8409c3815249967e3c41abcf9ba25375a2a021a5d46334c83ef3770932e1b76a50f263a296f41b3091f291fa2d34f3922f1cc10302d43e5d0c41e20dfa38f73c86ba61ccb8d83b313cafabec7e172afe911a14a8228b49314e865f7de0242c8b5c8722d8a042b6503ec7921464cfbed87435634e6df42cd9e7e76c192fe3d468f23022d7a1c2176cb07ef92314c99ddb151ac3e8f4899e569a365dbbf277f7f1c417e64828ff0835320fa9cdb6fe5a0875b2a6994fd00e8dd52741ede04546599adc37450a79ad797d78ae8ab6892d996ffd106e5ca75a46b93432e7f6076c28af8bfdfdeec4155e25d98e30938c8b7c972819a6aebe0aaebda3637f153b3d16d635127e968568d9bb7f90f6f083dc106b95f4f5af1c1cdcf62d706c616f202ad7b0f61c34fde7fd695a7db33215c761471f6ac03076a77e2ff57764517775e8e4dafdda4e729b6591fa229ef38764aa80de9bfded3714d44167861f28c567aa1ec5ce104a287a142f56384bfc1ade629a40f5e7323716933dedf87a80242f2c56bf6ae31cfcd6bfde5862cb4828cf9c29b893f54590d4f9ba71648940c822f97bd4ca9e834ec7c426607048447f51642eb718d09992f38b0142fdb7a35a4fd607b51e529bf01b676d13d5ec00223411b278018f5b6e6c3018e87de62f9159735a9b3dfc8fd8a973e3c11ce55303d5dd14d093baa73edc47b8fcee139bff2cd7f1a6a20a88ff448851edab4106b09f32f9861d906a9077d5b6</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-up">      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-up">您好, 这里需要密码, 请微信联系博主获取.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 生活日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 软件 </tag>
            
            <tag> vpn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mybatis使用@Insert批量插入</title>
      <link href="/posts/3d4e846e/"/>
      <url>/posts/3d4e846e/</url>
      
        <content type="html"><![CDATA[<p>有时候项目中没有配置xml文件，需要使用 <strong>@Insert</strong> 注解批量插入list集合，插入方法如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Insert(&quot;&lt;script&gt;&quot; +</span></span><br><span class="line"><span class="meta">  &quot;INSERT INTO t_user&quot; +</span></span><br><span class="line"><span class="meta">        &quot;        (pack_key,image_file,emojis)&quot; +</span></span><br><span class="line"><span class="meta">        &quot;        VALUES&quot; +</span></span><br><span class="line"><span class="meta">        &quot;        &lt;foreach collection =&#x27;list&#x27; item=&#x27;user&#x27; separator =&#x27;,&#x27;&gt;&quot; +</span></span><br><span class="line"><span class="meta">        &quot;            (#&#123;user.packKey&#125;, #&#123;user.imageFile&#125;, #&#123;user.emojis&#125;)&quot; +</span></span><br><span class="line"><span class="meta">        &quot;        &lt;/foreach &gt;&quot; +</span></span><br><span class="line"><span class="meta">        &quot;&lt;/script&gt;&quot;)</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">insertUsers</span><span class="params">(<span class="meta">@Param(&quot;list&quot;)</span> List&lt;User&gt; users)</span>;</span><br></pre></td></tr></table></figure><p>注意：@Param(“list”) 引号中和foreach标签中 collection 属性值<strong>必须写list</strong>，否则报错。item属性值写实体类的类名，<strong>首字母必须小写</strong><br>如果项目需要在Impl中写批量插入，引入mybatisplus的情况下可以直接调用**saveBathch()**方法，代码片段：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//****</span></span><br><span class="line"><span class="keyword">if</span>(ares&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> Result.error();</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">   <span class="type">boolean</span> <span class="variable">mflag</span> <span class="operator">=</span> <span class="built_in">this</span>.saveBatch(mlist);<span class="comment">//批量插入</span></span><br><span class="line">   <span class="keyword">return</span> mflag ? Result.ok(); : Result.error();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//****  </span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> mybatis </tag>
            
            <tag> JAVA开发笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>fastjson常用方法实例</title>
      <link href="/posts/a03a6685/"/>
      <url>/posts/a03a6685/</url>
      
        <content type="html"><![CDATA[<h3 id="Map转JSON字符串"><a href="#Map转JSON字符串" class="headerlink" title="Map转JSON字符串"></a>Map转JSON字符串</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将Map转Json字符串</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">()</span> &#123;</span><br><span class="line">    Map&lt;String, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, Object&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;key1&quot;</span>, <span class="string">&quot;One&quot;</span>);</span><br><span class="line">    map.put(<span class="string">&quot;key2&quot;</span>, <span class="string">&quot;Two&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">mapJson</span> <span class="operator">=</span> JSON.toJSONString(map);</span><br><span class="line">    System.out.println(mapJson);<span class="comment">//输出：&#123;&quot;key1&quot;:&quot;One&quot;,&quot;key2&quot;:&quot;Two&quot;&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="POJO-List转JSON字符串"><a href="#POJO-List转JSON字符串" class="headerlink" title="POJO List转JSON字符串"></a>POJO List转JSON字符串</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将Java Bean List转Json字符串</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test6</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">Person</span> <span class="variable">person1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">    person1.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    person1.setAge(<span class="number">28</span>);</span><br><span class="line">    person1.setBirthday(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line"> </span><br><span class="line">    <span class="type">Person</span> <span class="variable">person2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">    person2.setName(<span class="string">&quot;李四&quot;</span>);</span><br><span class="line">    person2.setAge(<span class="number">25</span>);</span><br><span class="line">    person2.setBirthday(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line"> </span><br><span class="line">    List&lt;Person&gt; persons = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Person&gt;();</span><br><span class="line">    persons.add(person1);</span><br><span class="line">    persons.add(person2);</span><br><span class="line"> </span><br><span class="line">    <span class="type">String</span> <span class="variable">object</span> <span class="operator">=</span> JSON.toJSONString(persons);</span><br><span class="line">    System.out.println(object);</span><br><span class="line">    <span class="comment">/**输出如下：</span></span><br><span class="line"><span class="comment">     * [&#123;&quot;age&quot;:28,&quot;birthday&quot;:1530511546991,&quot;name&quot;:&quot;张三&quot;&#125;,    </span></span><br><span class="line"><span class="comment">        &#123;&quot;age&quot;:25,&quot;birthday&quot;:1530511546991,&quot;name&quot;:&quot;李四&quot;&#125;]</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="JSON字符串转JsonObject"><a href="#JSON字符串转JsonObject" class="headerlink" title="JSON字符串转JsonObject"></a>JSON字符串转JsonObject</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将Json字符串转为JsonObject对象</span></span><br><span class="line"><span class="comment"> * 取值不存在时，返回null,使用Gson会抛异常</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test2</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">jsonStr</span> <span class="operator">=</span> <span class="string">&quot;&#123;\&quot;key1\&quot;:\&quot;One\&quot;,\&quot;key2\&quot;:\&quot;110\&quot;&#125;&quot;</span>;</span><br><span class="line">    <span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> JSONObject.parseObject(jsonStr);</span><br><span class="line">    System.out.println(jsonObject.getString(<span class="string">&quot;key1&quot;</span>));<span class="comment">//输出one</span></span><br><span class="line">    System.out.println(jsonObject.getInteger(<span class="string">&quot;key2&quot;</span>));<span class="comment">//输出110</span></span><br><span class="line">    System.out.println(jsonObject.getString(<span class="string">&quot;key3&quot;</span>));<span class="comment">//输出null</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="JsonObject转Json字符串"><a href="#JsonObject转Json字符串" class="headerlink" title="JsonObject转Json字符串"></a>JsonObject转Json字符串</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将JsonObject对象转为Json字符串</span></span><br><span class="line"><span class="comment"> * 取值不存在时，返回null,使用Gson会抛异常</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test3</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">jsonStr</span> <span class="operator">=</span> <span class="string">&quot;&#123;\&quot;key1\&quot;:\&quot;One\&quot;,\&quot;key2\&quot;:\&quot;110\&quot;&#125;&quot;</span>;</span><br><span class="line">    <span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> JSONObject.parseObject(jsonStr);</span><br><span class="line">    System.out.println(jsonObject.getString(<span class="string">&quot;key1&quot;</span>));<span class="comment">//输出：one</span></span><br><span class="line">    System.out.println(jsonObject.getInteger(<span class="string">&quot;key2&quot;</span>));<span class="comment">//输出：110</span></span><br><span class="line">    System.out.println(jsonObject.getString(<span class="string">&quot;key3&quot;</span>));<span class="comment">//输出：null</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">parserJsonStr</span> <span class="operator">=</span> JSONObject.toJSONString(jsonObject);</span><br><span class="line">    System.out.println(parserJsonStr);<span class="comment">//输出：&#123;&quot;key1&quot;:&quot;One&quot;,&quot;key2&quot;:&quot;110&quot;&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="JsonArray添加JsonObject"><a href="#JsonArray添加JsonObject" class="headerlink" title="JsonArray添加JsonObject"></a>JsonArray添加JsonObject</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将JsonObject添加到JsonArray</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test4</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">JSONObject</span> <span class="variable">jsonObject1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">    jsonObject1.put(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    jsonObject1.put(<span class="string">&quot;age&quot;</span>, <span class="number">25</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="type">JSONObject</span> <span class="variable">jsonObject2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">    jsonObject2.put(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;李四&quot;</span>);</span><br><span class="line">    jsonObject2.put(<span class="string">&quot;age&quot;</span>, <span class="number">28</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="type">JSONArray</span> <span class="variable">jsonArray</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONArray</span>();</span><br><span class="line">    jsonArray.add(jsonObject1);</span><br><span class="line">    jsonArray.add(jsonObject2);</span><br><span class="line"> </span><br><span class="line">    <span class="type">String</span> <span class="variable">jsonArrStr</span> <span class="operator">=</span> JSONArray.toJSONString(jsonArray);</span><br><span class="line">    System.out.println(jsonArrStr);<span class="comment">//输出：[&#123;&quot;name&quot;:&quot;张三&quot;,&quot;age&quot;:25&#125;,&#123;&quot;name&quot;:&quot;李四&quot;,&quot;age&quot;:28&#125;]</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Json数组字符串转JsonArray"><a href="#Json数组字符串转JsonArray" class="headerlink" title="Json数组字符串转JsonArray"></a>Json数组字符串转JsonArray</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将Json数组字符串转JsonArray</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test5</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">jsonArrStr</span> <span class="operator">=</span> <span class="string">&quot;[&#123;\&quot;name\&quot;:\&quot;张三\&quot;,\&quot;age\&quot;:25&#125;,&#123;\&quot;name\&quot;:\&quot;李四\&quot;,\&quot;age\&quot;:28&#125;]&quot;</span>;</span><br><span class="line">    <span class="type">JSONArray</span> <span class="variable">jsonArray</span> <span class="operator">=</span> JSONArray.parseArray(jsonArrStr);</span><br><span class="line">    <span class="keyword">for</span> (Object object : jsonArray) &#123;</span><br><span class="line">        <span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> (JSONObject) object;</span><br><span class="line">        System.out.println(jsonObject.getString(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">        System.out.println(jsonObject.getString(<span class="string">&quot;age&quot;</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;--------------&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="POJO转Json字符串"><a href="#POJO转Json字符串" class="headerlink" title="POJO转Json字符串"></a>POJO转Json字符串</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将Java Bean 转Json字符串</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test7_2</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">Person</span> <span class="variable">person1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">    person1.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    person1.setAge(<span class="number">26</span>);</span><br><span class="line">    person1.setBirthday(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**两种方式都行</span></span><br><span class="line"><span class="comment">     * 因为JSONObject继承了JSON*/</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">object</span> <span class="operator">=</span> JSONObject.toJSONString(person1);</span><br><span class="line">    <span class="comment">/*String object = JSON.toJSONString(person1);*/</span></span><br><span class="line"> </span><br><span class="line">    System.out.println(object);</span><br><span class="line">    <span class="comment">/**输出如下：</span></span><br><span class="line"><span class="comment">     * &#123;&quot;age&quot;:26,&quot;birthday&quot;:1530511790302,&quot;name&quot;:&quot;张三&quot;&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="POJO转JsonObject"><a href="#POJO转JsonObject" class="headerlink" title="POJO转JsonObject"></a>POJO转JsonObject</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将Java Bean 转Json 对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test8</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">Person</span> <span class="variable">person1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">    person1.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    person1.setAge(<span class="number">28</span>);</span><br><span class="line">    person1.setBirthday(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**方式一*/</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">jsonStr</span> <span class="operator">=</span> JSONObject.toJSONString(person1);</span><br><span class="line">    <span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> JSONObject.parseObject(jsonStr);</span><br><span class="line">    System.out.println(jsonObject.get(<span class="string">&quot;name&quot;</span>));<span class="comment">//输出：张三</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**方式二*/</span></span><br><span class="line">    <span class="type">JSONObject</span> <span class="variable">jsonObject1</span> <span class="operator">=</span> (JSONObject)JSONObject.toJSON(person1);</span><br><span class="line">    System.out.println(jsonObject1.get(<span class="string">&quot;age&quot;</span>));<span class="comment">//输出：28</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="POJO-List转JsonArray"><a href="#POJO-List转JsonArray" class="headerlink" title="POJO List转JsonArray"></a>POJO List转JsonArray</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将Java Bean List 转Json 数组</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test9</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">Person</span> <span class="variable">person1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">    person1.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    person1.setAge(<span class="number">28</span>);</span><br><span class="line">    person1.setBirthday(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line"> </span><br><span class="line">    <span class="type">Person</span> <span class="variable">person2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">    person2.setName(<span class="string">&quot;李四&quot;</span>);</span><br><span class="line">    person2.setAge(<span class="number">25</span>);</span><br><span class="line">    person2.setBirthday(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line"> </span><br><span class="line">    List&lt;Person&gt; persons = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Person&gt;();</span><br><span class="line">    persons.add(person1);</span><br><span class="line">    persons.add(person2);</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**方式1*/</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">jsonArrStr</span> <span class="operator">=</span> JSONArray.toJSONString(persons);</span><br><span class="line">    <span class="type">JSONArray</span> <span class="variable">jsonArray</span> <span class="operator">=</span> JSONArray.parseArray(jsonArrStr);</span><br><span class="line">    <span class="type">JSONObject</span> <span class="variable">jsonObject1</span> <span class="operator">=</span> (JSONObject)jsonArray.get(<span class="number">0</span>);</span><br><span class="line">    System.out.println(jsonObject1.get(<span class="string">&quot;name&quot;</span>));<span class="comment">//输出：张三</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**方式2*/</span></span><br><span class="line">    <span class="type">JSONArray</span> <span class="variable">jsonArray1</span> <span class="operator">=</span> (JSONArray)JSONArray.toJSON(persons);</span><br><span class="line">    <span class="type">JSONObject</span> <span class="variable">jsonObject2</span> <span class="operator">=</span> (JSONObject)jsonArray1.get(<span class="number">1</span>);</span><br><span class="line">    System.out.println(jsonObject2.get(<span class="string">&quot;name&quot;</span>));<span class="comment">//输出：李四</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="JSON字符串转-Map-与-POJO"><a href="#JSON字符串转-Map-与-POJO" class="headerlink" title="JSON字符串转 Map 与 POJO"></a>JSON字符串转 Map 与 POJO</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> <span class="string">&quot;&#123;\&quot;PARENT_ID\&quot;:1,\&quot;NAME\&quot;:\&quot;国家级正职\&quot;,\&quot;CODE\&quot;:\&quot;101\&quot;,\&quot;LEVEL_NUM\&quot;:2,\&quot;ID\&quot;:2&#125;&quot;</span>;</span><br><span class="line">        <span class="type">Map</span> <span class="variable">map</span> <span class="operator">=</span> JSONObject.parseObject(content, Map.class);<span class="comment">//json 对象转 map</span></span><br><span class="line">        System.out.println(map);</span><br><span class="line">        <span class="comment">//输出：&#123;CODE=101, LEVEL_NUM=2, ID=2, PARENT_ID=1, NAME=国家级正职&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将Json 对象 转 Java Bean</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test10</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">Person</span> <span class="variable">person1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">    person1.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    person1.setAge(<span class="number">28</span>);</span><br><span class="line">    person1.setBirthday(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line"> </span><br><span class="line">    <span class="type">String</span> <span class="variable">jsonPOJOStr</span> <span class="operator">=</span> JSON.toJSONString(person1);</span><br><span class="line">    <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> JSONObject.parseObject(jsonPOJOStr, Person.class);</span><br><span class="line">    System.out.println(person);</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 输出：Person&#123;age=28, name=&#x27;张三&#x27;, birthday=Mon Jul 02 14:27:53 CST 2018&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="字符串Json数组转List"><a href="#字符串Json数组转List" class="headerlink" title="字符串Json数组转List"></a>字符串Json数组转List</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test2</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> <span class="string">&quot;[&#123;\&quot;PARENT_ID\&quot;:1,\&quot;NAME\&quot;:\&quot;国家级正职 </span></span><br><span class="line"><span class="string">        \&quot;,\&quot;CODE\&quot;:\&quot;101\&quot;,\&quot;LEVEL_NUM\&quot;:2,\&quot;ID\&quot;:2&#125;,</span></span><br><span class="line"><span class="string">        &#123;\&quot;PARENT_ID\&quot;:1,\&quot;NAME\&quot;:\&quot;国家级副职</span></span><br><span class="line"><span class="string">        \&quot;,\&quot;CODE\&quot;:\&quot;102\&quot;,\&quot;LEVEL_NUM\&quot;:2,\&quot;ID\&quot;:3&#125;]&quot;</span>;</span><br><span class="line">        <span class="comment">//parseArray(String text, Class&lt;T&gt; clazz)：clazz 指定 list 中的元素类型</span></span><br><span class="line">        List&lt;Map&gt; mapList = JSONArray.parseArray(content, Map.class);</span><br><span class="line">        <span class="comment">//json 转 List&lt;Map&gt;</span></span><br><span class="line">        System.out.println(mapList);</span><br><span class="line">    &#125;</span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将Json 数组 转 Java List</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test11</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">jsonArrPOJOStr</span> <span class="operator">=</span> <span class="string">&quot;[&#123;\&quot;birthday\&quot;:1530512954968,\&quot;name\&quot;:\&quot;张三</span></span><br><span class="line"><span class="string">        \&quot;,\&quot;age\&quot;:28&#125;,&quot;</span> +</span><br><span class="line">    <span class="string">&quot;&#123;\&quot;birthday\&quot;:1530512954968,\&quot;name\&quot;:\&quot;李四\&quot;,\&quot;age\&quot;:25&#125;]&quot;</span>;</span><br><span class="line">    List&lt;Person&gt; personList = JSONArray.parseArray(jsonArrPOJOStr, Person.class);</span><br><span class="line">    <span class="keyword">for</span> (Person person : personList) &#123;</span><br><span class="line">        System.out.println(person);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 输出：</span></span><br><span class="line"><span class="comment">     * Person&#123;age=28, name=&#x27;张三&#x27;, birthday=Mon Jul 02 14:29:14 CST 2018&#125;</span></span><br><span class="line"><span class="comment">     * Person&#123;age=25, name=&#x27;李四&#x27;, birthday=Mon Jul 02 14:29:14 CST 2018&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> JSON </tag>
            
            <tag> JAVA开发笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mybatis-plus常用注释</title>
      <link href="/posts/3ff382cd/"/>
      <url>/posts/3ff382cd/</url>
      
        <content type="html"><![CDATA[<h3 id="TableName"><a href="#TableName" class="headerlink" title="@TableName"></a>@TableName</h3><p>实体类的名字是User，数据库表名是t_user</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableName(value = &quot;t_user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="TableId"><a href="#TableId" class="headerlink" title="@TableId"></a>@TableId</h3><p>实体类的属性名是 id，数据库的列名是 uid，此时使用 value 属性将属性名映射到列名</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableId(value = &quot;uid&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String id;</span><br></pre></td></tr></table></figure><h3 id="type属性用来定义主键策略"><a href="#type属性用来定义主键策略" class="headerlink" title="type属性用来定义主键策略"></a>type属性用来定义主键策略</h3><ul><li>IdType.ASSIGN_ID <strong>使用基于雪花算法的策略生成数据id, <span class='p red'>注意：当对象的id被明确赋值时，不会使用雪花算法</span></strong> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableId(type = IdType.ASSIGN_ID)</span></span><br><span class="line"><span class="keyword">private</span> Long id;</span><br></pre></td></tr></table></figure></li><li>IdType.AUTO <strong>使用数据库的自增策略 <span class='p red'>注意：该类型请确保数据库设置了 ID自增 否则无效</span></strong><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableId(type = IdType.AUTO)</span></span><br><span class="line"><span class="keyword">private</span> Long id;</span><br></pre></td></tr></table></figure></li><li>全局配置 <strong>要想影响所有实体的配置，可以设置全局主键配置</strong><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#全局设置主键生成策略</span></span><br><span class="line"><span class="string">mybatis-plus.global-config.db-config.id-type=auto</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="TableField"><a href="#TableField" class="headerlink" title="@TableField"></a>@TableField</h3><p>功能同TableId的value属性,exist属性用于非数据库中的字段，用于想额外返回给前台表之外的值</p><span class='p red'>注意：MP会自动将数据库中的下划线命名风格转化为实体类中的驼峰命名风格</span><p><strong>例如，</strong>数据库中的列 create_time 和 update_time 自动对应实体类中的 createTime 和 updateTime</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableField(exist = false)</span> <span class="comment">//注明非数据库字段属性 实体类上使用</span></span><br><span class="line"><span class="keyword">private</span> String abc;</span><br><span class="line"><span class="meta">@TableField(value = &quot;数据库中字段名字&quot;)</span><span class="comment">// 实体的名字对应数据库中字段名字 用于实体名字和数据库名字不一样的情况   </span></span><br><span class="line"><span class="keyword">private</span> LocalDateTime createTime;<span class="comment">//对应数据库字段create_time</span></span><br></pre></td></tr></table></figure><h3 id="自动填充"><a href="#自动填充" class="headerlink" title="自动填充"></a>自动填充</h3><p>项目中经常会遇到一些数据，每次都使用相同的方式填充，例如记录的创建时间，更新时间等。我们可以使用MyBatis Plus的自动填充功能，完成这些字段的赋值工作。<br><strong>例如，</strong>阿里巴巴的开发手册中建议每个数据库表必须要有create_time 和 update_time字段，我们可以使用自动填充功能维护这两个字段</p><ol><li><strong>添加fill属性</strong><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line"><span class="keyword">private</span> LocalDateTime createTime;</span><br><span class="line"></span><br><span class="line"><span class="meta">@TableField(fill = FieldFill.INSERT_UPDATE)</span></span><br><span class="line"><span class="keyword">private</span> LocalDateTime updateTime;</span><br></pre></td></tr></table></figure></li><li><strong>实现元对象处理器接口 -&gt; 创建handler包，创建MyMetaObjectHandler类 <span class='p red'>不要忘记添加 @Component 注解</span></strong><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.mybatisplus.handler;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyMetaObjectHandler</span> <span class="keyword">implements</span> <span class="title class_">MetaObjectHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insertFill</span><span class="params">(MetaObject metaObject)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;start insert fill ....&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.strictInsertFill(metaObject, <span class="string">&quot;createTime&quot;</span>, LocalDateTime.class, LocalDateTime.now());</span><br><span class="line">        <span class="built_in">this</span>.strictInsertFill(metaObject, <span class="string">&quot;updateTime&quot;</span>, LocalDateTime.class, LocalDateTime.now());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateFill</span><span class="params">(MetaObject metaObject)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;start update fill ....&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.strictUpdateFill(metaObject, <span class="string">&quot;updateTime&quot;</span>, LocalDateTime.class, LocalDateTime.now());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="TableLogic"><a href="#TableLogic" class="headerlink" title="@TableLogic"></a>@TableLogic</h3><p><strong>逻辑删除</strong></p><ul><li>物理删除：真实删除，将对应数据从数据库中删除，之后查询不到此条被删除的数据</li><li>逻辑删除：假删除，将对应数据中代表是否被删除字段的状态修改为“被删除状态”，之后在数据库中仍旧能看到此条数据记录<br>使用场景：可以进行数据恢复</li></ul><ol><li>数据库中创建逻辑删除状态列<br><img src="/img/article/20231006/3.png"></li><li>实体类中添加逻辑删除属性<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableLogic</span></span><br><span class="line"><span class="meta">@TableField(value = &quot;is_deleted&quot;)</span></span><br><span class="line"><span class="keyword">private</span> Integer deleted;</span><br></pre></td></tr></table></figure></li></ol><h3 id="分页插件和乐观锁插件"><a href="#分页插件和乐观锁插件" class="headerlink" title="分页插件和乐观锁插件"></a>分页插件和乐观锁插件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisPlusConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 实现分页配置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> MybatisPlusInterceptor <span class="title function_">mybatisPlusInterceptor</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">MybatisPlusInterceptor</span> <span class="variable">interceptor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MybatisPlusInterceptor</span>();</span><br><span class="line">        interceptor.addInnerInterceptor(<span class="keyword">new</span> <span class="title class_">OptimisticLockerInnerInterceptor</span>());   <span class="comment">//    注册乐观锁插件</span></span><br><span class="line">        interceptor.addInnerInterceptor(<span class="keyword">new</span> <span class="title class_">PaginationInnerInterceptor</span>());    <span class="comment">// 分页插件</span></span><br><span class="line">        <span class="keyword">return</span> interceptor;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> JAVA开发笔记 </tag>
            
            <tag> mybatis-plus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>@JsonSerialize使用方法</title>
      <link href="/posts/f0e131fd/"/>
      <url>/posts/f0e131fd/</url>
      
        <content type="html"><![CDATA[<p>举个🌰，比如一张表中的时间，数据库中存储的是yyy-mm-dd hh:mm:ss 这样的形式，而前段需要的是精确到秒的格式，那我们不可能直接把这种格式的数据直接返回给前端吧？！</p><p>除了使用自定义工具类，还有一种方法更直接，那就是使用@JsonSerialize（com.fasterxml.jackson.databind.annotation.JsonSerialize）注解。</p><p><strong>使用步骤：</strong></p><ol><li>在实体类中在要转换的字段上加上该注解，如下：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">/** 订单创建时间 */</span></span><br><span class="line"><span class="meta">@JsonSerialize(using = DateToLongSerializer.class)</span></span><br><span class="line"><span class="keyword">private</span> Date createTiem;</span><br></pre></td></tr></table></figure></li><li>并指定一个格式化的类。如下：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DateToLongSerializer</span> <span class="keyword">extends</span> <span class="title class_">JsonSerializer</span>&lt;Date&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Date date, JsonGenerator jsonGenerator, SerializerProvider serializerProvider)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        jsonGenerator.writeNumber(date.getTime() / <span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>数据库中的格式<br><img src="/img/article/20231006/1.png"></li><li>转换之后的格式<br><img src="/img/article/20231006/2.png"></li></ol>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> JAVA开发笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实用软件分享(网盘下载)</title>
      <link href="/posts/3b43e263/"/>
      <url>/posts/3b43e263/</url>
      
        <content type="html"><![CDATA[<div class="note blue anzhiyufont anzhiyu-icon-bullhorn simple"><p>分享日常中实用的工具软件 有需要的小伙伴快去<strong>软件获取</strong>中下载吧</p></div><h2 id="IDM"><a href="#IDM" class="headerlink" title="IDM"></a>IDM</h2><h3 id="软件介绍"><a href="#软件介绍" class="headerlink" title="软件介绍"></a>软件介绍</h3><ol><li><strong>IDM</strong> 是款多线程下载软件，即多个结点同时开始下载一个文件，速度成倍提升。下载神器，用过的都知道😁。因为官方总是检测盗版，所以这次分享的是官方版激活方式和特殊版本(无需激活)。首先说下官方版的，从<a href="https://www.internetdownloadmanager.com/download.html">IDM官网</a>下载软件，选择简体中文安装。<br><img src="/img/article/20230812/14.jpg"></li><li>安装完成以后不要急着打开IDM，我们先下载本站的激活工具(<a href="https://github.com/lstprjct/IDM-Activation-Script">开源地址</a>)，找到 <strong>“IAS_0.8.cmd”</strong> ，右键—&gt;&gt;以管理员身份运行。<br><img src="/img/article/20230812/9.jpg"></li><li>运行后，我们在这里选择 <strong>“1”</strong> 进行激活IDM。注意的是，这个脚本必须联网才能激活，否则会激活失败。<br><img src="/img/article/20230812/10.jpg"></li><li>在激活过程中会提示你输入用户名，这里的用户名随便输！另外在激活过程中会下载两个”temp”的图片，以确定IDM的安装位置。<br><img src="/img/article/20230812/11.jpg"></li><li>当出现 <strong>“IDM is successfully activated”</strong> 时，让你按任意键返回，即 <strong>“Press any key to return…”</strong> 时，即表示激活成功了！<br><img src="/img/article/20230812/12.jpg"></li><li>再回到软件，查看 <strong>【注册】</strong>，软件提示已授权并激活！<br><img src="/img/article/20230812/13.jpg"></li><li>在上面输入数字时，如果输入“2”时，软件的试用时间将会清零，能接着试用30天。<br>如果上述办法嫌麻烦的小伙伴可以直接下载本站的<strong>IDM特殊版</strong>，解压之后右键管理员身份运行 <strong>“绿化.bat”</strong> 即可。<br><img src="/img/article/20230812/15.jpg"><br><img src="/img/article/20230812/8.jpg"></li></ol><h4 id="软件获取"><a href="#软件获取" class="headerlink" title="软件获取"></a>软件获取</h4><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://fu99999.lanzoue.com/ilVZU18dte6h">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://assets.woozooo.com/assets/favicon.ico)">          <i class="anzhiyufont anzhiyu-icon-link" style="display: none"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">IDM激活工具</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://fu99999.lanzoue.com/i5eW618dte5g">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://assets.woozooo.com/assets/favicon.ico)">          <i class="anzhiyufont anzhiyu-icon-link" style="display: none"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">IDM特殊版</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><h2 id="百度云"><a href="#百度云" class="headerlink" title="百度云"></a>百度云</h2><h3 id="软件介绍-1"><a href="#软件介绍-1" class="headerlink" title="软件介绍"></a>软件介绍</h3><div class="note blue anzhiyufont anzhiyu-icon-bullhorn simple"><p><strong>最后测试时间2024-02-24之前加速工具均已失效。</strong></p></div><ol><li>需要给浏览器安装<strong>篡改猴 Beta</strong>版扩展程序</li><li>安装好扩展程序之后下载<strong>百度网盘批量下载</strong>脚本进行安装</li><li>下载安装<strong>Motrix</strong>工具</li><li>在网页上登录百度云盘(切换到旧版界面),点击下载即可<br><img src="/img/article/20230812/2024-02-24-01.jpg"><br><img src="/img/article/20230812/2024-02-24-02.jpg"></li></ol><h4 id="软件获取-1"><a href="#软件获取-1" class="headerlink" title="软件获取"></a>软件获取</h4><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://fu99999.lanzouw.com/iJDzr1pa9h5i">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://assets.woozooo.com/assets/favicon.ico)">          <i class="anzhiyufont anzhiyu-icon-link" style="display: none"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">篡改猴 Beta</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://greasyfork.org/zh-CN/scripts/472925">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://assets.woozooo.com/assets/favicon.ico)">          <i class="anzhiyufont anzhiyu-icon-link" style="display: none"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">百度网盘批量下载</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://fu99999.lanzouw.com/iG60m1pa9kub">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://assets.woozooo.com/assets/favicon.ico)">          <i class="anzhiyufont anzhiyu-icon-link" style="display: none"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">Motrix</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><!-- ~~**<span class='p red'>请注意以下方法可能已经失效</span>**~~ --><p><strong><span class='p red'>本文来自网络收集，如有侵权请联系删除。</span></strong></p>]]></content>
      
      
      <categories>
          
          <category> 生活日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> 日常分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络代理工具/节点</title>
      <link href="/posts/94722/"/>
      <url>/posts/94722/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请微信联系管理员获取." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="e5c33da59a4eeaf5f13c9c2ca32db879481625854a493c15a3d3bbb48ce2a93f"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-up">      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-up">您好, 这里需要密码, 请微信联系博主获取.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 生活日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 软件 </tag>
            
            <tag> vpn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实用软件分享(系统美化)</title>
      <link href="/posts/3044f11e/"/>
      <url>/posts/3044f11e/</url>
      
        <content type="html"><![CDATA[<div class="note blue anzhiyufont anzhiyu-icon-bullhorn simple"><p>分享日常中实用的工具软件 有需要的小伙伴快去<strong>软件获取</strong>中下载吧</p></div><h3 id="Windows禁止更新"><a href="#Windows禁止更新" class="headerlink" title="Windows禁止更新"></a>Windows禁止更新</h3><p>一键禁用烦人的 <strong>Windows</strong> 自动更新，安装以后，如果是英文，可以在 <strong>“Help”</strong> 里切换语言为简体中文。<br>操作很简单，想要禁止更新，直接点 <strong>阻止Windows Updates</strong> 即可。<br><img src="/img/article/20230812/28.jpg"><br><img src="/img/article/20230812/29.jpg"></p><h4 id="软件获取"><a href="#软件获取" class="headerlink" title="软件获取"></a>软件获取</h4><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://fu99999.lanzoue.com/i7a310zi74af">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://assets.woozooo.com/assets/favicon.ico)">          <i class="anzhiyufont anzhiyu-icon-link" style="display: none"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">Windows禁止更新</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><h3 id="自动关机小工具"><a href="#自动关机小工具" class="headerlink" title="自动关机小工具"></a>自动关机小工具</h3><p>好用的自动关机程序！比用命令 <strong>shutdown</strong> 实现的功能要全很多。<br><img src="/img/article/20230812/30.jpg"></p><h4 id="软件获取-1"><a href="#软件获取-1" class="headerlink" title="软件获取"></a>软件获取</h4><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://fu99999.lanzoue.com/iMRYE0zi74yj">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://assets.woozooo.com/assets/favicon.ico)">          <i class="anzhiyufont anzhiyu-icon-link" style="display: none"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">自动关机工具</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><h3 id="软媒桌面"><a href="#软媒桌面" class="headerlink" title="软媒桌面"></a>软媒桌面</h3><p>软媒桌面是由软媒开发的一款桌面软件，它主要功能可以帮助用户快速访问应用程序、网站等等，界面非常漂亮，也可以用于美化你的<strong>Windows</strong>，有点类似于<strong>dock</strong>条，相信有不少用户喜欢，这里分享的是软媒桌面独立绿色版<br><img src="/img/article/20230812/31.jpg"><br><img src="/img/article/20230812/32.jpg"></p><h4 id="软件获取-2"><a href="#软件获取-2" class="headerlink" title="软件获取"></a>软件获取</h4><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://fu99999.lanzoue.com/iQoHG0ylvwrg">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://assets.woozooo.com/assets/favicon.ico)">          <i class="anzhiyufont anzhiyu-icon-link" style="display: none"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">软媒桌面</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><p><strong><span class='p red'>本文来自网络收集，如有侵权请联系删除。</span></strong></p>]]></content>
      
      
      <categories>
          
          <category> 生活日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> 日常分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Office全版本激活教程</title>
      <link href="/posts/36436/"/>
      <url>/posts/36436/</url>
      
        <content type="html"><![CDATA[<h2 id="Office-LTSC-2024专业增强版-2024-07-11更新"><a href="#Office-LTSC-2024专业增强版-2024-07-11更新" class="headerlink" title="Office LTSC 2024专业增强版(2024.07.11更新)"></a>Office LTSC 2024专业增强版(2024.07.11更新)</h2><p><strong>解压安装包中的Office 2024 预览版，管理员运行YAOCTRI_Installer.cmd,输入1会自动安装。</strong><br><strong>完成后管理员运行MAS_AIO_CN.cmd按照提示激活即可。</strong></p><h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="/%E9%93%BE%E6%8E%A5:%20https:/pan.baidu.com/s/1UFiJK8N-aSG1ftzrKhMNKQ?pwd=q7rc">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://pan.baidu.com/m-static/base/static/images/favicon.ico)">          <i class="anzhiyufont anzhiyu-icon-link" style="display: none"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">Office LTSC 2024专业增强版</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><p><img src="/img/article/20231004/up240711_1.jpg"></p><h2 id="Office-Tool-Plus"><a href="#Office-Tool-Plus" class="headerlink" title="Office Tool Plus"></a>Office Tool Plus</h2><h3 id="软件介绍"><a href="#软件介绍" class="headerlink" title="软件介绍"></a>软件介绍</h3><p><strong>Office Tool Plus 这是一款支持在线安装并激活Office各个版本的软件，免安装，双击“exe”运行程序即可打开软件。下载地址在文章末尾。</strong> </p><h3 id="激活教程"><a href="#激活教程" class="headerlink" title="激活教程"></a>激活教程</h3><ol><li><strong>进入软件后,点击左侧的“部署”按钮，按照图片步骤选择自己要安装的软件和版本下一步即可。</strong><br><img src="/img/article/20231004/1.jpg"><br><img src="/img/article/20231004/2.jpg"></li><li><strong>返回到顶部点击右上角的“开始部署”按钮即可开始安装。</strong><br><img src="/img/article/20231004/3.jpg"><br><strong>一般来说在安装完Office就会自动激活，无需我们在手动激活，打开Office就可以直接使用。</strong><br><img src="/img/article/20231004/4.jpg"><br><img src="/img/article/20231004/5.jpg"><br><strong>但如果你发现安装完成后并没有激活Office,我们可以用HEU_KMS_Activator全能激活神器再次手动激活，其实Office Tool Plus工具中也有手动激活的办法，但是需要自己配KMS服务操作繁琐，而且不能百分之百激活成功，这里就不做过多演示了。</strong></li></ol><h2 id="HEU-KMS-Activator"><a href="#HEU-KMS-Activator" class="headerlink" title="HEU_KMS_Activator"></a>HEU_KMS_Activator</h2><h3 id="软件介绍-1"><a href="#软件介绍-1" class="headerlink" title="软件介绍"></a>软件介绍</h3><p><strong>下载完成后打开软件，在智能激活中选择想要激活的软件即可完成激活，适用所有Windows, Office版本，无需联网即可一键激活，支持UEFI的KMS激活工具。</strong><br><img src="/img/article/20231004/6.jpg"></p><h2 id="软件下载地址"><a href="#软件下载地址" class="headerlink" title="软件下载地址"></a>软件下载地址</h2><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://pan.baidu.com/s/13sXDu5Zanj2Zy3-DGdHGCg?pwd=6p9q">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://pan.baidu.com/m-static/base/static/images/favicon.ico)">          <i class="anzhiyufont anzhiyu-icon-link" style="display: none"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">Office Tool Plus</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://pan.baidu.com/s/1QO4zgXIGmzoc2Bi43VOpEA?pwd=15rp">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://pan.baidu.com/m-static/base/static/images/favicon.ico)">          <i class="anzhiyufont anzhiyu-icon-link" style="display: none"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">HEU_KMS_Activator</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><p><strong><span class='p red'>本文来自网络收集，如有侵权请联系删除。有条件的小伙伴建议使用正版更好。</span></strong></p>]]></content>
      
      
      <categories>
          
          <category> 生活日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实用软件分享(常用软件,浏览器插件等)</title>
      <link href="/posts/9fc978a2/"/>
      <url>/posts/9fc978a2/</url>
      
        <content type="html"><![CDATA[<div class="note blue anzhiyufont anzhiyu-icon-bullhorn simple"><p>分享日常中实用的工具软件 有需要的小伙伴快去<strong>软件获取</strong>中下载吧(倒序更新内容)</p></div><h3 id="C-Cleaner"><a href="#C-Cleaner" class="headerlink" title="C.Cleaner"></a>C.Cleaner</h3><p>C盘清理的工具，绿色版已经激活，功能包括“清理”、“清册表”、“工具”和“选项”这几大功能。<br><img src="/img/article/20230812/up24_0708_03.jpg"></p><h4 id="软件获取"><a href="#软件获取" class="headerlink" title="软件获取"></a>软件获取</h4><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://fu99999.lanzouw.com/issFx25u8zhi">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://assets.woozooo.com/assets/favicon.ico)">          <i class="anzhiyufont anzhiyu-icon-link" style="display: none"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">CCleaner-Pro</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><h3 id="文件解锁"><a href="#文件解锁" class="headerlink" title="文件解锁"></a>文件解锁</h3><p>从火绒中单独提取的文件解锁和文件解除占用的功能，独立工具不占用内存。<br><img src="/img/article/20230812/up24_0708_02.jpg"></p><h4 id="软件获取-1"><a href="#软件获取-1" class="headerlink" title="软件获取"></a>软件获取</h4><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://fu99999.lanzouw.com/iksqV25u6lvg">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://assets.woozooo.com/assets/favicon.ico)">          <i class="anzhiyufont anzhiyu-icon-link" style="display: none"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">FileShred</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><h3 id="坤Tools"><a href="#坤Tools" class="headerlink" title="坤Tools"></a>坤Tools</h3><p>小黑子软件😅功能还是很强大的，无任何广告功能都是免费的。<br><img src="/img/article/20230812/up24_0708_01.jpg"></p><h4 id="软件获取-2"><a href="#软件获取-2" class="headerlink" title="软件获取"></a>软件获取</h4><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://fu99999.lanzouw.com/isNqt23zencf">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://assets.woozooo.com/assets/favicon.ico)">          <i class="anzhiyufont anzhiyu-icon-link" style="display: none"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">DocumentTools</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><h3 id="VeryCapture"><a href="#VeryCapture" class="headerlink" title="VeryCapture"></a>VeryCapture</h3><p>VeryCapture是一款多功能的屏幕抓取工具，界面干净绿色无广告，该工具的性能大致分为两种类型，分别是图像抓取以及视频录制。<br><img src="/img/article/2023_12/1215/01.jpg"></p><h4 id="软件获取-3"><a href="#软件获取-3" class="headerlink" title="软件获取"></a>软件获取</h4><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://fu99999.lanzouu.com/iARmy1i0v8hg">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://assets.woozooo.com/assets/favicon.ico)">          <i class="anzhiyufont anzhiyu-icon-link" style="display: none"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">VeryCapture</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><h3 id="酷我音乐会员版"><a href="#酷我音乐会员版" class="headerlink" title="酷我音乐会员版"></a>酷我音乐会员版</h3><p>开袋即食，解压直接使用即可，会员歌曲全部解锁可下载高音质歌曲。<br><img src="/img/article/20230812/2.jpg"></p><h4 id="软件获取-4"><a href="#软件获取-4" class="headerlink" title="软件获取"></a>软件获取</h4><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://fu99999.lanzoue.com/iAMNn1830j5c">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://assets.woozooo.com/assets/favicon.ico)">          <i class="anzhiyufont anzhiyu-icon-link" style="display: none"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">酷我音乐会员版</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><h3 id="迅雷X-10-1"><a href="#迅雷X-10-1" class="headerlink" title="迅雷X_10.1"></a>迅雷X_10.1</h3><p>软件去掉了很多不必要的功能，界面只剩下下载的功能，且登录以后软件即是V1P10了。<br><img src="/img/article/20230812/3.jpg"><br><img src="/img/article/20230812/4.jpg"></p><h4 id="软件获取-5"><a href="#软件获取-5" class="headerlink" title="软件获取"></a>软件获取</h4><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://fu99999.lanzoue.com/iom9d0ylw0oh">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://assets.woozooo.com/assets/favicon.ico)">          <i class="anzhiyufont anzhiyu-icon-link" style="display: none"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">迅雷X_10.1</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><h3 id="短视频-在线解析去水印接口平台"><a href="#短视频-在线解析去水印接口平台" class="headerlink" title="短视频 - 在线解析去水印接口平台"></a>短视频 - 在线解析去水印接口平台</h3><p><img src="/img/article/20230812/5.jpg"></p><h4 id="软件获取-6"><a href="#软件获取-6" class="headerlink" title="软件获取"></a>软件获取</h4><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://api.spapi.cn/dsp.html">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="">          <i class="anzhiyufont anzhiyu-icon-link" style=""></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">短视频-解析去水印平台</div>            <div class="tag-link-sitename">接口地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><h3 id="Adobe-CC-全家桶"><a href="#Adobe-CC-全家桶" class="headerlink" title="Adobe CC 全家桶"></a>Adobe CC 全家桶</h3><p><strong>Adobe CC 全家桶</strong>，都是破解版，安装后可直接使用，UI设计、后期剪辑的福音！<br><img src="/img/article/20230812/7.jpg"></p><h4 id="软件获取-7"><a href="#软件获取-7" class="headerlink" title="软件获取"></a>软件获取</h4><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.superso.top/Adobe/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="">          <i class="anzhiyufont anzhiyu-icon-link" style=""></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">Adobe CC</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><h3 id="油猴"><a href="#油猴" class="headerlink" title="油猴"></a>油猴</h3><p>油猴浏览器扩展程序是最流行的浏览器扩展之一, 它可以用户自定义并增强你最喜爱的网页的功能。用户脚本是小型 JavaScript 程序，可用于向网页添加新功能或修改现有功能。使用油猴，可以轻松在任何网站上创建、管理和运行这些用户脚本。<a href="https://www.tampermonkey.net/"><strong>官网地址</strong></a> 总被墙，可以直接在本站下载。下载之后直接解压到文件夹，在浏览器中添加扩展程序选择解压的文件夹即可。<br><img src="/img/article/20230812/22.jpg"><br><img src="/img/article/20230812/23.jpg"></p><h4 id="软件获取-8"><a href="#软件获取-8" class="headerlink" title="软件获取"></a>软件获取</h4><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://fu99999.lanzoue.com/iiWjr0ylxwwd">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://assets.woozooo.com/assets/favicon.ico)">          <i class="anzhiyufont anzhiyu-icon-link" style="display: none"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">油猴</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><h3 id="搜索重定向浏览器插件"><a href="#搜索重定向浏览器插件" class="headerlink" title="搜索重定向浏览器插件"></a>搜索重定向浏览器插件</h3><p>可以去掉百度、搜狗、谷歌搜索结果的重定向，回归为网站的原始网址。可以过滤推广告等功能，再安装好油猴之后进入网站添加插件完成。<br><img src="/img/article/20230812/27.jpg"></p><h4 id="软件获取-9"><a href="#软件获取-9" class="headerlink" title="软件获取"></a>软件获取</h4><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://greasyfork.org/zh-CN/scripts/14178">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="">          <i class="anzhiyufont anzhiyu-icon-link" style=""></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">搜索重定向</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><p><strong><span class='p red'>本文来自网络收集，如有侵权请联系删除。</span></strong></p>]]></content>
      
      
      <categories>
          
          <category> 生活日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> 日常分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Navicat15破解教程</title>
      <link href="/posts/75884ae0/"/>
      <url>/posts/75884ae0/</url>
      
        <content type="html"><![CDATA[<h2 id="软件介绍"><a href="#软件介绍" class="headerlink" title="软件介绍"></a>软件介绍</h2><p>Navicat premium 是一款数据库管理工具，是一个可多连接数据库管理工具，它可以同时连线到 MySQL、SQL Server等数据库，让管理不同类型的数据库更加的方便。下载地址在文章末尾。</p><h2 id="破解教程"><a href="#破解教程" class="headerlink" title="破解教程"></a>破解教程</h2><div class="note red anzhiyufont anzhiyu-icon-bullhorn modern"><p>安装之前一定要关闭防火墙,和各种杀毒软件！！！</p></div><ol><li>下载好后首先安装 Navicat Premium 15，此工具安装比较简单，一直下一步安装即可。<br><img src="/img/article/20230811/14.jpg"></li><li>开始激活 <strong>(<span class='p red'>激活时必须断网</span>)</strong> 使用注册机 <strong>(<span class='p red'>确保已经关闭所有杀毒软件</span>)</strong> ，再打开注册机，否则会一直报错的<br><img src="/img/article/20230811/15.jpg"></li><li>在激活工具的第一个选项(1.Patch)里选择Backup，Host，Navicat 是那个版本就选那个版本，这里就选择Navicat V 15 就好了，然后点击，Patch按钮，选择Navicat的安装位置中的navicat.exe文件<br>如图：<br><img src="/img/article/20230811/3.jpg"><br>出现以下提示说明Patch成功了。</li><li><img src="/img/article/20230811/4.jpg"><br>License. Product and Language<br>License里选中Enterprise、在Produce里选择Premium、在Languages里选择Simplified Chinese(简体中文)<br><img src="/img/article/20230811/5.jpg">  </li><li><span class='p red'>Resale License</span>选择Site License<br><img src="/img/article/20230811/6.jpg"><br>Keygen &#x2F; Offline Activation<br>点击Generate按钮就会生成一个许可证秘钥，将许可证秘钥复制后就打开Navicat Premium 15<br><img src="/img/article/20230811/7.jpg"></li><li>打开Navicat Premium 15，点击注册<br><img src="/img/article/20230811/8.jpg"><br>粘贴秘钥，然后点击激活按钮<br><img src="/img/article/20230811/9.jpg"><br>在弹出的界面选择手动激活<br><img src="/img/article/20230811/10.jpg"></li><li>将请求码粘贴到注册机Request Code框中（完整过程看图）<br><img src="/img/article/20230811/11.jpg"><br><img src="/img/article/20230811/12.jpg"><br><img src="/img/article/20230811/13.jpg"><br>点击激活页面的激活弹出（说明激活成功）</li></ol><h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://fu99999.lanzoue.com/iywYR0xvg36f">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://cdnjson.com/images/2023/09/11/Navicat.webp)">          <i class="anzhiyufont anzhiyu-icon-link" style="display: none"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">Navicat15安装包</div>            <div class="tag-link-sitename">蓝奏云</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://fu99999.lanzoue.com/iOOgL0xvg3ih">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://cdnjson.com/images/2023/09/11/NavicatKey.png)">          <i class="anzhiyufont anzhiyu-icon-link" style="display: none"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">Navicat15破解工具</div>            <div class="tag-link-sitename">蓝奏云</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> 教程 </tag>
            
            <tag> 开发工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Postman汉化教程</title>
      <link href="/posts/8042f148/"/>
      <url>/posts/8042f148/</url>
      
        <content type="html"><![CDATA[<h2 id="软件介绍"><a href="#软件介绍" class="headerlink" title="软件介绍"></a>软件介绍</h2><p>Postman是一款不错的接口测试工具，它转换用于调试网页和API，Postman是开发人员必备的工具之一，所以很多用户都会用到，Postman官方版本默认为英文，所以需要使用Postman中文版的话需要额外的下载Postman汉化包，需要版本对上才可以哦，有需要的朋友可以下载安装。<br><img src="/img/article/20230811/1.jpg"></p><h2 id="汉化教程"><a href="#汉化教程" class="headerlink" title="汉化教程"></a>汉化教程</h2><div class="note blue anzhiyufont anzhiyu-icon-bullhorn simple"><p>软件的默认安装地址C:\Users\admin\AppData\Local\Postman</p></div><ol><li><p>下载<mark class="hl-label green">postman(v9.12.0绿色版)</mark> ，下载完成后点.exe文件直接打开。 <a href="https://pan.baidu.com/s/1QI3tVlHR96CGVVmeKITvEQ?pwd=fhww">下载软件</a></p></li><li><p>下载本站的app.zip汉化包，将”app.zip”压缩包复制到postman安装目录下面的<mark class="hl-label green">resources</mark> 文件夹中解压出来，会出现一个app文件夹，关闭软件在打开即可。 <a href="https://pan.baidu.com/s/1c6CFPi40rwwD1PxDH_UywA?pwd=i8nb">下载软件</a></p></li></ol><p><img src="/img/article/20230811/2.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> 教程 </tag>
            
            <tag> 开发工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>魔兽落幕,青春散场</title>
      <link href="/posts/ac701fa2/"/>
      <url>/posts/ac701fa2/</url>
      
        <content type="html"><![CDATA[<h2 id="魔兽落幕-青春散场"><a href="#魔兽落幕-青春散场" class="headerlink" title="魔兽落幕,青春散场"></a>魔兽落幕,青春散场</h2><p><strong>结束的,是一款游戏,再见的,是一个青春,怀念的,是那段无忧无虑的日子。</strong></p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://v.douyin.com/kcwe6jR/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="">          <i class="anzhiyufont anzhiyu-icon-link" style=""></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">魔兽落幕 青春散场</div>            <div class="tag-link-sitename">致青春2007-2023</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><!-- <iframe class="bilibili" src="//player.bilibili.com/player.html?aid=14875394&cid=24237231&page=1&high_quality=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe> --><h2 id="告别太过伤感-我选择华丽退场"><a href="#告别太过伤感-我选择华丽退场" class="headerlink" title="告别太过伤感,我选择华丽退场"></a>告别太过伤感,我选择华丽退场</h2><p><strong>人生总有遗憾,这次怀旧服到最后一天还是没刷出ZG虎</strong><br><strong>看来和祖格虎无缘,当年正式服就没有 哈哈😄</strong><br><strong>成就点在最后一天超过7000 也算圆满了</strong><br><img src="/img/article/20230810/7.jpg"><br><img src="/img/article/20230810/8.jpg"><br><strong>最后祝愿艾泽拉斯的勇士们,兔年大吉,我们有缘再见 ღ( ´･ᴗ･&#96; )</strong><br><img src="/img/article/20230810/9.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 魔兽世界 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 魔兽 </tag>
            
            <tag> 游戏杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WLK常用WA整合</title>
      <link href="/posts/688b9307/"/>
      <url>/posts/688b9307/</url>
      
        <content type="html"><![CDATA[<h2 id="邮箱一键分类收件"><a href="#邮箱一键分类收件" class="headerlink" title="邮箱一键分类收件"></a>邮箱一键分类收件</h2><details class="folding-tag" cyan open><summary> 邮箱一键分类收件WA </summary>              <div class='content'>              <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!WA:2!9Uz7ZTrXDC8K6KgIakjbi0c9bvrBQfyllD650jTrYrXrf7yxjfCsDDLoPBL1HpDN6DNSJbChhNGtm5bN6gGHeGecqlHbmjggipW00j)fStM(Q(ModnNK9l6Wm8paD37ojRtpEx9G1KiF3E7(D)T)2p7E)UDpT(9UTSBJABuN4P45YlYqZc47)aX6n8(dDxY8Iz447pNinhRWL2E6GItKdKuKBKrya85fa7biKkdXOGjcMuK1bpfinzEgXebzjZc4lCQzxE(fCezCAkXmTngCdjfamGuIWnfblJd43ntYXizYdeUzYLo9SlD6pozXlE7Ix8tskD9Jw4vF9Kl9oVK07E8Kln9SfV2TUZYVZflo7vw(9waDP7GYCHR(POVLMD67S8RFSL)OZv4nplUqsl8MYs8shT4NEPKlF8)8YZFnOP7GkQ0F5iiDKERtc3CBWhOT0Wna3iCtylNazkqtQgmbCZjqxgzVWhu1urjTr5SaFc4dDt4wGBfUn4ddFe4Jc3o8XGFF4pa(4Av0zLk6Ssf38Muf1zJLcxpOYRrrxvQORATrusB2y2O7kv0TgB8(vf1TXSrpvQONATruspOXSrVvQOxn24dPkQxJzJ(QurF1AJOK2QUTru(Kf1pwNsI6FfB8Hvf1V(TXi4rs2LTGPvhbzxJvMuEWdkTh1qMPSUoKTZs66yfd9XkPRdDyP5EAkAHCmKtedCyX4P54ZskgpxCr6SG4utGg7tNkUygEGqgogQj4NO)0PfaI7B3z)VBEQ1TUVZIKSPqZQmahnRyYUdT)yHIKZCJvu5S1NBlPYliYLfNJdKJIueebmgGvKipptoRzefZjSZU6IDesBo86ZwkUSDXdiPSLltUFTin1UC6YUhVe2DZtMsEYmpreej5fnfKMLwChZtXfxr(ejv(7HFQ(7SZHgYSPbdin30ln1r3PjYmzE(DV)Ec0H5HgmWWd1diBqoUrlo3Lqt5S8uxSWfFVcZEsPzoLzh2CoChMBPjr4ZUBcV(CBAc2jE(jspHQ2sxDUIN5kfo2Csh72dJRQ7DR3P4LoYWMrxq6nUQ0f(7ktw2LYKLsh)MfpZvLENRU8f)KcZD2LNz(2lCZZU0X)G(qTSSK5cGMPwSWuV5sF(hBvhgLtN(D4IWVttJtZsXLMCeWUhNCeoB0CDy2r3m0Pg1CFKP45m3U8jKjzaQjeofhlQgkxfQfRR)inzmUo950vxeMmfyGWkUZV6loVPY5KB8CakAsBPjr1zwzJAC6rP7AqoEgQ4CPJpijFkEY0IXrL)j7JKMP1LfLZ49aedZMK7WHfbz1xjIrokWGfbxjOmhMnnN(kWaiopkxEwQYzFeAXm5tkNlKAza4Y3zE6of4YZNc0vsgUKDXqpgORWSIa(0KO0IMHKhqDW(6TlzPEgAXUruTijROGnM8KMgE4o70KjY88KXbSJzlvEEE0GLyOH4H3J5Dz2(kxklhlyIDzgvX9HpQDRMm1zNMLoXhu4mZEVBCsPzpDXZFmLzmmrN2C5YjICvbrZPygzWSMmJ(uZL25(OPaibR)fJcehGeBvTZsZy1ea5qQJ(enwFIMPpHo13zJ13zZ03Po13vJ13vZ03Lo13DJ13DZ03To13tJ13tZ03Jo13BJ13BZ03Ro13xJ13xZ03No13FJ13FZ03Vo13H9MmaZEthHzVEvbEWn6UdslC(7DJzV31)Okdmw6JVrXx6VT0B)(My4srYyghrW(rHY3lTGiAsJxqUASOC7hlDygP0qogwjrLBgPMiHAIkXXRMOt1evIQxnrxLsuogF1eDRMyLr8REjpLYFfX)REjVLkvfpnG6L8vYEKF2a1e9xkr5NuOuZXEjvKFWblMMu2Hv4K3wAUxT4fUU0npNIRcnNOINBLjshPI72G8wPZZkhQr7IYt6Q0hH0QUQuyQBv4vUQCwuD9CIOVXtuJtRCzRPZQYIGQhn9u4pVGfPxzguzS0rP(Tj10XvvEqnBPR9wsZFk1(Zj10HwvMv7ENut)RsEk1jx6Gj10DxTHP05pPMEFL8u4ZoXst9AQ2MmoGSnvIysnirT5Vsgr6SNatktQbvQUTldoLYJV63KviOj1GqvNhfGAsTeLsMuXQokDWKYxBYQ6fr9GL6mhsHEgUu)LsMeYNmwdYNAxvjIz5JCAPZmZYtVqXfUMkWwfKT)8yATuOsOZW8RG6CkOGVnJceeCyuwC0XkfGIRCJcnNLOAyfO8ur4aL(uoMkL4lKLZA5CayeavMBnfvXmnhVJ68VmKcQJ0kz77dfilGhhiw1vIQDwQi1yILBQYbYvU5giwSaDVV(qpIs049f4GXJeQ7qHF2qv26R1ArMMSm7PcldxRk2uhRuhwRRiiZuT411kBUNbxsmyOCu0YusfXO2UI6w)Lnu6gEbCyHV7XkE2zU31N6E38cfN9gfw4LlpfMYSsTWGXKs3zaONIyxLnwm3it9OyL1A37QeO3qv1aFUAUld)Pr1VLcV87w8ClAXSkeSs6F0Fv61FFlnuu8Tu1LX5D1yCLNvt2h1Evoj1z6kB8vDj8eF17sQZjAD1328VkABkp)8)Fo4MzDvuJT24uVzR8FFAhnnVAEcrDoMU0NKOh1Eud3sRx6vNw1NBQExWuLjG7avA2OGm06IYXtJIy0YlMkDApEsH(Ei0a(Lp3csNyg0G8cN7ZU3T(SHFr(DA2InBQdqTzZIzPpFXI3AouCsslCQV6losfGv5N4TDF(D73Qg7GhiMNNvXwkhGQ0jUG0TUP6dDw7tCUlZDJ8KIG9YJcoTDlbZlkYXIIGdfKBhRegmpyeu4xDy2YbcpajlGrjBXazZXGklY8Q7JKgL(5bT71U5oiiAqoWRav7vgA8qR8y2CSPPhzilYlLMLHhUokyRukOwrPdRF9iVazOwx)XI1FF9gAVXS0r1Tnnx0EhDs4QrTQu805qI1pR8Y2G8vLdpvaWKELUk8z2A4Ygu1v12ABGgvgwC7nva5hqXQMhcQuoWlEPLHXSAAsCadTEnhKrPAxmb9HoLeZaWdrlHhcdape1fEi0f8q0k4PCRRg8Prw9364dXQfFiAf(qOl8HOP4JtJHpegaFC2s8XPbWhN1fFCQl8XPoXhcDHpoxtWhNRw8XzRWhN6cFC2u8XLXWhNgaFC1s8XLbWhx1fFCPl8XLoXhN6cFCTMGpUwT4JRwHpU0f(4QP4JBJHpUma(4UL4JBdGpURl(4wx4JBDIpU0f(4EnbFCVAXh3TcFCRl8XDtXhpgdFCBa8XtlXhpgaF8ux8XJUWhp6eFCRl8XZAc(4z1IpEAf(4rx4JNMIpEng(4Xa4J3wIpEna(4TU4JxDHpE1j(4rx4J31e8X7QfF82k8XRUWhVnfF8zm8XRbWhFTeF8za8XxDXhF6cF8Pt8XRUWhFRj4JVvl(4Rv4JpDHp(Ak(43y4JpdGp(Bj(43a4J)6Ip(1f(4xN4JpDHp(xtWh)Rw8XFRWh)6cF83u8XHDJXp(nYQgAV1lBODJSUH2R)chAxFRCODDcr(1feP24(wF1dTVQx(q7TC9dTRVfq0EZjjhgCjeTBeushRaTHwc6gSg06CrODO3fs0U(yP1OvIE1Vu0TETO15Irx5QrNmnnlTqgttlYtpYiaEHRVXVZo4vpPaCdbZZsl(L5faXjzgNCcbr(8GeFPq(KYVMRrZNon9HxmE3bIglE0ybIeBrLxu14zq1qe8BklfC3xUBowkA5xW1i43bFbttlKdWWeMsWuzPgGhGKks0bc1BVkPiKBR9fiCVXdV)G9FW4hyG9eiwiyVjXVqUa(iPWBIgC3tJnnSnMOunJ9vO6KcKezC4Eg(9fQ3b27b6D(8SQTlt7a(mZaha(BHBa2dCWCBlyGEuRG47juVbouO9a)9WDd)DO)3ZHx)JuMfKTlRL2PkLtL3VWAfqEZnbJXcuYq4yH6l(ahi6(SyvE3sBac9NQzBV0(I3uFOP(IzvZldrd2vnnasTVpMvVHD4)kpdKj4WW)aSx4HGXv8M4dv8MB5aHJhksK(JeVVqrJgONqL9L4I0tU)Lw3zhK8J4a)frzh7k(1QLszRMXzwExAvElLU0CsF(IfU1B)FMAAlABD6OLPZTv8R(IZxNAZA1ofmtfVk8ArzkU7E7pQwSsSby1kT(kkOfZABzAMcqBJR(VVlkCezwU8yXR4fRTtTVZTv)2POwIFv9ahdTTSfEJpSWh(2OeKM7vTyZgYa6gnjU89muQdRwRD7ZrU16V9XAoVfDZR0)0eS9odGh2IaT(3FOdvfXELwpbqLLU5dXRt)ZQDmEna4Iu0cpNSnpgGGKDICBLu(4ykZ)1hhf4dxxUNOU)8guoa(BZTJg)RFGbmczQjINMHJJpZ847zP87Mq5(TbPacPYT1LFT3VWRnxC0)x(vUn(NrqW0CO8S0rEzP39kxgnVFe5Tlw4X3oCd3fDAsYuJocpEd5dYWrsT3GcOqo2EKS5zePnfeDhJuBhoUPiPyifeWhLe5Uqoc8HtJvghHYp5UcziP4g)Gk)6oAJ)WL(zEKM9T(3FZ38n52IYVZd5WKK)6YY(yLdv2aBSRnOiQvppj(hRaUJ3dCp7fDZqw0iK7aifarfr9bJiMzt3Lc1VGZH89D4faO7htjmnopyzGhnywsAwuzHhfESnbFj4mWJJomC1P8LK5r38cPuQbX)W0cgaDAUNSX9a54bPOfq1BBxgDBtaLCPo2dO28pKsR(hUUiP4y44)nTH(W)CO7psNEIG4WHUSixQXqMlsG7BS)HfAQC)iL3gVAh8A(zDyJGipn1I8E(DEC4XzQEs9mlMg7VqEbsrY2(6kCP4g9Ird1BOUJT3ib6l00JZXtnipzUPhu9GKkrSCITd)XBe(lUFOLeqppk8hMa25dbDLaAFRW2taTLa(0jG)0nb9Ma(tsaVVeqhjGFV2G(Fm4pBZWFEcOZhg(up4Iv4FUtL2Coln2ZLLJkoYSbjwuXx1TShA9RF9TD5uLJtX0I0SkfdDMPVMg)lCGLK5zvCzJUnHiUSHClBBS)5b)F</span><br></pre></td></tr></table></figure>              </div>            </details><h2 id=""><a href="#" class="headerlink" title=""></a><span class='p green'>效果图:</span></h2><p><img src="/img/article/20230810/5.jpg"></p><h2 id="占卜队友物品的掉落几率-仅供娱乐"><a href="#占卜队友物品的掉落几率-仅供娱乐" class="headerlink" title="占卜队友物品的掉落几率,仅供娱乐"></a>占卜队友物品的掉落几率,仅供娱乐</h2><ul><li>使用方法: 在团队或小队中输入: #占卜 &lt;物品链接&gt;   例如:#占卜 乌鸦之神的缰绳<details class="folding-tag" cyan open><summary> 占卜队友物品的掉落几率WA </summary>              <div class='content'>              <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!WA:2!nNX7ZnXX1WWhsRsN2ath6Kj9d3igt0flllBatHwOJLTbCIbCLf5hntgXjDRSUI0Dk7DhyLmjJT5N2GXeyahWEcGkqcnbCIGMeSX4zYFbAy60p1pLX3jPpLzYFb9T7Es6o9dJDs70EJ9PDF77x7BFV9929wZUxFY1lUEXtZJv01sijJWh4GH6R393tKJkmOsVDFHoJ3r3df7vFT3bp0bIftfPTgCAwJ1MvqoACfC)ksYAr6QN9hQNGP4eLutLqiDi0qAHJPGtkOfovynPKiRERj1ZhvxvtjjbJdMsuqdfeDeKSw764ePEX4AAPu3rRTsKUpjLwll(w3kwiQMKISAhbv1eWAUcijlPTPimUn0p)FftxMIaNGowims(i(IkKiQhzHKiVCsAOK9jjFyExCWtlTyE7rZFUtv4E3i)9MYyYrnV0x89p6Q5p3DmU3xTNd2B3F)JoRXdFG5mN2CQBbTZp2DmU4i5FqgJhDjkdOVsOacGYzQcXecswKBNCQAyj5b9ftsw0tjr7LZnPPB(QiU3URqGQEeB4xIFnZ1U9oDWxToiiREuegyJFBaJlOg)vrPbOTV9keat9V5e5p)jzs2g6rtGeW9wsFC7MoeSMXjbDBZBjnmbs2dJwEorfks24rCbCTtME7g0E4p(6GDG0AOkueb65HaUcQLB0slgZoV5yp248N28(xcwWmU7uLhukgNNYSBxCBzBGjrSIa4(dCB93XZXPfhjxMgYJZjT9E(8rjVm2GP3Povcq5Lqnfz9Krqyp2yJTvklRFHZ91gtEzWTYCMRzZ6NurwloWes8Gh3n50lruiDLHeDmuCfDS3KsY6uZ4EqA7bC3dbHBESJ1G6seVYdcbmeVBAmbFT(eKXSrfJOL1tGW4vKFabX)V1lGnrjVxUvDNI24MFIXjVciDZzNOrkqhBPgfy7T9Jtbk9BjVi6gxSnXCvHd2m4u7TTvk6cvlCBTgGmJC5DqyoIVm3M9dVAFlWRo8d75qCbl33jfL97PICZDWZ1Q1GoXZQXlxEJPM5STje9fgPPJL5aVC)(Alwtn5MFhSSgEye3uB(9Z7IylC5Q2T7tHvIelHEunDbYaEi95)VyShvwWGESzZOwkEUMyTB3)kzUb)h3xsHHOkCRT5hwMOSgA6LZVp)TXZt8lCZ9bW)qJgYcj5YSOzBSy7B3325TmB1A1WcsIaQh2JdtfcwtTnvjiaZ03RSFP78x6efUXznN665ZmHBVvGBoZyMhBCaEXRChhWN)gfwyHcdFwJfUGD4fhoJXP(kJZEzJZpMD4gJpT5zxi)zg18XZ4KppW8lEq(7Sy(RDFh4FIpNW8f)O8FYioGF7rnp(Iln)Tmgzr7WxAUZym8egJFnJjg3o8chBMLE4zw6BMW8U32b(FZCln3ClTWmgFMd(dC28JMfg1CKp1bFo91kSWTng)(fVHd5wC6p18()1LM7dnpUd(K)ZEy(zVN5yxeMDoGpwM8N5lbvk)ip2c(7)7)FEcfI)qW93Dvo)0niSTxrZuUrIg8OjejbY3GinzpeAbp6M5ARMGdYqVLfVFB2OSG9liQeMvO3HIafvjPg31OW2ydoicR(l3e2Q5)mGw6uOCRlld1WKErGAZ00vlbkUKikiPCuXCp332vCbnU9HuvfgefqhsogHu6kc)DWgO0As7hJIjnuWb6VN(6l36gADBPu4Jh6WE5sQoOxowfMHB8FQWKaHjzxDeJzC6BAE57wmZhwCKl6YrcrzzuIkyczvOIJBNq24U2BNHcVVb2t4(7myO30nhKwUrdgUVE6S7Ec62z(gl2tYSZybl)scvu9LtWo7T7gjgYypvPqzq9sIzmX1nMyMstrp2RzMyxDVrgcU5RoLP9uYtEzJtnx(PVN51pfRk9QlVaCpb9UkOqYVkPljzcbbwDHjGtqcBc1IDWrkQuuKnKLguUC93vPJfwCAJtClYbnE0KokvGOf7IdkjPMccC0bMLNB(Ix5MgJnr(hnSJHSMnkrR6mhu)s3B0nVZQDz2cNfkqrLWHM52MxIHXjnmRGtJLfF4BSkx50nonw2R2SWS31yYB5yi7fzYKRTslFALyAPvvxLzfXUkQ3S6c6OU9CURxTBLIEQbyPdhacI(t1L2vVAmRx)QmEPaDwJEUk(gyY3VJt8YAfualPL2ckejNG1CFsY26fc2V0RRQ1)b0JqhG1rti6H7srx264U98o6sP6tjQfdGZ0RJlHkkrI(XsrblTdEc5uOhosoMsdNgyQ6UYmdvMU1mjDYAYIzjc4(GDYjlLGV(RNmLqtXrEYKT2KyRnLMRP9UJM23oAAa316Uux)NkAgXlARmrAndjrhl9ORxy2h4UUov1s)wQHEJjZwy2PwP0V5AOpF2hxySzxP03ED0FOMRHxP03wn0BEL7vC4RwF6TJ2m)T8x7wUFQHp1DDOgadaKrs)BL93deC7Tusl(No2TqF4yjOYp)fn)4z4yWwvSHrV5uFvXPEWoyf3Z86w9mHL8ZIjvI9x1S5lN34JpJn2qc9PN(OLYGkVHWQL5fV6JnM72wmhBfS2qMuNDWloYegN7KgtNP4hDTwn(IjHFAqSBQesQA789E)6fr2RAVYbHt94Pbr)LZeTZ28Uf)1lfK9WBYLQq2rXZlroj1l5ZNe)YW3spAsYQiSMhQE6TUmHVHmOEU8ncUvuizoVhSIEQv0KELpNtjG1s)tEsBJl)NzwV8sJwK)lvpzTI2mPox)sToGW557holUJAcRQcgDmMEgdLinadYjHs3pvBD1O1kUnsNFnAfRUaTcryQNZBlNYS3s6TR(gZFAr4LOJUvHveoralt8nTI0k2a73KKTQ6ymX5TosVyhUw4ixmYlZ1M)v(mhCETlYDTZYRtlRZBLfZLBrRS5TYYgqrjlZQY3TEoM)yYQ1sDEwvzOmp3yfo)c2pF1pHumMZm8slC)IZ)HMZ85ln3CfhEmlMzZITkvoia08(zmg)tlC2JzmDPKOn8kbTwi5xv5UgBwqFlS45ngFX8J(WcZE8QLsLRqB1W3LTIdxp1Jx0Oe4x94S1jJBTGXXM04RZMF(jbdfCc0LM7KMJDxZPZw4kxn)DMZNpFnsdA4rqkFD021OsfJhtaGY78K(qJrvtbNeOxrvxbj3uc8t04OOho3ZXUJf1uVIJ7tWlx9UEbBqP3Ar19TqR8n3mGESysdLnCxDoqOWdecqjJikcaKu5cEV90x)7(G9Db4ymSBoYvQ1r(6IhbfI1FFkIOp)zs9I19RzYAK7f)bysJWYcjEnewf8UERrpQcw81XcPg91TAeigCO0up)UXsVl3FsxqelOjWfke(imkEUmG(geni5ZA6kqcfbXts2KJKNEdbtQNqtAtbP9ouaIp2HYQRIcBHq8Nq6GKJsomgchpIMaS3O2gYTnWaNqqvDtrubutGW93zFD2DV7p322qU)4HcaRgrjiLHqEuLKre0Ihqv6DreGJs03bGoVWtuJliQC03W6B9Mbt1sI1lGgynEIGUwCf8bsr)KSUUGkkrm2hcoWbcf6a7ldy9rIVUKOw8J)lsTXg)vHtHrrLi2I1(DalvGrKIsjlqNq3un3ykftdUtsrdRfhJuJRKqmDevusWYgSnF(9Tv8Frxvtkw6a91ZUdLrtjQLn)N1)gCljM6fGYhnU8FVf2gCSyhokHTRljMna)FU9ujBBBD1)bZgddUTdOrw7w7pW(M37MaIymImqxb7PN9BzTEtM163(mrIQihtAqyLqjHc(vwl8K12mz9UYYiOl6WRznRzTzakeLywZSsYSPk0Z1feKLyn7i3VA35(nbKvKrFlsqLOsi5b1I)Spre2jIGb9gpXQicVuhLGdrhZfjqsbjzG2CrYf9zZjMdLlg08xxnK1RgCZ(2MV2x)r(hVX)(</span><br></pre></td></tr></table></figure>              </div>            </details></li></ul><h2 id="-1"><a href="#-1" class="headerlink" title=""></a><span class='p green'>效果图:</span></h2><p><img src="/img/article/20230810/6.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 魔兽世界 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 魔兽 </tag>
            
            <tag> WLK </tag>
            
            <tag> WA字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WLK实用宏命令</title>
      <link href="/posts/993b8c1a/"/>
      <url>/posts/993b8c1a/</url>
      
        <content type="html"><![CDATA[<h2 id="随机召唤坐骑宏"><a href="#随机召唤坐骑宏" class="headerlink" title="随机召唤坐骑宏"></a>随机召唤坐骑宏</h2><ul><li>创建宏命令名字必须叫”随机坐骑”,粘贴下面文字即可.(“乌鸦之神”,”大型美酒节科多兽”)替换成你自己的坐骑名字<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#showtooltips</span></span><br><span class="line">/run <span class="built_in">local</span> t=&#123;<span class="string">&quot;乌鸦之神&quot;</span>,<span class="string">&quot;大型美酒节科多兽&quot;</span>&#125;;<span class="built_in">local</span> z=<span class="string">&quot;随机坐骑&quot;</span>EditMacro(z,nil,nil,GetMacroBody(z):gsub(<span class="string">&quot;e&quot;</span>..<span class="string">&quot; .+&quot;</span>,<span class="string">&quot;e&quot;</span>..<span class="string">&quot; &quot;</span>..t[random(<span class="comment">#t)],1))</span></span><br><span class="line">/use 乌鸦之神</span><br></pre></td></tr></table></figure></li></ul><h2 id="随机召唤坐骑能飞行地图召唤飞行坐骑不能则召唤地面坐骑"><a href="#随机召唤坐骑能飞行地图召唤飞行坐骑不能则召唤地面坐骑" class="headerlink" title="随机召唤坐骑能飞行地图召唤飞行坐骑不能则召唤地面坐骑"></a>随机召唤坐骑能飞行地图召唤飞行坐骑不能则召唤地面坐骑</h2><ul><li>注意名字替换成自己的坐骑名字<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#showtooltip</span></span><br><span class="line">/castrandom [flyble]你的飞行坐骑1,你的飞行坐骑2</span><br><span class="line">/castrandom [noflyable]你的地面坐骑1,你的地面坐骑2</span><br></pre></td></tr></table></figure></li></ul><h2 id="单人进团本宏"><a href="#单人进团本宏" class="headerlink" title="单人进团本宏"></a>单人进团本宏</h2><ul><li>邀请后面 随便个名字就行<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/click [@party1.noexists]PlayerFrameRightButton</span><br><span class="line">/run ConvertToRaid()</span><br><span class="line">/stopmacro [group]</span><br><span class="line">/邀请 许愿必出坐骑</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 魔兽世界 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 魔兽 </tag>
            
            <tag> WLK </tag>
            
            <tag> 宏命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>千奇百怪的漫长旅行</title>
      <link href="/posts/f9652d8f/"/>
      <url>/posts/f9652d8f/</url>
      
        <content type="html"><![CDATA[<h2 id="千奇百怪的漫长旅行-PS：多图警告！"><a href="#千奇百怪的漫长旅行-PS：多图警告！" class="headerlink" title="千奇百怪的漫长旅行 PS：多图警告！"></a>千奇百怪的漫长旅行 PS：多图警告！</h2><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>超级猴子球 诺森德地区世界掉落 打NAXX小怪掉的 直接15100G拿下 错过就怕见不到了😊(2024.07.18)</strong></span></p></div><p><img src="/img/article/20230810S/31.jpg"><br><img src="/img/article/20230810S/32.jpg"></p><hr><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>绿色始祖幼龙 第5颗蛋开次出(2022.12.25)</strong></span></p></div><p><img src="/img/article/20230810S/29.jpg"><br><img src="/img/article/20230810S/30.jpg"></p><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>ZG龙终于出了(2022.12.12)</strong></span></p></div><p><img src="/img/article/20230810S/27.jpg"><br><img src="/img/article/20230810S/28.jpg"></p><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>红色其拉共鸣水晶 单刷2组门口小怪出的(2022.12.4)</strong></span></p></div><p><img src="/img/article/20230810S/26.jpg"></p><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>蓝色始祖幼龙 41次出(2022.11.25)</strong></span></p></div><p><img src="/img/article/20230810S/24.jpg"><br><img src="/img/article/20230810S/25.jpg"></p><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>黑色始祖幼龙(2022.11.17)完成</strong></span></p></div><p><img src="/img/article/20230810S/22.jpg"><br><img src="/img/article/20230810S/23.jpg"></p><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>给小号MS做了个祈福(2022.11.13)</strong></span></p></div><p><img src="/img/article/20230810S/21.jpg"></p><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>5人成就龙(2022.11.8)完成</strong></span></p></div><p><img src="/img/article/20230810S/19.jpg"><br><img src="/img/article/20230810S/20.jpg"></p><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>被感染的始祖幼龙(2022.10.28)完成</strong></span></p></div><p><img src="/img/article/20230810S/17.jpg"><br><img src="/img/article/20230810S/18.jpg"></p><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>黑色幼龙1900 暮光幼龙5000 黑曜石3+1必出的坐骑也不算稀有截个图留念下</strong></span></p></div><p><img src="/img/article/20230810S/15.jpg"><br><img src="/img/article/20230810S/16.jpg"></p><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>10人出碧蓝幼龙了 1.25W拿下(2022.10.23)</strong></span></p></div><p><img src="/img/article/20230810S/13.jpg"><br><img src="/img/article/20230810S/14.jpg"></p><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>2次日常宝袋开出白色北极熊 算是天选之子了~~(2022.10.19)</strong></span></p></div><p><img src="/img/article/20230810S/12.jpg"></p><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>6次刷出DK马(2022.07.20)</strong></span></p></div><p><img src="/img/article/20230810S/11.jpg"></p><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>🍖杖 终于做出来了 太难了!!!(2022.02.14-03.23)</strong></span></p></div><p><img src="/img/article/20230810S/8.jpg"><br><img src="/img/article/20230810S/9.jpg"><br><img src="/img/article/20230810S/10.jpg"></p><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>灰烬使者 终于来了12个CD 感谢好兄弟帮我圆梦@Annjing(2022.03.15)</strong></span></p></div><p><img src="/img/article/20230810S/7.jpg"></p><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>40+次 刷出乌鸦之神(2022.02.28)</strong></span></p></div><p><img src="/img/article/20230810S/6.jpg"></p><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>过年了 1688幽灵虎!磕~ 新年快乐 虎年大吉!(2022.01.31)</strong></span></p></div><p><img src="/img/article/20230810S/4.jpg"><br><img src="/img/article/20230810S/5.jpg"></p><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>出凤凰了 太贵没买o(╯□╰)o(2022.01.21)</strong></span></p></div><p><img src="/img/article/20230810S/3.jpg"></p><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>爆肝66次刷出无头骑士的缰绳(2021.10.23)</strong></span></p></div><p><img src="/img/article/20230810S/2.jpg"></p><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>ROLL100点秒杀迅捷美酒节赛羊(2021.10.02)</strong></span></p></div><p><img src="/img/article/20230810S/1.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 魔兽世界 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 魔兽 </tag>
            
            <tag> 千奇百怪的漫长旅行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>魔兽登录报已从服务器断开(WOW51900319)</title>
      <link href="/posts/6edb5512/"/>
      <url>/posts/6edb5512/</url>
      
        <content type="html"><![CDATA[<h2 id="登陆客户端报服务器断开-WOW51900319"><a href="#登陆客户端报服务器断开-WOW51900319" class="headerlink" title="登陆客户端报服务器断开(WOW51900319)"></a>登陆客户端报服务器断开(WOW51900319)</h2><span class='p red'>如图所示:</span><p><img src="/img/article/20230810/4.jpg"></p><span class='p green'>解决方法:</span><p>在运行里输入cmd，打开命令提示符窗口(这里 要右键以管理员身份运行)<br>然后键入netsh winsock reset，回车，重启电脑。</p>]]></content>
      
      
      <categories>
          
          <category> 魔兽世界 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 魔兽 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>

<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>mybatis-plus自定义Mapper.xml文件路径</title>
      <link href="/posts/ab030d2a/"/>
      <url>/posts/ab030d2a/</url>
      
        <content type="html"><![CDATA[<ul><li><strong>mybatis-plus</strong> 是有默认的.xml文件路径的,路径为&#x2F;mapper&#x2F;**&#x2F;*.xml,我们现在想自定义的它的位置而不是在resources目录下创建,最后的解构如下图<br><img src="/img/article/2023_12/1205/01.jpg"></li></ul><ol><li>首先在项目的 <strong>pom</strong> 文件中的 <strong>build</strong> 标签里添加下面这段配置<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>然后打开项目的 <strong>application.yml</strong> 配置文件,给 <strong>mapper-locations</strong> 添加路径配置<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mapper-locations:</span> <span class="string">com/fu99999/note/mapper/xml/*.xml</span></span><br></pre></td></tr></table></figure><img src="/img/article/2023_12/1205/02.jpg"><br><strong>最后重启项目，大功告成。</strong></li></ol>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> JAVA开发笔记 </tag>
            
            <tag> mybatis-plus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>resultMap,resultType在xml中多表联查写法</title>
      <link href="/posts/28c6bc0a/"/>
      <url>/posts/28c6bc0a/</url>
      
        <content type="html"><![CDATA[<ul><li>为了方便区分这里直接创建了UserVoToResultType，UserVoToResultMap两个返回的vo类。先看下<strong>ResultType</strong>的写法</li></ul><ol><li>vo类 UserVoToResultType<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserVoToResultType</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String mobile;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> Integer fileId;</span><br><span class="line">    <span class="keyword">private</span> String domainType;</span><br><span class="line">    <span class="keyword">private</span> String levelType;</span><br><span class="line">    <span class="keyword">private</span> String filesName;</span><br><span class="line">    <span class="keyword">private</span> String filesUrl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>Controller <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;listAllToResultType&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">listAllToResultType</span><span class="params">(<span class="meta">@RequestParam(name = &quot;pageNo&quot;, defaultValue = &quot;1&quot;)</span> Integer pageNo,</span></span><br><span class="line"><span class="params">                             <span class="meta">@RequestParam(name = &quot;pageSize&quot;, defaultValue = &quot;10&quot;)</span> Integer pageSize,</span></span><br><span class="line"><span class="params">                             <span class="meta">@RequestParam</span> Integer fileId)</span> &#123;</span><br><span class="line">    Page&lt;UserVoToResultType&gt; pageParam = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(pageNo, pageSize);</span><br><span class="line">    IPage&lt;UserVoToResultType&gt; listPage = userInfoService.listAllToResultType(pageParam,fileId);</span><br><span class="line">    <span class="keyword">return</span> R.ok().data(<span class="string">&quot;listPage&quot;</span>, listPage);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>直接跳过Service和Impl来到Mapper层<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IPage&lt;UserVoToResultType&gt; <span class="title function_">listAllToResultType</span><span class="params">(Page&lt;UserVoToResultType&gt; pageParam, Integer fileId)</span>;</span><br></pre></td></tr></table></figure></li><li>xml文件,直接将查询的结果映射到指定的vo中<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;listAllToResultType&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.baomidou.mybatisplus.core.metadata.IPage&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.fu99999.note.pojo.vo.UserVoToResultType&quot;</span>&gt;</span></span><br><span class="line">   select</span><br><span class="line">       tui.id,</span><br><span class="line">       tui.name,</span><br><span class="line">       tui.mobile,</span><br><span class="line">       tui.age,</span><br><span class="line">       tui.file_id,</span><br><span class="line">       tfi.domain_type,</span><br><span class="line">       tfi.level_type,</span><br><span class="line">       tfi.files_name,</span><br><span class="line">       tfi.files_url</span><br><span class="line">   from tab_user_info tui left join tab_file_info tfi on tui.file_id = tfi.id where tui.file_id = #&#123;fileId&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><ul><li><strong>ResultMap</strong>的写法</li></ul><ol><li>vo类 UserVoToResultMap<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserVoToResultMap</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String mobile;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> Integer fileId;</span><br><span class="line">    <span class="comment">// TabFileInfo是file表的实体类</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;TabFileInfo&gt; fileInfoList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>Controller<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;listAllToResultMap&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">listAllToResultMap</span><span class="params">(<span class="meta">@RequestParam(name = &quot;pageNo&quot;, defaultValue = &quot;1&quot;)</span> Integer pageNo,</span></span><br><span class="line"><span class="params">                            <span class="meta">@RequestParam(name = &quot;pageSize&quot;, defaultValue = &quot;10&quot;)</span> Integer pageSize,</span></span><br><span class="line"><span class="params">                            <span class="meta">@RequestParam</span> Integer fileId)</span> &#123;</span><br><span class="line">    Page&lt;UserVoToResultMap&gt; pageParam = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(pageNo, pageSize);</span><br><span class="line">    IPage&lt;UserVoToResultMap&gt; listPage = userInfoService.listAllToResultMap(pageParam,fileId);</span><br><span class="line">    <span class="keyword">return</span> R.ok().data(<span class="string">&quot;listPage&quot;</span>, listPage);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>直接跳过Service和Impl来到Mapper层<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IPage&lt;UserVoToResultMap&gt; <span class="title function_">listAllToResultMap</span><span class="params">(Page&lt;UserVoToResultMap&gt; pageParam, Integer fileId)</span>;</span><br></pre></td></tr></table></figure></li><li>xml文件<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- TabUserInfo表默认映射 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;baseResultMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;com.fu99999.note.pojo.vo.UserVoToResultMap&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;mobile&quot;</span> <span class="attr">column</span>=<span class="string">&quot;mobile&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;age&quot;</span> <span class="attr">column</span>=<span class="string">&quot;age&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;fileId&quot;</span> <span class="attr">column</span>=<span class="string">&quot;file_id&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 多表联查 映射 property=&quot;fileInfoList&quot; 为映射vo的对应表字段名字 ofType属性指定了集合中元素的类型 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;fileInfoList&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;com.fu99999.note.pojo.entity.TabFileInfo&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;domainType&quot;</span> <span class="attr">column</span>=<span class="string">&quot;domain_type&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;levelType&quot;</span> <span class="attr">column</span>=<span class="string">&quot;level_type&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;filesName&quot;</span> <span class="attr">column</span>=<span class="string">&quot;files_name&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;filesUrl&quot;</span> <span class="attr">column</span>=<span class="string">&quot;files_url&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;listAllToResultMap&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.baomidou.mybatisplus.core.metadata.IPage&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;baseResultMap&quot;</span>&gt;</span></span><br><span class="line">    select</span><br><span class="line">        tui.id,</span><br><span class="line">        tui.name,</span><br><span class="line">        tui.mobile,</span><br><span class="line">        tui.age,</span><br><span class="line">        tui.file_id,</span><br><span class="line">        tfi.domain_type,</span><br><span class="line">        tfi.level_type,</span><br><span class="line">        tfi.files_name,</span><br><span class="line">        tfi.files_url</span><br><span class="line">    from tab_user_info tui left join tab_file_info tfi on tui.file_id = tfi.id where tui.file_id = #&#123;fileId&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><ul><li><strong>总结：在做多表联查的时候ResultMap需要在xml中添加collection标签来映射需要返回的字段，需要注意的是property为实体字段名column是对应的数据库中的名字。而ResultType需要注意的是SQL查询的结果要和映射的对象一一对应。</strong></li></ul>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> mybatis </tag>
            
            <tag> JAVA开发笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot项目@spring.active@启动报错</title>
      <link href="/posts/564b1e9/"/>
      <url>/posts/564b1e9/</url>
      
        <content type="html"><![CDATA[<ul><li><strong>SpringBoot项</strong> 启动后报错，信息如下图：<br><img src="/img/article/2023_12/1204/01.jpg"></li><li>项目的pom文件<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">profiles</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开发环境 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>dev<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--默认激活--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>true<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">spring.profiles.active</span>&gt;</span>dev<span class="tag">&lt;/<span class="name">spring.profiles.active</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 环境标识，需要与配置文件的名称相对应 --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--本地编译时自行修改--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">log.homepath</span>&gt;</span>/home/logs<span class="tag">&lt;/<span class="name">log.homepath</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 生产环境 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>prod<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">spring.profiles.active</span>&gt;</span>prod<span class="tag">&lt;/<span class="name">spring.profiles.active</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>application.yml配置<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">@spring.profiles.active@</span></span><br></pre></td></tr></table></figure></li><li>经分析原因，主要是由于此处 <strong>@spring.profiles.active@</strong> 值未解析导致，解决方法：</li><li>在 <strong>pom</strong> 中的 <strong>build</strong> 里面加入 <strong>resources</strong> 标签内容如下<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>添加之后重启项目完美解决报错问题。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> JAVA开发笔记 </tag>
            
            <tag> SpringBoot项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>@Validated注解和@Valid注解区别</title>
      <link href="/posts/51480014/"/>
      <url>/posts/51480014/</url>
      
        <content type="html"><![CDATA[<h3 id="Validated注解和-Valid注解区别"><a href="#Validated注解和-Valid注解区别" class="headerlink" title="@Validated注解和@Valid注解区别"></a>@Validated注解和@Valid注解区别</h3><p><strong>@Valid</strong> 与 <strong>@Validated</strong> 都是用来校验接收参数的,其中 <strong>@Validated</strong>是Spring的注解，对 <strong>@Valid</strong> 进行了封装，所有功能强大。 <strong>@Valid</strong> 是javax包下的注解属于JDK提供的。</p><ul><li><strong>@Valid</strong> 没有分组的功能</li><li><strong>@Validated</strong> 提供了一个分组功能，可以在入参验证时，根据不同的分组采用不同的验证机制</li><li><strong>@Valid</strong> 可以用在方法、构造函数、方法参数和成员属性（字段）上，支持嵌套检测</li><li><strong>@Validated</strong> 可以用在类型、方法和方法参数上。但是不能用在成员属性（字段）上，不支持嵌套检测</li></ul><p>在<strong>SpringBoot</strong>项目中使用需要先引入以下<strong>Maven</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-validation<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Validated注解和-Valid注解使用场景"><a href="#Validated注解和-Valid注解使用场景" class="headerlink" title="@Validated注解和@Valid注解使用场景"></a>@Validated注解和@Valid注解使用场景</h3><ul><li>给请求参数添加校验<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@EqualsAndHashCode(callSuper = false)</span></span><br><span class="line"><span class="meta">@ApiModel(value=&quot;TabUserInfo对象&quot;, description=&quot;用户表&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TabUserInfo</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;主键&quot;)</span></span><br><span class="line">    <span class="meta">@TableId(value = &quot;id&quot;, type = IdType.AUTO)</span></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;姓名&quot;)</span></span><br><span class="line">    <span class="comment">// validated参数校验</span></span><br><span class="line">    <span class="meta">@NotNull(message = &quot;姓名不能为空&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;手机&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String mobile;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;年龄&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li>Controller层<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;saveOrUpdate&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">saveOrUpdate</span><span class="params">(<span class="meta">@RequestBody</span> <span class="meta">@Valid</span> TabUserInfo userInfo)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">saved</span> <span class="operator">=</span> userInfoService.saveOrUpdate(userInfo);</span><br><span class="line">        <span class="keyword">if</span> (saved) &#123;</span><br><span class="line">            <span class="keyword">return</span> R.ok().message(<span class="string">&quot;操作成功&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> R.error().message(<span class="string">&quot;操作失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li>Postman测试<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="string">&quot;5&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;mobile&quot;</span><span class="punctuation">:</span> <span class="string">&quot;13201235669&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li>IDEA控制台的打印<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">DefaultHandlerExceptionResolver :</span> <span class="string">Resolved</span> [<span class="attr">org.springframework.web.bind.MethodArgumentNotValidException:</span> <span class="string">Validation</span> <span class="string">failed</span> <span class="string">for</span> <span class="string">argument</span> [<span class="number">0</span>] <span class="string">in</span> <span class="string">public</span> <span class="string">com.fu99999.note.result.R</span> <span class="string">com.fu99999.note.controller.TabUserInfoController.saveOrUpdate(com.fu99999.note.pojo.entity.TabUserInfo):</span> [<span class="string">Field</span> <span class="string">error</span> <span class="string">in</span> <span class="string">object</span> <span class="string">&#x27;tabUserInfo&#x27;</span> <span class="string">on</span> <span class="string">field</span> <span class="attr">&#x27;name&#x27;:</span> <span class="string">rejected</span> <span class="string">value</span> [<span class="literal">null</span>]<span class="string">;</span> <span class="string">codes</span> [<span class="string">NotNull.tabUserInfo.name</span>,<span class="string">NotNull.name</span>,<span class="string">NotNull.java.lang.String</span>,<span class="string">NotNull</span>]<span class="string">;</span> <span class="string">arguments</span> [<span class="attr">org.springframework.context.support.DefaultMessageSourceResolvable:</span> <span class="string">codes</span> [<span class="string">tabUserInfo.name</span>,<span class="string">name</span>]<span class="string">;</span> <span class="string">arguments</span> []<span class="string">;</span> <span class="string">default</span> <span class="string">message</span> [<span class="string">name</span>]]<span class="string">;</span> <span class="string">default</span> <span class="string">message</span> [<span class="string">姓名不能为空</span>]] ]</span><br></pre></td></tr></table></figure><img src="/img/article/2023_12/1201/01.jpg"><br><strong>@Valid</strong> 的校验不通过会抛出异常，在使用 <strong>@Valid</strong> 注解的请求参数后面可以跟一个 <strong>BindingResult</strong> 对象，这个对象的作用是将所有的异常信息存起来。在源码中可以看出 <strong>BindingResult</strong> 继承 <strong>Error</strong> 对象，异常的信息可以从 <strong>Errors</strong> 中拿到。下面我们自己写一个工具类来返回这些信息。<br><img src="/img/article/2023_12/1201/02.jpg"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HandleValidateErr</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> R <span class="title function_">handleValidateErr</span><span class="params">(BindingResult bindingResult)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">message</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        List&lt;ObjectError&gt; allErrors = bindingResult.getAllErrors();</span><br><span class="line">        <span class="keyword">for</span> (ObjectError allError : allErrors) &#123;</span><br><span class="line">            message = allError.getDefaultMessage();</span><br><span class="line">            <span class="keyword">if</span>(StringUtils.isNotBlank(message))&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> R.error().message(message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>给Controller层添加BindingResult对象<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;saveOrUpdate&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">saveOrUpdate</span><span class="params">(<span class="meta">@RequestBody</span> <span class="meta">@Valid</span> TabUserInfo userInfo, BindingResult bindingResult)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (bindingResult.hasErrors()) &#123;</span><br><span class="line">        <span class="keyword">return</span> HandleValidateErr.handleValidateErr(bindingResult);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">saved</span> <span class="operator">=</span> userInfoService.saveOrUpdate(userInfo);</span><br><span class="line">    <span class="keyword">if</span> (saved) &#123;</span><br><span class="line">        <span class="keyword">return</span> R.ok().message(<span class="string">&quot;操作成功&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> R.error().message(<span class="string">&quot;操作失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>返回结果<br><img src="/img/article/2023_12/1201/03.jpg"><br><strong><span class='p red'>@Validated的使用方法和@Valid相同，因为本来就是对@Valid注解的封装</span></strong></li></ul><h3 id="Validated的分组校验"><a href="#Validated的分组校验" class="headerlink" title="@Validated的分组校验"></a>@Validated的分组校验</h3><ul><li>分别校验Gropu1和Gropu2接口类<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Gropu1</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Gropu2</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>在实体类中分别加入Gropu1和Gropu2的校验规则<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@EqualsAndHashCode(callSuper = false)</span></span><br><span class="line"><span class="meta">@ApiModel(value=&quot;TabUserInfo对象&quot;, description=&quot;用户表&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TabUserInfo</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;主键&quot;)</span></span><br><span class="line">    <span class="meta">@TableId(value = &quot;id&quot;, type = IdType.AUTO)</span></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;姓名&quot;)</span></span><br><span class="line">    <span class="meta">@NotNull(message = &quot;姓名不能为空&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Group2的参数校验</span></span><br><span class="line">    <span class="meta">@Pattern(groups = Group2.class, regexp= &quot;123456&quot;,message =&quot;手机号必须是123456&quot; )</span></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;手机&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String mobile;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Group1的参数校验</span></span><br><span class="line">    <span class="meta">@Min(groups = Group1.class,value=18,message = &quot;age1必须大于等于18&quot;)</span></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;年龄&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li>在Controller添加两个校验接口<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;getGroup1Validated&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">getGroup1Validated</span><span class="params">(<span class="meta">@Validated(Group1.class)</span> <span class="meta">@RequestBody</span> TabUserInfo userInfo)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> R.ok().data(<span class="string">&quot;userInfo&quot;</span>,userInfo);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@GetMapping(&quot;getGroup2Validated&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">getGroup2Validated</span><span class="params">(<span class="meta">@Validated(Group2.class)</span> <span class="meta">@RequestBody</span> TabUserInfo userInfo)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> R.ok().data(<span class="string">&quot;userInfo&quot;</span>,userInfo);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>校验结果<br><img src="/img/article/2023_12/1201/04.jpg"><br><strong><span class='p red'>@Validated(Gropu1.class)如果指定了分组，那么只会对指定分组下的参数进行校验，别的不会管</span></strong></li></ul>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> JAVA开发笔记 </tag>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>eclipse项目如何在IDEA中导入并运行</title>
      <link href="/posts/daa02af0/"/>
      <url>/posts/daa02af0/</url>
      
        <content type="html"><![CDATA[<div class="note anzhiyufont anzhiyu-icon-rocket simple"><p><strong>eclipse</strong> 项目如何在 <strong>IDEA</strong> 中 <strong>打开</strong></p></div><ol><li><p>打开IDEA，依次点击 <strong>File</strong> &gt; <strong>New</strong> &gt; <strong>Project from Existing Sources</strong><br><img src="/img/article/2023_11/1129/01.jpg"></p></li><li><p>选择需要导入的 <strong>eclipse</strong> 项目，点击OK<br><img src="/img/article/2023_11/1129/02.jpg"></p></li><li><p>勾选 <strong>Import project from external model</strong>，选择 <strong>Eclipse</strong>，点击 <strong>Next</strong><br><img src="/img/article/2023_11/1129/03.jpg"></p></li><li><p>后面几步都是点击 <strong>Next</strong>，无需改动其他<br><img src="/img/article/2023_11/1129/04.jpg"></p></li><li><p>选择本地安装的JDK版本，点击 <strong>Create</strong><br><img src="/img/article/2023_11/1129/05.jpg"></p></li><li><p>成功打开，界面如下所示<br><img src="/img/article/2023_11/1129/06.jpg"></p></li></ol><div class="note anzhiyufont anzhiyu-icon-rocket simple"><p><strong>eclipse</strong> 项目如何在 <strong>IDEA</strong> 中 <strong>运行</strong></p></div><ol><li><p>给项目添加需要的依赖，打开IDAE的设置Setting添加JDK版本<br><img src="/img/article/2023_11/1129/07.jpg"></p></li><li><p>在 <strong>File</strong> &gt; <strong>Project Structure</strong> &gt; 选择<strong>Modules</strong> 修改项目 <strong>resources</strong> 文件夹<br><img src="/img/article/2023_11/1129/08.jpg"></p></li><li><p>在 <strong>File</strong> &gt; <strong>Project Structure</strong> &gt; 选择<strong>Libraries</strong> 给项目添加相关依赖<br><img src="/img/article/2023_11/1129/09.jpg"></p></li><li><p>在<strong>Modules</strong> 中添加 <strong>Web</strong><br><img src="/img/article/2023_11/1129/10.jpg"></p></li><li><p>在 <strong>File</strong> &gt; <strong>Project Structure</strong> &gt; 选择<strong>Facets</strong> 修改刚才添加的 <strong>Web</strong> 的路径<br><img src="/img/article/2023_11/1129/11.jpg"></p></li><li><p>在 <strong>File</strong> &gt; <strong>Project Structure</strong> &gt; 选择<strong>Artifacts</strong> 添加 <strong>Web Application</strong><br><img src="/img/article/2023_11/1129/12.jpg"></p></li><li><p>给 <strong>IDEA</strong> 添加本地的 <strong>Tomcat</strong><br><img src="/img/article/2023_11/1129/13.jpg"></p></li><li><p>最后给项目设置启动容器 <strong>Tomcat</strong> 点击 <strong>Apply</strong> 完成。<br><img src="/img/article/2023_11/1129/14.jpg"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> 开发工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux部署服务常用命令和脚本</title>
      <link href="/posts/7fce129e/"/>
      <url>/posts/7fce129e/</url>
      
        <content type="html"><![CDATA[<div class="note blue anzhiyufont anzhiyu-icon-bullhorn simple"><p>前端和后端项目部署到 <strong>Linux</strong> 服务器上的常用命令</p></div><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Tab键 打出名字前几位按Tab自动补全完整名字</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 返回上两级目录</span></span><br><span class="line"><span class="string">cd</span> <span class="string">..</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入指定目录</span></span><br><span class="line"><span class="string">cd</span> <span class="string">/xx/xx/xx</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看目录</span></span><br><span class="line"><span class="string">ls</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看目录(列表)</span></span><br><span class="line"><span class="string">ll</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建文件夹</span></span><br><span class="line"><span class="string">mkdir</span> <span class="string">文件名</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行.sh脚本</span></span><br><span class="line"><span class="string">./xxx.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看日志的最后100行 xxx.log是服务器日志的名字</span></span><br><span class="line"><span class="string">tail</span> <span class="string">-100f</span> <span class="string">xxx.log</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份项目:原名称.bak 或者原名称.bak+时间</span></span><br><span class="line"><span class="string">xxxxx-1.0-SNAPSHOT.jar.bak</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看正在运行的java程序</span></span><br><span class="line"><span class="string">ps</span> <span class="string">-ef|grep</span> <span class="string">java</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看sh脚本</span></span><br><span class="line"><span class="string">cat</span> <span class="string">xxx.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑脚本 i 进入编辑 : 进入退出 q 退出 qw 退出并保存 q! 强制退出不保存</span></span><br><span class="line"><span class="string">vim</span> <span class="string">xxx.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 清屏</span></span><br><span class="line"><span class="string">Ctrl</span> <span class="string">+</span> <span class="string">l</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止程序</span></span><br><span class="line"><span class="string">Ctrl</span> <span class="string">+</span> <span class="string">c</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除文件</span></span><br><span class="line"><span class="string">rm</span> <span class="string">-rf</span> <span class="string">文件名</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 部署前端项目到xx目录下 (前端项目需要先删除旧的项目后部署)</span></span><br><span class="line"><span class="string">\cp</span> <span class="string">-rf</span> <span class="string">/xx/xx/xx/文件名</span> <span class="string">./</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 前端项目打包</span></span><br><span class="line"><span class="string">npm</span> <span class="string">run</span> <span class="string">build</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><div class="note blue anzhiyufont anzhiyu-icon-bullhorn simple"><p>后端部署项目启动&#x2F;停止 <strong>.sh</strong> 脚本</p></div><p><strong>停止正在运行的项目，脚本名称 shutdown-你的项目名称.sh</strong> </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment">#停止xx目录下的项目</span></span><br><span class="line">projectDir=<span class="string">&quot;/xx/xx/xx/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#项目的名字</span></span><br><span class="line">jarName=<span class="string">&quot;xxxxx-1.0-SNAPSHOT.jar&quot;</span></span><br><span class="line"></span><br><span class="line">count=$(ps -ef |grep <span class="variable">$&#123;jarName&#125;</span> |grep -v <span class="string">&quot;grep&quot;</span> |<span class="built_in">wc</span> -l)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;count&#125;</span> -gt 0 ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;已存在<span class="variable">$&#123;count&#125;</span>个<span class="variable">$&#123;jarName&#125;</span>程序在运行&quot;</span></span><br><span class="line">        jarPid=$(ps x |grep <span class="variable">$&#123;jarName&#125;</span> | grep -v grep | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$&#123;jarPid&#125;</span></span><br><span class="line">        <span class="built_in">kill</span> -9 <span class="variable">$&#123;jarPid&#125;</span></span><br><span class="line">        output=`<span class="built_in">echo</span> <span class="string">&quot;正在关闭<span class="variable">$&#123;jarName&#125;</span>程序,进程id<span class="variable">$&#123;jarPid&#125;</span>&quot;</span>`</span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$&#123;output&#125;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;没有对应的程序在运行&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p><strong>启动项目，脚本名称 start-你的项目名称.sh</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#启动目录下的jar包 --server.port=端口号</span></span><br><span class="line"><span class="built_in">nohup</span> java -jar /xx/xxx/xxx/xxxxx-1.0-SNAPSHOT.jar  --server.port=49002  &gt;/dev/null 2&gt;&amp;1 &amp;</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;startup form ok&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> Linux </tag>
            
            <tag> JAVA开发笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IntelliJ IDEA 如何优雅的添加文档注释</title>
      <link href="/posts/8bbb8f5d/"/>
      <url>/posts/8bbb8f5d/</url>
      
        <content type="html"><![CDATA[<p>在日常的开发中，最常用的注释就是 <strong>类注释</strong> 和 <strong>方法注释</strong> ，分别为类和方法添加描述信息，日期，作者等，增强代码的可读性，方便日后维护。但是项目中都会有很多的类和方法，手动依次添加过于麻烦。下面就介绍下如何高效，便捷的添加这些注释。</p><p><img src="/img/article/2023_11/1109/01.jpg"></p><h3 id="类注释"><a href="#类注释" class="headerlink" title="类注释"></a>类注释</h3><p>在IDEA中，依次选择 <strong>File &gt; Setting &gt; Editor &gt; File and Code Templates &gt; Files &gt; Class</strong> 编辑栏中看到的是类的默认模板，把自己模板添加到里面 <strong><span class='p green'>(绿色框内容是博主的模板)</span></strong> <strong><span class='p red'>注意:不要把原来的信息覆盖。</span></strong></p><p><img src="/img/article/2023_11/1109/02.jpg"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>:     wind-of-grace</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:  TODO  </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>:    $&#123;DATE&#125; $&#123;TIME&#125;</span></span><br><span class="line"><span class="comment"> */</span> </span><br></pre></td></tr></table></figure><p>想要一次性为所有的文件都应用上模板，选择 <strong>Files</strong> 旁边的 <strong>Includes</strong> , 在 <strong>File Header</strong> 的编辑栏里添加自己的模板即可。</p><p><img src="/img/article/2023_11/1109/03.jpg"></p><div class="note blue anzhiyufont anzhiyu-icon-bullhorn simple"><p>其它类型的文件可根据自己的需要进行修改。 <strong>${}</strong>  中的值代表变量，下面是支持的变量</p></div><table><thead><tr><th align="center">变量名</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">${PACKAGE_NAME}</td><td align="center">当前新建文件的包名</td></tr><tr><td align="center">${NAME}</td><td align="center">新建文件时指定的文件名</td></tr><tr><td align="center">${USER}</td><td align="center">当前登录用户昵称</td></tr><tr><td align="center">${DATE}</td><td align="center">当前系统日期</td></tr><tr><td align="center">${TIME}</td><td align="center">当前系统时间</td></tr><tr><td align="center">${YEAR}</td><td align="center">当前系统年份</td></tr><tr><td align="center">${MONTH}</td><td align="center">当前系统月份</td></tr><tr><td align="center">${MONTH_NAME_SHORT}</td><td align="center">当前系统月份缩写（Jan、Feb…）</td></tr><tr><td align="center">${MONTH_NAME_FULL}</td><td align="center">当前系统月份全拼 (January, February…)</td></tr><tr><td align="center">${DAY}</td><td align="center">当前系统日份</td></tr><tr><td align="center">${HOUR}</td><td align="center">当前系统时间（时）</td></tr><tr><td align="center">${MINUTE}</td><td align="center">当前系统时间（分）</td></tr><tr><td align="center">${PROJECT_NAME}</td><td align="center">项目名称</td></tr></tbody></table><h3 id="方法注释"><a href="#方法注释" class="headerlink" title="方法注释"></a>方法注释</h3><p>方法注释没有系统默认模板，需要通过 <strong>自定义用户模板</strong> 进行快捷添加。<br>在IDEA中，依次选择 <strong>File &gt; Setting &gt; Editor &gt; Live Templates</strong>，点击右上角 <strong>+</strong> ，选择 <strong>Templates Group</strong> 创建一个新的自定义组 在点击加号选 <strong>Live Template</strong>，创建一个用户自定义模板。<br>根据需要填写快捷键，描述等信息 <strong><span class='p green'>(绿色框内容是博主的模板)</span></strong><br><img src="/img/article/2023_11/1109/04.jpg"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">*</span><br><span class="line"> * <span class="meta">@Author</span> wind-of-grace</span><br><span class="line"> * <span class="meta">@Date</span> $date$ $time$</span><br><span class="line"> * <span class="meta">@Description</span> $context$</span><br><span class="line"> * <span class="meta">@Param</span> $param$</span><br><span class="line"> * <span class="meta">@Return</span> $<span class="keyword">return</span>$</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><p>模板中的变量使用 <strong>“$$”</strong> 包裹，可以在 <strong>Edit Variables</strong> 中进行编辑<br><img src="/img/article/2023_11/1109/05.jpg"></p><p>然后把注释的作用域选择为所有 <strong>JAVA</strong> 文件<br><img src="/img/article/2023_11/1109/06.jpg"></p><p>最后在需要加注释的方法上输入 &#x2F;*s <strong>(这里的s为刚才Abbreviation中填写的值，博主刚才填写的是s)</strong> 回车 方法注释将自动生成。<br><img src="/img/article/2023_11/1109/07.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> 开发工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mybatis使用@Select条件过滤查询</title>
      <link href="/posts/3e6a0ed1/"/>
      <url>/posts/3e6a0ed1/</url>
      
        <content type="html"><![CDATA[<p>有时候项目中没有配置xml文件，需要使用 <strong>@Select</strong> 注解做条件过滤查询，实例方法如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据手机号查询年龄18的用户信息,如不传则全查年龄18的用户（MyBatis <span class="doctag">@Select</span>()写法）</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Select(&quot;&lt;script&gt;&quot; +</span></span><br><span class="line"><span class="meta">        &quot;SELECT mobile,name,id FROM tab_user_info WHERE 1=1&quot; +</span></span><br><span class="line"><span class="meta">        &quot;&lt;if test=&#x27;mobile != null and mobile != \&quot;\&quot; &#x27;&gt;&quot; +</span></span><br><span class="line"><span class="meta">        &quot; AND mobile = #&#123;mobile&#125;&quot; +</span></span><br><span class="line"><span class="meta">        &quot;&lt;/if&gt;&quot; +</span></span><br><span class="line"><span class="meta">        &quot; AND age = &#x27;18&#x27; &quot; +</span></span><br><span class="line"><span class="meta">        &quot;&lt;/script&gt;&quot;)</span></span><br><span class="line">Map&lt;String, Object&gt; <span class="title function_">selByMobile</span><span class="params">(String mobile)</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> mybatis </tag>
            
            <tag> JAVA开发笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JSONObject、JSONArray 非空判断</title>
      <link href="/posts/da623c86/"/>
      <url>/posts/da623c86/</url>
      
        <content type="html"><![CDATA[<ul><li><p>JSONObject、JSONArray 非空判断，这么写的好处是 <strong>null.isEmpty()</strong> 和 <strong>null.size()</strong> 会报空指针异常，添加上 <strong>||</strong> 或  <strong>&amp;&amp;</strong> ，程序就会走不到这一步，所以下面的公式不会报错。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//JSONObject空判断</span></span><br><span class="line"><span class="keyword">if</span> (jsonObj == <span class="literal">null</span> || jsonObj.isEmpty()) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;jsonObj为空&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//JSONObject非空判断</span></span><br><span class="line"><span class="keyword">if</span> (jsonObj != <span class="literal">null</span> &amp;&amp; !jsonObj.isEmpty()) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;jsonObj为非空&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//JSONArray空判断</span></span><br><span class="line"><span class="keyword">if</span> (jsonArray == <span class="literal">null</span> || jsonArray.size() == <span class="number">0</span>) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;jsonArray为空&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//JSONArray非空判断</span></span><br><span class="line"><span class="keyword">if</span> (jsonArray != <span class="literal">null</span> &amp;&amp; jsonArray.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;jsonArray为空&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>实际开发中对JSON数据操作时，<strong>JSONObject &#x2F; JSONArray</strong> 如果为空，在取值 <strong>getJSONObject() &#x2F; getJSONArray()</strong> 会报错，这时就需要先进行判断。<br><strong><span class='p red'>注意：如果给在下面实例中16行代码只写成if (clutterForm.size() > 0)进行判断，运行后则会报NullPointerException</span></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line"> <span class="type">String</span> <span class="variable">json1</span> <span class="operator">=</span> <span class="string">&quot;&#123;\&quot;code\&quot;:200,\&quot;msg\&quot;:null,\&quot;data\&quot;:&#123;\&quot;basicForm\&quot;:[&#123;\&quot;formType\&quot;:\&quot;1\&quot;,\&quot;formVersion\&quot;:\&quot;70\&quot;&#125;],\&quot;clutterForm\&quot;:\&quot;\&quot;&#125;&#125;&quot;</span>;</span><br><span class="line"> <span class="type">String</span> <span class="variable">json2</span> <span class="operator">=</span> <span class="string">&quot;&#123;\&quot;code\&quot;:200,\&quot;data\&quot;:&#123;\&quot;basicForm\&quot;:[&#123;\&quot;formType\&quot;:\&quot;1\&quot;,\&quot;formVersion\&quot;:\&quot;66\&quot;&#125;],\&quot;clutterForm\&quot;:[&#123;\&quot;pcJson\&quot;:&#123;\&quot;gutter\&quot;:0,\&quot;column\&quot;:[&#123;\&quot;readonly\&quot;:true,\&quot;prop\&quot;:\&quot;123\&quot;&#125;]&#125;&#125;]&#125;&#125;&quot;</span>;</span><br><span class="line"></span><br><span class="line"> <span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"> <span class="type">JSONArray</span> <span class="variable">columnEvery</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"> List&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"> list.add(json1);</span><br><span class="line"> list.add(json2);</span><br><span class="line"></span><br><span class="line"> <span class="keyword">for</span> (String json : list) &#123;</span><br><span class="line">     jsonObject = JSON.parseObject(json);</span><br><span class="line">     <span class="keyword">if</span> (jsonObject.containsKey(<span class="string">&quot;data&quot;</span>) &amp;&amp; jsonObject.getJSONObject(<span class="string">&quot;data&quot;</span>).containsKey(<span class="string">&quot;clutterForm&quot;</span>)) &#123;</span><br><span class="line">         com.alibaba.fastjson.<span class="type">JSONArray</span> <span class="variable">clutterForm</span> <span class="operator">=</span> jsonObject.getJSONArray(<span class="string">&quot;clutterForm&quot;</span>);</span><br><span class="line">         <span class="keyword">if</span> (clutterForm != <span class="literal">null</span> &amp;&amp; clutterForm.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">             com.alibaba.fastjson.<span class="type">JSONObject</span> <span class="variable">pcJson</span> <span class="operator">=</span> clutterForm.getJSONObject(<span class="number">0</span>).getJSONObject(<span class="string">&quot;pcJson&quot;</span>);</span><br><span class="line">             <span class="keyword">if</span> (pcJson.containsKey(<span class="string">&quot;column&quot;</span>)) &#123;</span><br><span class="line">                 com.alibaba.fastjson.<span class="type">JSONArray</span> <span class="variable">column</span> <span class="operator">=</span> pcJson.getJSONArray(<span class="string">&quot;column&quot;</span>);</span><br><span class="line">                 <span class="keyword">if</span> (columnEvery == <span class="literal">null</span>) &#123;</span><br><span class="line">                     columnEvery = column;</span><br><span class="line">                 &#125;</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> JSON </tag>
            
            <tag> JAVA开发笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>判断字段是否存在于JSON中并且这个字段是JSONArray</title>
      <link href="/posts/a8b6e537/"/>
      <url>/posts/a8b6e537/</url>
      
        <content type="html"><![CDATA[<ul><li><strong>记录下实际开发过程中遇到的问题。<span class='p red'>报错信息:java.lang.ClassCastException: java.lang.String cannot be cast to com.alibaba.fastjson.JSONArray</span></strong><br>模拟调用返回的数据JSON<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;basicForm&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;formType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;formVersion&quot;</span><span class="punctuation">:</span> <span class="string">&quot;73&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;emptyJson&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;contactMobile&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;contactCode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;contactName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;applyerName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;contactType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;applyerAreaCode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;applyerMobile&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;applyerPageType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;applyerPageCode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">                    <span class="punctuation">&#125;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;clutterForm&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;basicForm&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;formType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;formVersion&quot;</span><span class="punctuation">:</span> <span class="string">&quot;73&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;emptyJson&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;contactMobile&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;contactCode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;contactName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;applyerName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;contactType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;applyerAreaCode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;applyerMobile&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;applyerPageType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;applyerPageCode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">                    <span class="punctuation">&#125;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;clutterForm&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;formVersion&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;templateId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;960b1dbd-0acc-4626-8a55-15ff0f1962b3&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;pcJson&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;submitBtn&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;emptyText&quot;</span><span class="punctuation">:</span> <span class="string">&quot;清空&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;column&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                            <span class="punctuation">&#123;</span></span><br><span class="line">                                <span class="attr">&quot;arrow&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;display&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;labelWidth&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0px&quot;</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;title&quot;</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;children&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                                    <span class="attr">&quot;column&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">                                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;prop&quot;</span><span class="punctuation">:</span> <span class="string">&quot;yhzsx&quot;</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;styles&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                                    <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#000&quot;</span><span class="punctuation">,</span></span><br><span class="line">                                    <span class="attr">&quot;fontSize&quot;</span><span class="punctuation">:</span> <span class="string">&quot;18px&quot;</span></span><br><span class="line">                                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;原核准事项&quot;</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;collapse&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">                            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                            <span class="punctuation">&#123;</span></span><br><span class="line">                                <span class="attr">&quot;arrow&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;display&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;labelWidth&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0px&quot;</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;title&quot;</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;children&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                                    <span class="attr">&quot;column&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">                                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;prop&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bghdsx&quot;</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;styles&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                                    <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#000&quot;</span><span class="punctuation">,</span></span><br><span class="line">                                    <span class="attr">&quot;fontSize&quot;</span><span class="punctuation">:</span> <span class="string">&quot;18px&quot;</span></span><br><span class="line">                                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;变更后的事项&quot;</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;collapse&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">                            <span class="punctuation">&#125;</span></span><br><span class="line">                        <span class="punctuation">]</span></span><br><span class="line">                    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;taskHandleItemCode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;11230000MB1846112W200011606000401&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure></li></ul><p>需求是取出JSON中的”formVersion”的值，这俩条JSON中第一条没有formVersion，而且clutterForm返回的是””,所以要对clutterForm进行校验，实例如下：<br><strong><span class='p red'>注意：在if判断中必须要加上 jsonObject.getJSONObject(data).get(clutterForm) instanceof JSONArray 校验clutterForm是否是一个JSONArray否则会报错</span></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 取出JSON中的&quot;formVersion&quot;的值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"> <span class="type">String</span> <span class="variable">json1</span> <span class="operator">=</span> <span class="string">&quot;&#123;\&quot;code\&quot;:200,\&quot;msg\&quot;:null,\&quot;data\&quot;:&#123;\&quot;basicForm\&quot;:[&#123;\&quot;formType\&quot;:\&quot;1\&quot;,\&quot;formVersion\&quot;:\&quot;73\&quot;,\&quot;emptyJson\&quot;:&#123;\&quot;contactMobile\&quot;:\&quot;\&quot;,\&quot;address\&quot;:\&quot;\&quot;,\&quot;contactCode\&quot;:\&quot;\&quot;,\&quot;contactName\&quot;:\&quot;\&quot;,\&quot;applyerName\&quot;:\&quot;\&quot;,\&quot;contactType\&quot;:\&quot;\&quot;,\&quot;applyerAreaCode\&quot;:\&quot;\&quot;,\&quot;applyerMobile\&quot;:\&quot;\&quot;,\&quot;applyerPageType\&quot;:\&quot;\&quot;,\&quot;applyerPageCode\&quot;:\&quot;\&quot;&#125;&#125;],\&quot;clutterForm\&quot;:\&quot;\&quot;&#125;&#125;&quot;</span>;</span><br><span class="line"> <span class="type">String</span> <span class="variable">json2</span> <span class="operator">=</span> <span class="string">&quot;&#123;\&quot;code\&quot;:200,\&quot;msg\&quot;:null,\&quot;data\&quot;:&#123;\&quot;basicForm\&quot;:[&#123;\&quot;formType\&quot;:\&quot;1\&quot;,\&quot;formVersion\&quot;:\&quot;73\&quot;,\&quot;emptyJson\&quot;:&#123;\&quot;contactMobile\&quot;:\&quot;\&quot;,\&quot;address\&quot;:\&quot;\&quot;,\&quot;contactCode\&quot;:\&quot;\&quot;,\&quot;contactName\&quot;:\&quot;\&quot;,\&quot;applyerName\&quot;:\&quot;\&quot;,\&quot;contactType\&quot;:\&quot;\&quot;,\&quot;applyerAreaCode\&quot;:\&quot;\&quot;,\&quot;applyerMobile\&quot;:\&quot;\&quot;,\&quot;applyerPageType\&quot;:\&quot;\&quot;,\&quot;applyerPageCode\&quot;:\&quot;\&quot;&#125;&#125;],\&quot;clutterForm\&quot;:[&#123;\&quot;formVersion\&quot;:\&quot;2\&quot;,\&quot;templateId\&quot;:\&quot;960b1dbd-0acc-4626-8a55-15ff0f1962b3\&quot;,\&quot;pcJson\&quot;:&#123;\&quot;submitBtn\&quot;:false,\&quot;emptyText\&quot;:\&quot;清空\&quot;,\&quot;column\&quot;:[&#123;\&quot;arrow\&quot;:false,\&quot;display\&quot;:true,\&quot;labelWidth\&quot;:\&quot;0px\&quot;,\&quot;type\&quot;:\&quot;title\&quot;,\&quot;children\&quot;:&#123;\&quot;column\&quot;:[]&#125;,\&quot;prop\&quot;:\&quot;yhzsx\&quot;,\&quot;styles\&quot;:&#123;\&quot;color\&quot;:\&quot;#000\&quot;,\&quot;fontSize\&quot;:\&quot;18px\&quot;&#125;,\&quot;value\&quot;:\&quot;原核准事项\&quot;,\&quot;collapse\&quot;:true&#125;,&#123;\&quot;arrow\&quot;:false,\&quot;display\&quot;:true,\&quot;labelWidth\&quot;:\&quot;0px\&quot;,\&quot;type\&quot;:\&quot;title\&quot;,\&quot;children\&quot;:&#123;\&quot;column\&quot;:[]&#125;,\&quot;prop\&quot;:\&quot;bghdsx\&quot;,\&quot;styles\&quot;:&#123;\&quot;color\&quot;:\&quot;#000\&quot;,\&quot;fontSize\&quot;:\&quot;18px\&quot;&#125;,\&quot;value\&quot;:\&quot;变更后的事项\&quot;,\&quot;collapse\&quot;:true&#125;]&#125;,\&quot;taskHandleItemCode\&quot;:\&quot;11230000MB1846112W200011606000401\&quot;&#125;]&#125;&#125;&quot;</span>;</span><br><span class="line"> List&lt;String&gt; resultList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"> resultList.add(json1);</span><br><span class="line"> resultList.add(json2);</span><br><span class="line"> <span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"> <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"> <span class="keyword">for</span> (String s : resultList) &#123;</span><br><span class="line">     jsonObject = JSON.parseObject(s);</span><br><span class="line">     <span class="type">String</span> <span class="variable">formVersion</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">     <span class="keyword">if</span> (jsonObject.containsKey(<span class="string">&quot;data&quot;</span>)</span><br><span class="line">             &amp;&amp; jsonObject.getJSONObject(<span class="string">&quot;data&quot;</span>).containsKey(<span class="string">&quot;clutterForm&quot;</span>)</span><br><span class="line">             &amp;&amp; jsonObject.getJSONObject(<span class="string">&quot;data&quot;</span>).get(<span class="string">&quot;clutterForm&quot;</span>) <span class="keyword">instanceof</span> JSONArray) &#123;</span><br><span class="line">         <span class="type">JSONArray</span> <span class="variable">clutterForm</span> <span class="operator">=</span> jsonObject.getJSONObject(<span class="string">&quot;data&quot;</span>).getJSONArray(<span class="string">&quot;clutterForm&quot;</span>);</span><br><span class="line">         <span class="keyword">if</span> (clutterForm != <span class="literal">null</span> &amp;&amp; clutterForm.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">             <span class="type">JSONObject</span> <span class="variable">formObject</span> <span class="operator">=</span> clutterForm.getJSONObject(<span class="number">0</span>);</span><br><span class="line">             formVersion = formObject.getString(<span class="string">&quot;formVersion&quot;</span>);</span><br><span class="line">         &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">             formVersion = <span class="string">&quot;&quot;</span>;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     System.out.println(<span class="string">&quot;第&quot;</span> + count + <span class="string">&quot;次version的值：&quot;</span> + formVersion);</span><br><span class="line">     count++;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>打印结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">第1次version的值：</span><br><span class="line">第2次version的值：2</span><br><span class="line"></span><br><span class="line">Process finished with exit code 0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> JSON </tag>
            
            <tag> JAVA开发笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>科学上网</title>
      <link href="/posts/812d49a5/"/>
      <url>/posts/812d49a5/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请微信联系管理员获取." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="231c59cac20720a78bd1913706428211a07d8c44f06a1d3681de77a1db767d35">1868d13fbeecd372b4e681d7356fd0bf37e58f44ee6038da56ca03904fd776b603efcf320979267338bf8ac141c1d8691308550f79884fe6afff1d08320be92c83560d411ad28b0b96b902aa223038354ae89014a6b8ab015ce9ecc70e649ad614b0fec5e5b7b2f6e668a0fb006308a8c8d43ef15bf6eda8c5b71b6824575f92a80e282394177b653943cacc40baf6dbb5aaa54213fee22a5e143a2f314f4312424407808aa0cfbba9b81f224ad34c8c03011693f05170298a5a6d56906190b04e2ae4b103e13b4d33e94ee43abbf86e2cad5d9bc44523b5235a960680c88a11c91443843a87d8048958e8dcf80d0f7b2430f469fe2bf25cfe64879b91ca251c54a62e8879109656331bebcf60107d9af298101f5bbb7c89ccd3033f3b5d3409496061edf161723f3178c273a43526dd5412d9596d074ea3dfde10086069110990d782a9498c82ab2329b908b7c92973b5a453f33afc7a3ccb77cfc840eb63098109d8705b12a9fbbff452828dbc6052ca0cc40852aa14a66330e3c3fb785bc72d488d9922e7a6a5f5896da7b85f02e9801b1518ac568e3885c71f448bf7da81e1f6772a86b88d2eadc14dd5346ef1212619becf37e80dd45d8979b977d1b4a02ed822313eba2abe6819b3fa34beff1abc3a6d8858876b8d30fab2bcea7a118245e7ba05462182c52e08bdfc22a809a3d13d6044d88860cc464ff8dc7e29cb942b41706e8e79d28b378e66cee8fb9f3f08d0332ca06eed43fe4e88201d24fda522c99c0aaa8b31384e95b9ffe0baa1696e989da838671315af4c8ae98ffb07546c7b9b4fbfb2bf4700b4018af29fc870aab8cf89387d88a3dd48803a1f6e57afab492e33c4a0cb044a5d3d9fabaddb662eb60c8bacab49d6221437cad4bd8a5cdd42cad73b3335300052e1730f8703c17cf8efb8892524824dc29cc9019efc549386d598feca931d173db9784e6f8334f2df5d807cb061858a41cccce0cca63f457e9a36d2d369453958e79937dff6d5368d99c676d9bbf926506c16841e9cb86d6176eb9751134c1a62525d4a0e6e99f8b1c9d23eff4ac6b34c00e05c7ec790aaf7eb86c9c306c8d104d2b2414646be4834fbb188f5a4b28e15942e5ff21fa5c9caf93270d16c63669d668f1c9656c4d569035cb01c1113f94a764b5998958d84d22579009b23f14d1507e742e8e5be9927f4983c94d976a1ca19c87777eaee98136df2e3395f8409c3815249967e3c41abcf9ba25375a2a021a5d46334c83ef3770932e1b76a50f263a296f41b3091f291fa2d34f3922f1cc10302d43e5d0c41e20dfa38f73c86ba61ccb8d83b313cafabec7e172afe911a14a8228b49314e865f7de0242c8b5c8722d8a042b6503ec7921464cfbed87435634e6df42cd9e7e76c192fe3d468f23022d7a1c2176cb07ef92314c99ddb151ac3e8f4899e569a365dbbf277f7f1c417e64828ff083532ea8384ab6591abd7781911c89630c95f1666dcd7e1d0732ea9868f7a7036ee5c228cd298969de2493dd4e956d2333a718d349d574dae8afd40e0007dc44fa6a03514d65c56ccfd50d412a3fe33ca0e31092795dc59a2d74fedb805ed97f1f24fc5b5aa4a29f494d9c149c12ae8489693a370124041eca4ce8e7d53bb39f14036c4f83547471ece1fe3fcbc3f944fbe0b0783bae391a732734d877952af4b95959e9b5d03830156134c00d5afd76a96250c8881302fa2d1e27dfa33574335af3ff711302ec646616b57ba2a109ea72588f3596a7a6fe1b9dbc378faf61ec26b839b7513b04ed6959884fc676b91f9422232238c4264d96a970328c62e7c501d3e07618fd2b6c624a9167207781fc553fa</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-up">      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-up">您好, 这里需要密码, 请微信联系博主获取.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 软件工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> vpn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mybatis使用@Insert批量插入</title>
      <link href="/posts/3d4e846e/"/>
      <url>/posts/3d4e846e/</url>
      
        <content type="html"><![CDATA[<p>有时候项目中没有配置xml文件，需要使用 <strong>@Insert</strong> 注解批量插入list集合，插入方法如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Insert(&quot;&lt;script&gt;&quot; +</span></span><br><span class="line"><span class="meta">  &quot;INSERT INTO t_user&quot; +</span></span><br><span class="line"><span class="meta">        &quot;        (pack_key,image_file,emojis)&quot; +</span></span><br><span class="line"><span class="meta">        &quot;        VALUES&quot; +</span></span><br><span class="line"><span class="meta">        &quot;        &lt;foreach collection =&#x27;list&#x27; item=&#x27;user&#x27; separator =&#x27;,&#x27;&gt;&quot; +</span></span><br><span class="line"><span class="meta">        &quot;            (#&#123;user.packKey&#125;, #&#123;user.imageFile&#125;, #&#123;user.emojis&#125;)&quot; +</span></span><br><span class="line"><span class="meta">        &quot;        &lt;/foreach &gt;&quot; +</span></span><br><span class="line"><span class="meta">        &quot;&lt;/script&gt;&quot;)</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">insertUsers</span><span class="params">(<span class="meta">@Param(&quot;list&quot;)</span> List&lt;User&gt; users)</span>;</span><br></pre></td></tr></table></figure><p>注意：@Param(“list”) 引号中和foreach标签中 collection 属性值<strong>必须写list</strong>，否则报错。item属性值写实体类的类名，<strong>首字母必须小写</strong><br>如果项目需要在Impl中写批量插入，引入mybatisplus的情况下可以直接调用**saveBathch()**方法，代码片段：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//****</span></span><br><span class="line"><span class="keyword">if</span>(ares&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> Result.error();</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">   <span class="type">boolean</span> <span class="variable">mflag</span> <span class="operator">=</span> <span class="built_in">this</span>.saveBatch(mlist);<span class="comment">//批量插入</span></span><br><span class="line">   <span class="keyword">return</span> mflag ? Result.ok(); : Result.error();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//****  </span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> mybatis </tag>
            
            <tag> JAVA开发笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>fastjson常用方法实例</title>
      <link href="/posts/a03a6685/"/>
      <url>/posts/a03a6685/</url>
      
        <content type="html"><![CDATA[<h3 id="Map转JSON字符串"><a href="#Map转JSON字符串" class="headerlink" title="Map转JSON字符串"></a>Map转JSON字符串</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将Map转Json字符串</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">()</span> &#123;</span><br><span class="line">    Map&lt;String, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, Object&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;key1&quot;</span>, <span class="string">&quot;One&quot;</span>);</span><br><span class="line">    map.put(<span class="string">&quot;key2&quot;</span>, <span class="string">&quot;Two&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">mapJson</span> <span class="operator">=</span> JSON.toJSONString(map);</span><br><span class="line">    System.out.println(mapJson);<span class="comment">//输出：&#123;&quot;key1&quot;:&quot;One&quot;,&quot;key2&quot;:&quot;Two&quot;&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="POJO-List转JSON字符串"><a href="#POJO-List转JSON字符串" class="headerlink" title="POJO List转JSON字符串"></a>POJO List转JSON字符串</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将Java Bean List转Json字符串</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test6</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">Person</span> <span class="variable">person1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">    person1.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    person1.setAge(<span class="number">28</span>);</span><br><span class="line">    person1.setBirthday(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line"> </span><br><span class="line">    <span class="type">Person</span> <span class="variable">person2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">    person2.setName(<span class="string">&quot;李四&quot;</span>);</span><br><span class="line">    person2.setAge(<span class="number">25</span>);</span><br><span class="line">    person2.setBirthday(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line"> </span><br><span class="line">    List&lt;Person&gt; persons = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Person&gt;();</span><br><span class="line">    persons.add(person1);</span><br><span class="line">    persons.add(person2);</span><br><span class="line"> </span><br><span class="line">    <span class="type">String</span> <span class="variable">object</span> <span class="operator">=</span> JSON.toJSONString(persons);</span><br><span class="line">    System.out.println(object);</span><br><span class="line">    <span class="comment">/**输出如下：</span></span><br><span class="line"><span class="comment">     * [&#123;&quot;age&quot;:28,&quot;birthday&quot;:1530511546991,&quot;name&quot;:&quot;张三&quot;&#125;,    </span></span><br><span class="line"><span class="comment">        &#123;&quot;age&quot;:25,&quot;birthday&quot;:1530511546991,&quot;name&quot;:&quot;李四&quot;&#125;]</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="JSON字符串转JsonObject"><a href="#JSON字符串转JsonObject" class="headerlink" title="JSON字符串转JsonObject"></a>JSON字符串转JsonObject</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将Json字符串转为JsonObject对象</span></span><br><span class="line"><span class="comment"> * 取值不存在时，返回null,使用Gson会抛异常</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test2</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">jsonStr</span> <span class="operator">=</span> <span class="string">&quot;&#123;\&quot;key1\&quot;:\&quot;One\&quot;,\&quot;key2\&quot;:\&quot;110\&quot;&#125;&quot;</span>;</span><br><span class="line">    <span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> JSONObject.parseObject(jsonStr);</span><br><span class="line">    System.out.println(jsonObject.getString(<span class="string">&quot;key1&quot;</span>));<span class="comment">//输出one</span></span><br><span class="line">    System.out.println(jsonObject.getInteger(<span class="string">&quot;key2&quot;</span>));<span class="comment">//输出110</span></span><br><span class="line">    System.out.println(jsonObject.getString(<span class="string">&quot;key3&quot;</span>));<span class="comment">//输出null</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="JsonObject转Json字符串"><a href="#JsonObject转Json字符串" class="headerlink" title="JsonObject转Json字符串"></a>JsonObject转Json字符串</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将JsonObject对象转为Json字符串</span></span><br><span class="line"><span class="comment"> * 取值不存在时，返回null,使用Gson会抛异常</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test3</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">jsonStr</span> <span class="operator">=</span> <span class="string">&quot;&#123;\&quot;key1\&quot;:\&quot;One\&quot;,\&quot;key2\&quot;:\&quot;110\&quot;&#125;&quot;</span>;</span><br><span class="line">    <span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> JSONObject.parseObject(jsonStr);</span><br><span class="line">    System.out.println(jsonObject.getString(<span class="string">&quot;key1&quot;</span>));<span class="comment">//输出：one</span></span><br><span class="line">    System.out.println(jsonObject.getInteger(<span class="string">&quot;key2&quot;</span>));<span class="comment">//输出：110</span></span><br><span class="line">    System.out.println(jsonObject.getString(<span class="string">&quot;key3&quot;</span>));<span class="comment">//输出：null</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">parserJsonStr</span> <span class="operator">=</span> JSONObject.toJSONString(jsonObject);</span><br><span class="line">    System.out.println(parserJsonStr);<span class="comment">//输出：&#123;&quot;key1&quot;:&quot;One&quot;,&quot;key2&quot;:&quot;110&quot;&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="JsonArray添加JsonObject"><a href="#JsonArray添加JsonObject" class="headerlink" title="JsonArray添加JsonObject"></a>JsonArray添加JsonObject</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将JsonObject添加到JsonArray</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test4</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">JSONObject</span> <span class="variable">jsonObject1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">    jsonObject1.put(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    jsonObject1.put(<span class="string">&quot;age&quot;</span>, <span class="number">25</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="type">JSONObject</span> <span class="variable">jsonObject2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">    jsonObject2.put(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;李四&quot;</span>);</span><br><span class="line">    jsonObject2.put(<span class="string">&quot;age&quot;</span>, <span class="number">28</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="type">JSONArray</span> <span class="variable">jsonArray</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONArray</span>();</span><br><span class="line">    jsonArray.add(jsonObject1);</span><br><span class="line">    jsonArray.add(jsonObject2);</span><br><span class="line"> </span><br><span class="line">    <span class="type">String</span> <span class="variable">jsonArrStr</span> <span class="operator">=</span> JSONArray.toJSONString(jsonArray);</span><br><span class="line">    System.out.println(jsonArrStr);<span class="comment">//输出：[&#123;&quot;name&quot;:&quot;张三&quot;,&quot;age&quot;:25&#125;,&#123;&quot;name&quot;:&quot;李四&quot;,&quot;age&quot;:28&#125;]</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Json数组字符串转JsonArray"><a href="#Json数组字符串转JsonArray" class="headerlink" title="Json数组字符串转JsonArray"></a>Json数组字符串转JsonArray</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将Json数组字符串转JsonArray</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test5</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">jsonArrStr</span> <span class="operator">=</span> <span class="string">&quot;[&#123;\&quot;name\&quot;:\&quot;张三\&quot;,\&quot;age\&quot;:25&#125;,&#123;\&quot;name\&quot;:\&quot;李四\&quot;,\&quot;age\&quot;:28&#125;]&quot;</span>;</span><br><span class="line">    <span class="type">JSONArray</span> <span class="variable">jsonArray</span> <span class="operator">=</span> JSONArray.parseArray(jsonArrStr);</span><br><span class="line">    <span class="keyword">for</span> (Object object : jsonArray) &#123;</span><br><span class="line">        <span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> (JSONObject) object;</span><br><span class="line">        System.out.println(jsonObject.getString(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">        System.out.println(jsonObject.getString(<span class="string">&quot;age&quot;</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;--------------&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="POJO转Json字符串"><a href="#POJO转Json字符串" class="headerlink" title="POJO转Json字符串"></a>POJO转Json字符串</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将Java Bean 转Json字符串</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test7_2</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">Person</span> <span class="variable">person1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">    person1.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    person1.setAge(<span class="number">26</span>);</span><br><span class="line">    person1.setBirthday(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**两种方式都行</span></span><br><span class="line"><span class="comment">     * 因为JSONObject继承了JSON*/</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">object</span> <span class="operator">=</span> JSONObject.toJSONString(person1);</span><br><span class="line">    <span class="comment">/*String object = JSON.toJSONString(person1);*/</span></span><br><span class="line"> </span><br><span class="line">    System.out.println(object);</span><br><span class="line">    <span class="comment">/**输出如下：</span></span><br><span class="line"><span class="comment">     * &#123;&quot;age&quot;:26,&quot;birthday&quot;:1530511790302,&quot;name&quot;:&quot;张三&quot;&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="POJO转JsonObject"><a href="#POJO转JsonObject" class="headerlink" title="POJO转JsonObject"></a>POJO转JsonObject</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将Java Bean 转Json 对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test8</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">Person</span> <span class="variable">person1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">    person1.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    person1.setAge(<span class="number">28</span>);</span><br><span class="line">    person1.setBirthday(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**方式一*/</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">jsonStr</span> <span class="operator">=</span> JSONObject.toJSONString(person1);</span><br><span class="line">    <span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> JSONObject.parseObject(jsonStr);</span><br><span class="line">    System.out.println(jsonObject.get(<span class="string">&quot;name&quot;</span>));<span class="comment">//输出：张三</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**方式二*/</span></span><br><span class="line">    <span class="type">JSONObject</span> <span class="variable">jsonObject1</span> <span class="operator">=</span> (JSONObject)JSONObject.toJSON(person1);</span><br><span class="line">    System.out.println(jsonObject1.get(<span class="string">&quot;age&quot;</span>));<span class="comment">//输出：28</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="POJO-List转JsonArray"><a href="#POJO-List转JsonArray" class="headerlink" title="POJO List转JsonArray"></a>POJO List转JsonArray</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将Java Bean List 转Json 数组</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test9</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">Person</span> <span class="variable">person1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">    person1.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    person1.setAge(<span class="number">28</span>);</span><br><span class="line">    person1.setBirthday(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line"> </span><br><span class="line">    <span class="type">Person</span> <span class="variable">person2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">    person2.setName(<span class="string">&quot;李四&quot;</span>);</span><br><span class="line">    person2.setAge(<span class="number">25</span>);</span><br><span class="line">    person2.setBirthday(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line"> </span><br><span class="line">    List&lt;Person&gt; persons = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Person&gt;();</span><br><span class="line">    persons.add(person1);</span><br><span class="line">    persons.add(person2);</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**方式1*/</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">jsonArrStr</span> <span class="operator">=</span> JSONArray.toJSONString(persons);</span><br><span class="line">    <span class="type">JSONArray</span> <span class="variable">jsonArray</span> <span class="operator">=</span> JSONArray.parseArray(jsonArrStr);</span><br><span class="line">    <span class="type">JSONObject</span> <span class="variable">jsonObject1</span> <span class="operator">=</span> (JSONObject)jsonArray.get(<span class="number">0</span>);</span><br><span class="line">    System.out.println(jsonObject1.get(<span class="string">&quot;name&quot;</span>));<span class="comment">//输出：张三</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**方式2*/</span></span><br><span class="line">    <span class="type">JSONArray</span> <span class="variable">jsonArray1</span> <span class="operator">=</span> (JSONArray)JSONArray.toJSON(persons);</span><br><span class="line">    <span class="type">JSONObject</span> <span class="variable">jsonObject2</span> <span class="operator">=</span> (JSONObject)jsonArray1.get(<span class="number">1</span>);</span><br><span class="line">    System.out.println(jsonObject2.get(<span class="string">&quot;name&quot;</span>));<span class="comment">//输出：李四</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="JSON字符串转-Map-与-POJO"><a href="#JSON字符串转-Map-与-POJO" class="headerlink" title="JSON字符串转 Map 与 POJO"></a>JSON字符串转 Map 与 POJO</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> <span class="string">&quot;&#123;\&quot;PARENT_ID\&quot;:1,\&quot;NAME\&quot;:\&quot;国家级正职\&quot;,\&quot;CODE\&quot;:\&quot;101\&quot;,\&quot;LEVEL_NUM\&quot;:2,\&quot;ID\&quot;:2&#125;&quot;</span>;</span><br><span class="line">        <span class="type">Map</span> <span class="variable">map</span> <span class="operator">=</span> JSONObject.parseObject(content, Map.class);<span class="comment">//json 对象转 map</span></span><br><span class="line">        System.out.println(map);</span><br><span class="line">        <span class="comment">//输出：&#123;CODE=101, LEVEL_NUM=2, ID=2, PARENT_ID=1, NAME=国家级正职&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将Json 对象 转 Java Bean</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test10</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">Person</span> <span class="variable">person1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">    person1.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    person1.setAge(<span class="number">28</span>);</span><br><span class="line">    person1.setBirthday(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line"> </span><br><span class="line">    <span class="type">String</span> <span class="variable">jsonPOJOStr</span> <span class="operator">=</span> JSON.toJSONString(person1);</span><br><span class="line">    <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> JSONObject.parseObject(jsonPOJOStr, Person.class);</span><br><span class="line">    System.out.println(person);</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 输出：Person&#123;age=28, name=&#x27;张三&#x27;, birthday=Mon Jul 02 14:27:53 CST 2018&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="字符串Json数组转List"><a href="#字符串Json数组转List" class="headerlink" title="字符串Json数组转List"></a>字符串Json数组转List</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test2</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> <span class="string">&quot;[&#123;\&quot;PARENT_ID\&quot;:1,\&quot;NAME\&quot;:\&quot;国家级正职 </span></span><br><span class="line"><span class="string">        \&quot;,\&quot;CODE\&quot;:\&quot;101\&quot;,\&quot;LEVEL_NUM\&quot;:2,\&quot;ID\&quot;:2&#125;,</span></span><br><span class="line"><span class="string">        &#123;\&quot;PARENT_ID\&quot;:1,\&quot;NAME\&quot;:\&quot;国家级副职</span></span><br><span class="line"><span class="string">        \&quot;,\&quot;CODE\&quot;:\&quot;102\&quot;,\&quot;LEVEL_NUM\&quot;:2,\&quot;ID\&quot;:3&#125;]&quot;</span>;</span><br><span class="line">        <span class="comment">//parseArray(String text, Class&lt;T&gt; clazz)：clazz 指定 list 中的元素类型</span></span><br><span class="line">        List&lt;Map&gt; mapList = JSONArray.parseArray(content, Map.class);</span><br><span class="line">        <span class="comment">//json 转 List&lt;Map&gt;</span></span><br><span class="line">        System.out.println(mapList);</span><br><span class="line">    &#125;</span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将Json 数组 转 Java List</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test11</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">jsonArrPOJOStr</span> <span class="operator">=</span> <span class="string">&quot;[&#123;\&quot;birthday\&quot;:1530512954968,\&quot;name\&quot;:\&quot;张三</span></span><br><span class="line"><span class="string">        \&quot;,\&quot;age\&quot;:28&#125;,&quot;</span> +</span><br><span class="line">    <span class="string">&quot;&#123;\&quot;birthday\&quot;:1530512954968,\&quot;name\&quot;:\&quot;李四\&quot;,\&quot;age\&quot;:25&#125;]&quot;</span>;</span><br><span class="line">    List&lt;Person&gt; personList = JSONArray.parseArray(jsonArrPOJOStr, Person.class);</span><br><span class="line">    <span class="keyword">for</span> (Person person : personList) &#123;</span><br><span class="line">        System.out.println(person);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 输出：</span></span><br><span class="line"><span class="comment">     * Person&#123;age=28, name=&#x27;张三&#x27;, birthday=Mon Jul 02 14:29:14 CST 2018&#125;</span></span><br><span class="line"><span class="comment">     * Person&#123;age=25, name=&#x27;李四&#x27;, birthday=Mon Jul 02 14:29:14 CST 2018&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> JSON </tag>
            
            <tag> JAVA开发笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mybatis-plus常用注释</title>
      <link href="/posts/3ff382cd/"/>
      <url>/posts/3ff382cd/</url>
      
        <content type="html"><![CDATA[<h3 id="TableName"><a href="#TableName" class="headerlink" title="@TableName"></a>@TableName</h3><p>实体类的名字是User，数据库表名是t_user</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableName(value = &quot;t_user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="TableId"><a href="#TableId" class="headerlink" title="@TableId"></a>@TableId</h3><p>实体类的属性名是 id，数据库的列名是 uid，此时使用 value 属性将属性名映射到列名</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableId(value = &quot;uid&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String id;</span><br></pre></td></tr></table></figure><h3 id="type属性用来定义主键策略"><a href="#type属性用来定义主键策略" class="headerlink" title="type属性用来定义主键策略"></a>type属性用来定义主键策略</h3><ul><li>IdType.ASSIGN_ID <strong>使用基于雪花算法的策略生成数据id, <span class='p red'>注意：当对象的id被明确赋值时，不会使用雪花算法</span></strong> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableId(type = IdType.ASSIGN_ID)</span></span><br><span class="line"><span class="keyword">private</span> Long id;</span><br></pre></td></tr></table></figure></li><li>IdType.AUTO <strong>使用数据库的自增策略 <span class='p red'>注意：该类型请确保数据库设置了 ID自增 否则无效</span></strong><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableId(type = IdType.AUTO)</span></span><br><span class="line"><span class="keyword">private</span> Long id;</span><br></pre></td></tr></table></figure></li><li>全局配置 <strong>要想影响所有实体的配置，可以设置全局主键配置</strong><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#全局设置主键生成策略</span></span><br><span class="line"><span class="string">mybatis-plus.global-config.db-config.id-type=auto</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="TableField"><a href="#TableField" class="headerlink" title="@TableField"></a>@TableField</h3><p>功能同TableId的value属性,exist属性用于非数据库中的字段，用于想额外返回给前台表之外的值</p><span class='p red'>注意：MP会自动将数据库中的下划线命名风格转化为实体类中的驼峰命名风格</span><p><strong>例如，</strong>数据库中的列 create_time 和 update_time 自动对应实体类中的 createTime 和 updateTime</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableField(exist = false)</span> <span class="comment">//注明非数据库字段属性 实体类上使用</span></span><br><span class="line"><span class="keyword">private</span> String abc;</span><br><span class="line"><span class="meta">@TableField(value = &quot;数据库中字段名字&quot;)</span><span class="comment">// 实体的名字对应数据库中字段名字 用于实体名字和数据库名字不一样的情况   </span></span><br><span class="line"><span class="keyword">private</span> LocalDateTime createTime;<span class="comment">//对应数据库字段create_time</span></span><br></pre></td></tr></table></figure><h3 id="自动填充"><a href="#自动填充" class="headerlink" title="自动填充"></a>自动填充</h3><p>项目中经常会遇到一些数据，每次都使用相同的方式填充，例如记录的创建时间，更新时间等。我们可以使用MyBatis Plus的自动填充功能，完成这些字段的赋值工作。<br><strong>例如，</strong>阿里巴巴的开发手册中建议每个数据库表必须要有create_time 和 update_time字段，我们可以使用自动填充功能维护这两个字段</p><ol><li><strong>添加fill属性</strong><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line"><span class="keyword">private</span> LocalDateTime createTime;</span><br><span class="line"></span><br><span class="line"><span class="meta">@TableField(fill = FieldFill.INSERT_UPDATE)</span></span><br><span class="line"><span class="keyword">private</span> LocalDateTime updateTime;</span><br></pre></td></tr></table></figure></li><li><strong>实现元对象处理器接口 -&gt; 创建handler包，创建MyMetaObjectHandler类 <span class='p red'>不要忘记添加 @Component 注解</span></strong><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.mybatisplus.handler;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyMetaObjectHandler</span> <span class="keyword">implements</span> <span class="title class_">MetaObjectHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insertFill</span><span class="params">(MetaObject metaObject)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;start insert fill ....&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.strictInsertFill(metaObject, <span class="string">&quot;createTime&quot;</span>, LocalDateTime.class, LocalDateTime.now());</span><br><span class="line">        <span class="built_in">this</span>.strictInsertFill(metaObject, <span class="string">&quot;updateTime&quot;</span>, LocalDateTime.class, LocalDateTime.now());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateFill</span><span class="params">(MetaObject metaObject)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;start update fill ....&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.strictUpdateFill(metaObject, <span class="string">&quot;updateTime&quot;</span>, LocalDateTime.class, LocalDateTime.now());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="TableLogic"><a href="#TableLogic" class="headerlink" title="@TableLogic"></a>@TableLogic</h3><p><strong>逻辑删除</strong></p><ul><li>物理删除：真实删除，将对应数据从数据库中删除，之后查询不到此条被删除的数据</li><li>逻辑删除：假删除，将对应数据中代表是否被删除字段的状态修改为“被删除状态”，之后在数据库中仍旧能看到此条数据记录<br>使用场景：可以进行数据恢复</li></ul><ol><li>数据库中创建逻辑删除状态列<br><img src="/img/article/20231006/3.png"></li><li>实体类中添加逻辑删除属性<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableLogic</span></span><br><span class="line"><span class="meta">@TableField(value = &quot;is_deleted&quot;)</span></span><br><span class="line"><span class="keyword">private</span> Integer deleted;</span><br></pre></td></tr></table></figure></li></ol><h3 id="分页插件和乐观锁插件"><a href="#分页插件和乐观锁插件" class="headerlink" title="分页插件和乐观锁插件"></a>分页插件和乐观锁插件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisPlusConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 实现分页配置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> MybatisPlusInterceptor <span class="title function_">mybatisPlusInterceptor</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">MybatisPlusInterceptor</span> <span class="variable">interceptor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MybatisPlusInterceptor</span>();</span><br><span class="line">        interceptor.addInnerInterceptor(<span class="keyword">new</span> <span class="title class_">OptimisticLockerInnerInterceptor</span>());   <span class="comment">//    注册乐观锁插件</span></span><br><span class="line">        interceptor.addInnerInterceptor(<span class="keyword">new</span> <span class="title class_">PaginationInnerInterceptor</span>());    <span class="comment">// 分页插件</span></span><br><span class="line">        <span class="keyword">return</span> interceptor;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> JAVA开发笔记 </tag>
            
            <tag> mybatis-plus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>@JsonSerialize使用方法</title>
      <link href="/posts/f0e131fd/"/>
      <url>/posts/f0e131fd/</url>
      
        <content type="html"><![CDATA[<p>举个🌰，比如一张表中的时间，数据库中存储的是yyy-mm-dd hh:mm:ss 这样的形式，而前段需要的是精确到秒的格式，那我们不可能直接把这种格式的数据直接返回给前端吧？！</p><p>除了使用自定义工具类，还有一种方法更直接，那就是使用@JsonSerialize（com.fasterxml.jackson.databind.annotation.JsonSerialize）注解。</p><p><strong>使用步骤：</strong></p><ol><li>在实体类中在要转换的字段上加上该注解，如下：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">/** 订单创建时间 */</span></span><br><span class="line"><span class="meta">@JsonSerialize(using = DateToLongSerializer.class)</span></span><br><span class="line"><span class="keyword">private</span> Date createTiem;</span><br></pre></td></tr></table></figure></li><li>并指定一个格式化的类。如下：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DateToLongSerializer</span> <span class="keyword">extends</span> <span class="title class_">JsonSerializer</span>&lt;Date&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Date date, JsonGenerator jsonGenerator, SerializerProvider serializerProvider)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        jsonGenerator.writeNumber(date.getTime() / <span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>数据库中的格式<br><img src="/img/article/20231006/1.png"></li><li>转换之后的格式<br><img src="/img/article/20231006/2.png"></li></ol>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> JAVA开发笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络代理工具/节点</title>
      <link href="/posts/94722/"/>
      <url>/posts/94722/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请微信联系管理员获取." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="dfcdb67537f42c55c2dc41e4d6cffc4c4ac48d5531b387e6bde5382a813f3d94"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-up">      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-up">您好, 这里需要密码, 请微信联系博主获取.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 软件工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> vpn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实用软件分享(系统美化类)</title>
      <link href="/posts/3044f11e/"/>
      <url>/posts/3044f11e/</url>
      
        <content type="html"><![CDATA[<div class="note blue anzhiyufont anzhiyu-icon-bullhorn simple"><p>分享日常中实用的工具软件 有需要的小伙伴快去<strong>软件获取</strong>中下载吧</p></div><h3 id="Windows禁止更新"><a href="#Windows禁止更新" class="headerlink" title="Windows禁止更新"></a>Windows禁止更新</h3><p>一键禁用烦人的 <strong>Windows</strong> 自动更新，安装以后，如果是英文，可以在 <strong>“Help”</strong> 里切换语言为简体中文。<br>操作很简单，想要禁止更新，直接点 <strong>阻止Windows Updates</strong> 即可。<br><img src="/img/article/20230812/28.jpg"><br><img src="/img/article/20230812/29.jpg"></p><h4 id="软件获取"><a href="#软件获取" class="headerlink" title="软件获取"></a>软件获取</h4><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://fu99999.lanzoue.com/i7a310zi74af">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://assets.woozooo.com/assets/favicon.ico);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Windows禁止更新</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><h3 id="自动关机小工具"><a href="#自动关机小工具" class="headerlink" title="自动关机小工具"></a>自动关机小工具</h3><p>好用的自动关机程序！比用命令 <strong>shutdown</strong> 实现的功能要全很多。<br><img src="/img/article/20230812/30.jpg"></p><h4 id="软件获取-1"><a href="#软件获取-1" class="headerlink" title="软件获取"></a>软件获取</h4><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://fu99999.lanzoue.com/iMRYE0zi74yj">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://assets.woozooo.com/assets/favicon.ico);"></div>        <div class="tag-link-right">            <div class="tag-link-title">自动关机工具</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><h3 id="软媒桌面"><a href="#软媒桌面" class="headerlink" title="软媒桌面"></a>软媒桌面</h3><p>软媒桌面是由软媒开发的一款桌面软件，它主要功能可以帮助用户快速访问应用程序、网站等等，界面非常漂亮，也可以用于美化你的<strong>Windows</strong>，有点类似于<strong>dock</strong>条，相信有不少用户喜欢，这里分享的是软媒桌面独立绿色版<br><img src="/img/article/20230812/31.jpg"><br><img src="/img/article/20230812/32.jpg"></p><h4 id="软件获取-2"><a href="#软件获取-2" class="headerlink" title="软件获取"></a>软件获取</h4><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://fu99999.lanzoue.com/iQoHG0ylvwrg">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://assets.woozooo.com/assets/favicon.ico);"></div>        <div class="tag-link-right">            <div class="tag-link-title">软媒桌面</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><p><strong><span class='p red'>本文来自网络收集，如有侵权请联系删除。</span></strong></p>]]></content>
      
      
      <categories>
          
          <category> 软件工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Office全版本激活教程</title>
      <link href="/posts/36436/"/>
      <url>/posts/36436/</url>
      
        <content type="html"><![CDATA[<h2 id="Office-Tool-Plus"><a href="#Office-Tool-Plus" class="headerlink" title="Office Tool Plus"></a>Office Tool Plus</h2><h3 id="软件介绍"><a href="#软件介绍" class="headerlink" title="软件介绍"></a>软件介绍</h3><p><strong>Office Tool Plus 这是一款支持在线安装并激活Office各个版本的软件，免安装，双击“exe”运行程序即可打开软件。下载地址在文章末尾。</strong> </p><h3 id="激活教程"><a href="#激活教程" class="headerlink" title="激活教程"></a>激活教程</h3><ol><li><strong>进入软件后,点击左侧的“部署”按钮，按照图片步骤选择自己要安装的软件和版本下一步即可。</strong><br><img src="/img/article/20231004/1.jpg"><br><img src="/img/article/20231004/2.jpg"></li><li><strong>返回到顶部点击右上角的“开始部署”按钮即可开始安装。</strong><br><img src="/img/article/20231004/3.jpg"><br><strong>一般来说在安装完Office就会自动激活，无需我们在手动激活，打开Office就可以直接使用。</strong><br><img src="/img/article/20231004/4.jpg"><br><img src="/img/article/20231004/5.jpg"><br><strong>但如果你发现安装完成后并没有激活Office,我们可以用HEU_KMS_Activator全能激活神器再次手动激活，其实Office Tool Plus工具中也有手动激活的办法，但是需要自己配KMS服务操作繁琐，而且不能百分之百激活成功，这里就不做过多演示了。</strong></li></ol><h2 id="HEU-KMS-Activator"><a href="#HEU-KMS-Activator" class="headerlink" title="HEU_KMS_Activator"></a>HEU_KMS_Activator</h2><h3 id="软件介绍-1"><a href="#软件介绍-1" class="headerlink" title="软件介绍"></a>软件介绍</h3><p><strong>下载完成后打开软件，在智能激活中选择想要激活的软件即可完成激活，适用所有Windows, Office版本，无需联网即可一键激活，支持UEFI的KMS激活工具。</strong><br><img src="/img/article/20231004/6.jpg"></p><h2 id="软件下载地址"><a href="#软件下载地址" class="headerlink" title="软件下载地址"></a>软件下载地址</h2><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://pan.baidu.com/s/13sXDu5Zanj2Zy3-DGdHGCg?pwd=6p9q">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://pan.baidu.com/m-static/base/static/images/favicon.ico);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Office Tool Plus</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://pan.baidu.com/s/1QO4zgXIGmzoc2Bi43VOpEA?pwd=15rp">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://pan.baidu.com/m-static/base/static/images/favicon.ico);"></div>        <div class="tag-link-right">            <div class="tag-link-title">HEU_KMS_Activator</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><p><strong><span class='p red'>本文来自网络收集，如有侵权请联系删除。有条件的小伙伴建议使用正版更好。</span></strong></p>]]></content>
      
      
      <categories>
          
          <category> 软件工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> 激活教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实用软件分享(影音,浏览器插件类)</title>
      <link href="/posts/9fc978a2/"/>
      <url>/posts/9fc978a2/</url>
      
        <content type="html"><![CDATA[<div class="note blue anzhiyufont anzhiyu-icon-bullhorn simple"><p>分享日常中实用的工具软件 有需要的小伙伴快去<strong>软件获取</strong>中下载吧</p></div><h3 id="LX-music"><a href="#LX-music" class="headerlink" title="LX music"></a>LX music</h3><p>落雪音乐，一款支持多个音乐平台免费听歌的软件，而且还支持无损下载，PC、MAC、手机安卓都可用，界面干净无广告。<br><img src="/img/article/20230812/1.jpg"></p><h4 id="软件获取"><a href="#软件获取" class="headerlink" title="软件获取"></a>软件获取</h4><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.lanzoui.com/b0bf2cfa">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://assets.woozooo.com/assets/favicon.ico);"></div>        <div class="tag-link-right">            <div class="tag-link-title">LX music</div>            <div class="tag-link-sitename">密码:glqw</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><h3 id="酷我音乐会员版"><a href="#酷我音乐会员版" class="headerlink" title="酷我音乐会员版"></a>酷我音乐会员版</h3><p>开袋即食，解压直接使用即可，会员歌曲全部解锁可下载高音质歌曲。<br><img src="/img/article/20230812/2.jpg"></p><h4 id="软件获取-1"><a href="#软件获取-1" class="headerlink" title="软件获取"></a>软件获取</h4><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://fu99999.lanzoue.com/iAMNn1830j5c">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://assets.woozooo.com/assets/favicon.ico);"></div>        <div class="tag-link-right">            <div class="tag-link-title">酷我音乐会员版</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><h3 id="迅雷X-10-1"><a href="#迅雷X-10-1" class="headerlink" title="迅雷X_10.1"></a>迅雷X_10.1</h3><p>软件去掉了很多不必要的功能，界面只剩下下载的功能，且登录以后软件即是V1P10了。<br><img src="/img/article/20230812/3.jpg"><br><img src="/img/article/20230812/4.jpg"></p><h4 id="软件获取-2"><a href="#软件获取-2" class="headerlink" title="软件获取"></a>软件获取</h4><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://fu99999.lanzoue.com/iom9d0ylw0oh">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://assets.woozooo.com/assets/favicon.ico);"></div>        <div class="tag-link-right">            <div class="tag-link-title">迅雷X_10.1</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><h3 id="抖音采集工具"><a href="#抖音采集工具" class="headerlink" title="抖音采集工具"></a>抖音采集工具</h3><p><strong>抖音采集工具</strong> 由吾爱大佬破解的抖音采集工具，复制抖音链接即可下载无水印原视频，支持批量下载。<br><img src="/img/article/20230812/5.jpg"></p><h4 id="软件获取-3"><a href="#软件获取-3" class="headerlink" title="软件获取"></a>软件获取</h4><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://pan.baidu.com/s/19A-TsMJjXgsiyJkr6-25QQ?pwd=5y7i">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://pan.baidu.com/m-static/base/static/images/favicon.ico);"></div>        <div class="tag-link-right">            <div class="tag-link-title">抖音采集工具</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://fu99999.lanzoue.com/iodoG1bgjgrg">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://assets.woozooo.com/assets/favicon.ico);"></div>        <div class="tag-link-right">            <div class="tag-link-title">短视频去水印</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://api.spapi.cn/dsp.html">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/api.spapi.cn/dsp.html.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">短视频-解析去水印平台</div>            <div class="tag-link-sitename">接口地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><h3 id="v5多开器"><a href="#v5多开器" class="headerlink" title="v5多开器"></a>v5多开器</h3><p><strong>v5多开器</strong> 除了多开WX外，其他的软件也可以多开，方法是把软件图标拖入到软件中，再点击【隔离打开程序】即可。<br><img src="/img/article/20230812/6.jpg"></p><h4 id="软件获取-4"><a href="#软件获取-4" class="headerlink" title="软件获取"></a>软件获取</h4><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://fu99999.lanzoue.com/iTAUb0ylvwkj">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://assets.woozooo.com/assets/favicon.ico);"></div>        <div class="tag-link-right">            <div class="tag-link-title">v5多开器</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><h3 id="Adobe-CC-2023全家桶"><a href="#Adobe-CC-2023全家桶" class="headerlink" title="Adobe CC 2023全家桶"></a>Adobe CC 2023全家桶</h3><p><strong>Adobe CC 2023全家桶</strong>，都是破解版，安装后可直接使用，UI设计、后期剪辑的福音！<br><img src="/img/article/20230812/7.jpg"></p><h4 id="软件获取-5"><a href="#软件获取-5" class="headerlink" title="软件获取"></a>软件获取</h4><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.superso.top/Adobe/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.superso.top/Adobe/.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Adobe CC 2023</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><h3 id="油猴"><a href="#油猴" class="headerlink" title="油猴"></a>油猴</h3><p>油猴浏览器扩展程序是最流行的浏览器扩展之一, 它可以用户自定义并增强你最喜爱的网页的功能。用户脚本是小型 JavaScript 程序，可用于向网页添加新功能或修改现有功能。使用油猴，可以轻松在任何网站上创建、管理和运行这些用户脚本。<a href="https://www.tampermonkey.net/"><strong>官网地址</strong></a> 总被墙，可以直接在本站下载。下载之后直接解压到文件夹，在浏览器中添加扩展程序选择解压的文件夹即可。<br><img src="/img/article/20230812/22.jpg"><br><img src="/img/article/20230812/23.jpg"></p><h4 id="软件获取-6"><a href="#软件获取-6" class="headerlink" title="软件获取"></a>软件获取</h4><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://fu99999.lanzoue.com/iiWjr0ylxwwd">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://assets.woozooo.com/assets/favicon.ico);"></div>        <div class="tag-link-right">            <div class="tag-link-title">油猴</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><h3 id="搜索重定向浏览器插件"><a href="#搜索重定向浏览器插件" class="headerlink" title="搜索重定向浏览器插件"></a>搜索重定向浏览器插件</h3><p>可以去掉百度、搜狗、谷歌搜索结果的重定向，回归为网站的原始网址。可以过滤推广告等功能，再安装好油猴之后进入网站添加插件完成。<br><img src="/img/article/20230812/27.jpg"></p><h4 id="软件获取-7"><a href="#软件获取-7" class="headerlink" title="软件获取"></a>软件获取</h4><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://greasyfork.org/zh-CN/scripts/14178">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/greasyfork.org/zh-CN/scripts/14178.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">搜索重定向</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><h3 id="ZipZap-浏览器插件"><a href="#ZipZap-浏览器插件" class="headerlink" title="ZipZap 浏览器插件"></a>ZipZap 浏览器插件</h3><p>这款插件是基于ChatGPT4.0的开发接口，支持谷歌和Edge浏览器直接安装，也可以直接下载插件安装包使用其它浏览器安装！插件支持的功能除了有原版GPT所拥有的功能外，还支持翻译、摘要任何网页上的文本。另外，我们在使用搜索引擎搜索答案的时候，此款插件还会在搜索结果页中同时展示ChatGPT的回答。目前这款插件每天免费提供的字数是：10KToken，换算等于5120个汉字。<br><img src="/img/article/20230812/24.jpg"><br><img src="/img/article/20230812/25.jpg"><br><img src="/img/article/20230812/26.jpg"></p><h4 id="软件获取-8"><a href="#软件获取-8" class="headerlink" title="软件获取"></a>软件获取</h4><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://fu99999.lanzoue.com/izdMZ10glbvg">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://assets.woozooo.com/assets/favicon.ico);"></div>        <div class="tag-link-right">            <div class="tag-link-title">ZipZap</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><p><strong><span class='p red'>本文来自网络收集，如有侵权请联系删除。</span></strong></p>]]></content>
      
      
      <categories>
          
          <category> 软件工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Navicat15破解教程</title>
      <link href="/posts/75884ae0/"/>
      <url>/posts/75884ae0/</url>
      
        <content type="html"><![CDATA[<h2 id="软件介绍"><a href="#软件介绍" class="headerlink" title="软件介绍"></a>软件介绍</h2><p>Navicat premium 是一款数据库管理工具，是一个可多连接数据库管理工具，它可以同时连线到 MySQL、SQL Server等数据库，让管理不同类型的数据库更加的方便。下载地址在文章末尾。</p><h2 id="破解教程"><a href="#破解教程" class="headerlink" title="破解教程"></a>破解教程</h2><div class="note red anzhiyufont anzhiyu-icon-bullhorn modern"><p>安装之前一定要关闭防火墙,和各种杀毒软件！！！</p></div><ol><li>下载好后首先安装 Navicat Premium 15，此工具安装比较简单，一直下一步安装即可。<br><img src="/img/article/20230811/14.jpg"></li><li>开始激活 <strong>(<span class='p red'>激活时必须断网</span>)</strong> 使用注册机 <strong>(<span class='p red'>确保已经关闭所有杀毒软件</span>)</strong> ，再打开注册机，否则会一直报错的<br><img src="/img/article/20230811/15.jpg"></li><li>在激活工具的第一个选项(1.Patch)里选择Backup，Host，Navicat 是那个版本就选那个版本，这里就选择Navicat V 15 就好了，然后点击，Patch按钮，选择Navicat的安装位置中的navicat.exe文件<br>如图：<br><img src="/img/article/20230811/3.jpg"><br>出现以下提示说明Patch成功了。</li><li><img src="/img/article/20230811/4.jpg"><br>License. Product and Language<br>License里选中Enterprise、在Produce里选择Premium、在Languages里选择Simplified Chinese(简体中文)<br><img src="/img/article/20230811/5.jpg">  </li><li><span class='p red'>Resale License</span>选择Site License<br><img src="/img/article/20230811/6.jpg"><br>Keygen &#x2F; Offline Activation<br>点击Generate按钮就会生成一个许可证秘钥，将许可证秘钥复制后就打开Navicat Premium 15<br><img src="/img/article/20230811/7.jpg"></li><li>打开Navicat Premium 15，点击注册<br><img src="/img/article/20230811/8.jpg"><br>粘贴秘钥，然后点击激活按钮<br><img src="/img/article/20230811/9.jpg"><br>在弹出的界面选择手动激活<br><img src="/img/article/20230811/10.jpg"></li><li>将请求码粘贴到注册机Request Code框中（完整过程看图）<br><img src="/img/article/20230811/11.jpg"><br><img src="/img/article/20230811/12.jpg"><br><img src="/img/article/20230811/13.jpg"><br>点击激活页面的激活弹出（说明激活成功）</li></ol><h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://fu99999.lanzoue.com/iywYR0xvg36f">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://cdnjson.com/images/2023/09/11/Navicat.webp);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Navicat15安装包</div>            <div class="tag-link-sitename">蓝奏云</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://fu99999.lanzoue.com/iOOgL0xvg3ih">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://cdnjson.com/images/2023/09/11/NavicatKey.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Navicat15破解工具</div>            <div class="tag-link-sitename">蓝奏云</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> 开发工具 </tag>
            
            <tag> 激活教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实用软件分享(网盘下载类)</title>
      <link href="/posts/3b43e263/"/>
      <url>/posts/3b43e263/</url>
      
        <content type="html"><![CDATA[<div class="note blue anzhiyufont anzhiyu-icon-bullhorn simple"><p>分享日常中实用的工具软件 有需要的小伙伴快去<strong>软件获取</strong>中下载吧</p></div><h2 id="IDM"><a href="#IDM" class="headerlink" title="IDM"></a>IDM</h2><h3 id="软件介绍"><a href="#软件介绍" class="headerlink" title="软件介绍"></a>软件介绍</h3><ol><li><strong>IDM</strong> 是款多线程下载软件，即多个结点同时开始下载一个文件，速度成倍提升。下载神器，用过的都知道😁。因为官方总是检测盗版，所以这次分享的是官方版激活方式和特殊版本(无需激活)。首先说下官方版的，从<a href="https://www.internetdownloadmanager.com/download.html">IDM官网</a>下载软件，选择简体中文安装。<br><img src="/img/article/20230812/14.jpg"></li><li>安装完成以后不要急着打开IDM，我们先下载本站的激活工具(<a href="https://github.com/lstprjct/IDM-Activation-Script">开源地址</a>)，找到 <strong>“IAS_0.8.cmd”</strong> ，右键—&gt;&gt;以管理员身份运行。<br><img src="/img/article/20230812/9.jpg"></li><li>运行后，我们在这里选择 <strong>“1”</strong> 进行激活IDM。注意的是，这个脚本必须联网才能激活，否则会激活失败。<br><img src="/img/article/20230812/10.jpg"></li><li>在激活过程中会提示你输入用户名，这里的用户名随便输！另外在激活过程中会下载两个”temp”的图片，以确定IDM的安装位置。<br><img src="/img/article/20230812/11.jpg"></li><li>当出现 <strong>“IDM is successfully activated”</strong> 时，让你按任意键返回，即 <strong>“Press any key to return…”</strong> 时，即表示激活成功了！<br><img src="/img/article/20230812/12.jpg"></li><li>再回到软件，查看 <strong>【注册】</strong>，软件提示已授权并激活！<br><img src="/img/article/20230812/13.jpg"></li><li>在上面输入数字时，如果输入“2”时，软件的试用时间将会清零，能接着试用30天。<br>如果上述办法嫌麻烦的小伙伴可以直接下载本站的<strong>IDM特殊版</strong>，解压之后右键管理员身份运行 <strong>“绿化.bat”</strong> 即可。<br><img src="/img/article/20230812/15.jpg"><br><img src="/img/article/20230812/8.jpg"></li></ol><h4 id="软件获取"><a href="#软件获取" class="headerlink" title="软件获取"></a>软件获取</h4><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://fu99999.lanzoue.com/ilVZU18dte6h">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://assets.woozooo.com/assets/favicon.ico);"></div>        <div class="tag-link-right">            <div class="tag-link-title">IDM激活工具</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://fu99999.lanzoue.com/i5eW618dte5g">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://assets.woozooo.com/assets/favicon.ico);"></div>        <div class="tag-link-right">            <div class="tag-link-title">IDM特殊版</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><h2 id="百度云"><a href="#百度云" class="headerlink" title="百度云"></a>百度云</h2><h3 id="软件介绍-1"><a href="#软件介绍-1" class="headerlink" title="软件介绍"></a>软件介绍</h3><ol><li><strong>Cheat Engine</strong> 一般简称 <strong>CE</strong> ,是一个开放源代码的软件，功能包括：记忆体扫描、十六进制编辑器、除错工具，供Windows和Mac作业系统运行。我们需要用到<strong>CE</strong>来给百度云修改下载速度，这里还需要用的百度云的一个特殊版本才能修改成功，文末获取的链接后下载。下载好软件之后解压首先打开<strong>BaiduNetdisk.exe</strong>文件，软件会报错，弹了两次窗后就能正常打开。<br><img src="/img/article/20230812/16.jpg"></li><li>登录自己的帐号后，然后下载，现在的下载速度大概在<strong>125KB&#x2F;S</strong>。<br><img src="/img/article/20230812/17.jpg"></li><li>然后打开<strong>CE</strong>，点击左上角，进入进程，然后选择带有百度云图标的进程（我这里有三个，随便点一个如果加速后没效果换一个即可）打开。<br><img src="/img/article/20230812/18.jpg"></li><li><strong>√选“开启变速精灵”</strong>，速度填写为 <strong>500</strong>，最后点击“应用”。<br><img src="/img/article/20230812/19.jpg"></li><li>切换到百度云，虽然显示的速度 <strong>36KB&#x2F;S</strong> ，但是实际速度已经达到会员的下载速度了。<br><img src="/img/article/20230812/20.jpg"></li><li>最后分享一个用 <strong>E语言</strong> 写的加速插件（懒人专用），效果和CE的是一样的，傻瓜式操作一键点击关闭即可，注意打开工具前需要先关闭杀毒软件，否则会被误报病毒。<br><img src="/img/article/20230812/21.jpg"></li></ol><h4 id="软件获取-1"><a href="#软件获取-1" class="headerlink" title="软件获取"></a>软件获取</h4><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://pan.baidu.com/s/1C2VNCO3aMm51OfhIXFk2SQ?pwd=bt2z">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://pan.baidu.com/m-static/base/static/images/favicon.ico);"></div>        <div class="tag-link-right">            <div class="tag-link-title">百度云CE版</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://fu99999.lanzoue.com/iBT8c19xxi8d">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://assets.woozooo.com/assets/favicon.ico);"></div>        <div class="tag-link-right">            <div class="tag-link-title">加速工具包</div>            <div class="tag-link-sitename">下载地址</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><p><strong><span class='p red'>本文来自网络收集，如有侵权请联系删除。</span></strong></p>]]></content>
      
      
      <categories>
          
          <category> 软件工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Postman汉化教程</title>
      <link href="/posts/8042f148/"/>
      <url>/posts/8042f148/</url>
      
        <content type="html"><![CDATA[<h2 id="软件介绍"><a href="#软件介绍" class="headerlink" title="软件介绍"></a>软件介绍</h2><p>Postman是一款不错的接口测试工具，它转换用于调试网页和API，Postman是开发人员必备的工具之一，所以很多用户都会用到，Postman官方版本默认为英文，所以需要使用Postman中文版的话需要额外的下载Postman汉化包，需要版本对上才可以哦，有需要的朋友可以下载安装。<br><img src="/img/article/20230811/1.jpg"></p><h2 id="汉化教程"><a href="#汉化教程" class="headerlink" title="汉化教程"></a>汉化教程</h2><div class="note blue anzhiyufont anzhiyu-icon-bullhorn simple"><p>软件的默认安装地址C:\Users\admin\AppData\Local\Postman</p></div><ol><li><p>下载<mark class="hl-label green">postman(v9.12.0绿色版)</mark> ，下载完成后点.exe文件直接打开。 <a href="https://pan.baidu.com/s/1QI3tVlHR96CGVVmeKITvEQ?pwd=fhww">下载软件</a></p></li><li><p>下载本站的app.zip汉化包，将”app.zip”压缩包复制到postman安装目录下面的<mark class="hl-label green">resources</mark> 文件夹中解压出来，会出现一个app文件夹，关闭软件在打开即可。 <a href="https://pan.baidu.com/s/1c6CFPi40rwwD1PxDH_UywA?pwd=i8nb">下载软件</a></p></li></ol><p><img src="/img/article/20230811/2.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> 开发工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IntelliJ IDEA 2018-2023激活教程</title>
      <link href="/posts/62b41ced/"/>
      <url>/posts/62b41ced/</url>
      
        <content type="html"><![CDATA[<h2 id="适用于idea-2018-2023版本激活"><a href="#适用于idea-2018-2023版本激活" class="headerlink" title="适用于idea 2018 - 2023版本激活"></a>适用于idea 2018 - 2023版本激活</h2><p><strong>下面激活码直接复制粘贴到activation code即可激活软件，如果是新的版本，换新激活码的时候code with me也要激活一次。2023版激活码测试时间为2023.8.20,如果激活码过期或者无效请登录<a href="https://www.ajihuo.com/idea/4222.html">激活码分享站</a>关注公众号获取最新激活码</strong></p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://pan.baidu.com/s/1tGzHNT9vfk6XFM92SLmBcA?pwd=etsn">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://cdnjson.com/images/2023/09/11/IntelliJ-IDEA.webp);"></div>        <div class="tag-link-right">            <div class="tag-link-title">idea2023.1下载地址</div>            <div class="tag-link-sitename">百度云盘</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><details class="folding-tag" cyan open><summary> 激活码 </summary>              <div class='content'>              <p><strong>2018.2-2023版本</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MXMQUYT815-eyJsaWNlbnNlSWQiOiJNWE1RVVlUODE1IiwibGljZW5zZWVOYW1lIjoiSHVuYW4gSW5zdGl0dXRlIG9mIFNjaWVuY2UgYW5kIFRlY2hub2xvZ3kiLCJhc3NpZ25lZU5hbWUiOiJqaWtlIGNvZGUiLCJhc3NpZ25lZUVtYWlsIjoiamV0YnJhaW5zMjMwMjA2QG91dGxvb2suY29tIiwibGljZW5zZVJlc3RyaWN0aW9uIjoiRm9yIGVkdWNhdGlvbmFsIHVzZSBvbmx5IiwiY2hlY2tDb25jdXJyZW50VXNlIjpmYWxzZSwicHJvZHVjdHMiOlt7ImNvZGUiOiJEUE4iLCJwYWlkVXBUbyI6IjIwMjQtMDItMDkiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IkRCIiwicGFpZFVwVG8iOiIyMDI0LTAyLTA5IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJQUyIsInBhaWRVcFRvIjoiMjAyNC0wMi0wOSIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiSUkiLCJwYWlkVXBUbyI6IjIwMjQtMDItMDkiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJTQyIsInBhaWRVcFRvIjoiMjAyNC0wMi0wOSIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJHTyIsInBhaWRVcFRvIjoiMjAyNC0wMi0wOSIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiRE0iLCJwYWlkVXBUbyI6IjIwMjQtMDItMDkiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJTRiIsInBhaWRVcFRvIjoiMjAyNC0wMi0wOSIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJEUyIsInBhaWRVcFRvIjoiMjAyNC0wMi0wOSIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUEMiLCJwYWlkVXBUbyI6IjIwMjQtMDItMDkiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJDIiwicGFpZFVwVG8iOiIyMDI0LTAyLTA5IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJDTCIsInBhaWRVcFRvIjoiMjAyNC0wMi0wOSIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiV1MiLCJwYWlkVXBUbyI6IjIwMjQtMDItMDkiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJEIiwicGFpZFVwVG8iOiIyMDI0LTAyLTA5IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJSUzAiLCJwYWlkVXBUbyI6IjIwMjQtMDItMDkiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJNIiwicGFpZFVwVG8iOiIyMDI0LTAyLTA5IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJBQyIsInBhaWRVcFRvIjoiMjAyNC0wMi0wOSIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUlNWIiwicGFpZFVwVG8iOiIyMDI0LTAyLTA5IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IkRDIiwicGFpZFVwVG8iOiIyMDI0LTAyLTA5IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJSU1UiLCJwYWlkVXBUbyI6IjIwMjQtMDItMDkiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IkRQIiwicGFpZFVwVG8iOiIyMDI0LTAyLTA5IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBEQiIsInBhaWRVcFRvIjoiMjAyNC0wMi0wOSIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQV1MiLCJwYWlkVXBUbyI6IjIwMjQtMDItMDkiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFNJIiwicGFpZFVwVG8iOiIyMDI0LTAyLTA5IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBQUyIsInBhaWRVcFRvIjoiMjAyNC0wMi0wOSIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQQ1dNUCIsInBhaWRVcFRvIjoiMjAyNC0wMi0wOSIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQR08iLCJwYWlkVXBUbyI6IjIwMjQtMDItMDkiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFBDIiwicGFpZFVwVG8iOiIyMDI0LTAyLTA5IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBSQiIsInBhaWRVcFRvIjoiMjAyNC0wMi0wOSIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQU1ciLCJwYWlkVXBUbyI6IjIwMjQtMDItMDkiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUlMiLCJwYWlkVXBUbyI6IjIwMjQtMDItMDkiLCJleHRlbmRlZCI6dHJ1ZX1dLCJtZXRhZGF0YSI6IjAxMjAyMzAyMDZMUEFBMDA4MDA5IiwiaGFzaCI6IjQyNTQ5NjcyLzIwMDk1Nzk5Oi03OTk2MzgyNTgiLCJncmFjZVBlcmlvZERheXMiOjcsImF1dG9Qcm9sb25nYXRlZCI6ZmFsc2UsImlzQXV0b1Byb2xvbmdhdGVkIjpmYWxzZX0=-OXfbtL5lwz9bDhPZ0POhH6h8h1ubDm0bzkRWX33IjJlRmK4BkGzO65BWjIJ+ndT0stY8uOUWo4FM1Aej+YGXMTlyD3rcCBkcFN6dB6FEVelLYoBevxN9myhp0IGvfHaLQ6hoVxAKr0AkSAlSsgKVN6gOYw7Nn8lR/ivpuXXteZWiG4x7KCxHM/6/oPXAbQQmD1sy2q05s1tsvxBltZbsFJ3/Yv6lG89h0YlN9FvFciqUM6B1Cc5Fo7a6oUOfpyCJKPSwzyzkxLOhlL4QO6/LfQ3zNO9wirnz506mZXh3oB+wS1gDFLk7RehEQMqdqnjh+zaNKi1QKB/cyK1Op0oDTQ==-MIIETDCCAjSgAwIBAgIBDzANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTIyMTAxMDE2MDU0NFoXDTI0MTAxMTE2MDU0NFowHzEdMBsGA1UEAwwUcHJvZDJ5LWZyb20tMjAyMjEwMTAwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC/W3uCpU5M2y48rUR/3fFR6y4xj1nOm3rIuGp2brELVGzdgK2BezjnDXpAxVDw5657hBkAUMoyByiDs2MgmVi9IcqdAwpk988/Daaajq9xuU1of59jH9eQ9c3BmsEtdA4boN3VpenYKATwmpKYkJKVc07ZKoXL6kSyZuF7Jq7HoQZcclChbF75QJPGbri3cw9vDk/e46kuzfwpGftvl6+vKibpInO6Dv0ocwImDbOutyZC7E+BwpEm1TJZW4XovMBegHhWC04cJvpH1u98xoR94ichw0jKhdppywARe43rGU96163RckIuFmFDQKZV9SMUrwpQFu4Z2D5yTNqnlLRfAgMBAAGjgZkwgZYwCQYDVR0TBAIwADAdBgNVHQ4EFgQU5FZqQ4gnVc+inIeZF+o3ID+VhcEwSAYDVR0jBEEwP4AUo562SGdCEjZBvW3gubSgUouX8bOhHKQaMBgxFjAUBgNVBAMMDUpldFByb2ZpbGUgQ0GCCQDSbLGDsoN54TATBgNVHSUEDDAKBggrBgEFBQcDATALBgNVHQ8EBAMCBaAwDQYJKoZIhvcNAQELBQADggIBANLG1anEKid4W87vQkqWaQTkRtFKJ2GFtBeMhvLhIyM6Cg3FdQnMZr0qr9mlV0w289pf/+M14J7S7SgsfwxMJvFbw9gZlwHvhBl24N349GuthshGO9P9eKmNPgyTJzTtw6FedXrrHV99nC7spaY84e+DqfHGYOzMJDrg8xHDYLLHk5Q2z5TlrztXMbtLhjPKrc2+ZajFFshgE5eowfkutSYxeX8uA5czFNT1ZxmDwX1KIelbqhh6XkMQFJui8v8Eo396/sN3RAQSfvBd7Syhch2vlaMP4FAB11AlMKO2x/1hoKiHBU3oU3OKRTfoUTfy1uH3T+t03k1Qkr0dqgHLxiv6QU5WrarR9tx/dapqbsSmrYapmJ7S5+ghc4FTWxXJB1cjJRh3X+gwJIHjOVW+5ZVqXTG2s2Jwi2daDt6XYeigxgL2SlQpeL5kvXNCcuSJurJVcRZFYUkzVv85XfDauqGxYqaehPcK2TzmcXOUWPfxQxLJd2TrqSiO+mseqqkNTb3ZDiYS/ZqdQoGYIUwJqXo+EDgqlmuWUhkWwCkyo4rtTZeAj+nP00v3n8JmXtO30Fip+lxpfsVR3tO1hk4Vi2kmVjXyRkW2G7D7WAVt+91ahFoSeRWlKyb4KcvGvwUaa43fWLem2hyI4di2pZdr3fcYJ3xvL5ejL3m14bKsfoOv</span><br></pre></td></tr></table></figure><p><strong>2018.1及以下版本</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">N5ZD3FF9AY-eyJsaWNlbnNlSWQiOiJONVpEM0ZGOUFZIiwibGljZW5zZWVOYW1lIjoiSmV0QnJhaW4gQ29kZSIsImFzc2lnbmVlTmFtZSI6IiIsImFzc2lnbmVlRW1haWwiOiIiLCJsaWNlbnNlUmVzdHJpY3Rpb24iOiIiLCJjaGVja0NvbmN1cnJlbnRVc2UiOmZhbHNlLCJwcm9kdWN0cyI6W3siY29kZSI6IkRQTiIsImZhbGxiYWNrRGF0ZSI6IjIwMjMtMDMtMDUiLCJwYWlkVXBUbyI6IjIwMjQtMDMtMDQifSx7ImNvZGUiOiJEQiIsImZhbGxiYWNrRGF0ZSI6IjIwMjMtMDMtMDUiLCJwYWlkVXBUbyI6IjIwMjQtMDMtMDQifSx7ImNvZGUiOiJQUyIsImZhbGxiYWNrRGF0ZSI6IjIwMjMtMDMtMDUiLCJwYWlkVXBUbyI6IjIwMjQtMDMtMDQifSx7ImNvZGUiOiJJSSIsImZhbGxiYWNrRGF0ZSI6IjIwMjMtMDMtMDUiLCJwYWlkVXBUbyI6IjIwMjQtMDMtMDQifSx7ImNvZGUiOiJSU0MiLCJmYWxsYmFja0RhdGUiOiIyMDIzLTAzLTA1IiwicGFpZFVwVG8iOiIyMDI0LTAzLTA0In0seyJjb2RlIjoiR08iLCJmYWxsYmFja0RhdGUiOiIyMDIzLTAzLTA1IiwicGFpZFVwVG8iOiIyMDI0LTAzLTA0In0seyJjb2RlIjoiRE0iLCJmYWxsYmFja0RhdGUiOiIyMDIzLTAzLTA1IiwicGFpZFVwVG8iOiIyMDI0LTAzLTA0In0seyJjb2RlIjoiUlNGIiwiZmFsbGJhY2tEYXRlIjoiMjAyMy0wMy0wNSIsInBhaWRVcFRvIjoiMjAyNC0wMy0wNCJ9LHsiY29kZSI6IkRTIiwiZmFsbGJhY2tEYXRlIjoiMjAyMy0wMy0wNSIsInBhaWRVcFRvIjoiMjAyNC0wMy0wNCJ9LHsiY29kZSI6IlBDIiwiZmFsbGJhY2tEYXRlIjoiMjAyMy0wMy0wNSIsInBhaWRVcFRvIjoiMjAyNC0wMy0wNCJ9LHsiY29kZSI6IlJDIiwiZmFsbGJhY2tEYXRlIjoiMjAyMy0wMy0wNSIsInBhaWRVcFRvIjoiMjAyNC0wMy0wNCJ9LHsiY29kZSI6IkNMIiwiZmFsbGJhY2tEYXRlIjoiMjAyMy0wMy0wNSIsInBhaWRVcFRvIjoiMjAyNC0wMy0wNCJ9LHsiY29kZSI6IldTIiwiZmFsbGJhY2tEYXRlIjoiMjAyMy0wMy0wNSIsInBhaWRVcFRvIjoiMjAyNC0wMy0wNCJ9LHsiY29kZSI6IlJEIiwiZmFsbGJhY2tEYXRlIjoiMjAyMy0wMy0wNSIsInBhaWRVcFRvIjoiMjAyNC0wMy0wNCJ9LHsiY29kZSI6IlJTMCIsImZhbGxiYWNrRGF0ZSI6IjIwMjMtMDMtMDUiLCJwYWlkVXBUbyI6IjIwMjQtMDMtMDQifSx7ImNvZGUiOiJSTSIsImZhbGxiYWNrRGF0ZSI6IjIwMjMtMDMtMDUiLCJwYWlkVXBUbyI6IjIwMjQtMDMtMDQifSx7ImNvZGUiOiJBQyIsImZhbGxiYWNrRGF0ZSI6IjIwMjMtMTItMzEiLCJwYWlkVXBUbyI6IjIwMjQtMDMtMDQifSx7ImNvZGUiOiJSU1YiLCJmYWxsYmFja0RhdGUiOiIyMDIzLTAzLTA1IiwicGFpZFVwVG8iOiIyMDI0LTAzLTA0In0seyJjb2RlIjoiREMiLCJmYWxsYmFja0RhdGUiOiIyMDIzLTAzLTA1IiwicGFpZFVwVG8iOiIyMDI0LTAzLTA0In0seyJjb2RlIjoiUlNVIiwiZmFsbGJhY2tEYXRlIjoiMjAyMy0wMy0wNSIsInBhaWRVcFRvIjoiMjAyNC0wMy0wNCJ9LHsiY29kZSI6IkRQIiwiZmFsbGJhY2tEYXRlIjoiMjAyMy0wMy0wNSIsInBhaWRVcFRvIjoiMjAyNC0wMy0wNCJ9LHsiY29kZSI6IlBEQiIsImZhbGxiYWNrRGF0ZSI6IjIwMjMtMDMtMDUiLCJwYWlkVXBUbyI6IjIwMjQtMDMtMDQifSx7ImNvZGUiOiJQV1MiLCJmYWxsYmFja0RhdGUiOiIyMDIzLTEyLTMxIiwicGFpZFVwVG8iOiIyMDI0LTAzLTA0In0seyJjb2RlIjoiUFNJIiwiZmFsbGJhY2tEYXRlIjoiMjAyMy0xMi0zMSIsInBhaWRVcFRvIjoiMjAyNC0wMy0wNCJ9LHsiY29kZSI6IlBQUyIsImZhbGxiYWNrRGF0ZSI6IjIwMjMtMDMtMDUiLCJwYWlkVXBUbyI6IjIwMjQtMDMtMDQifSx7ImNvZGUiOiJQQ1dNUCIsInBhaWRVcFRvIjoiMjAyNC0wMy0wNCJ9LHsiY29kZSI6IlBHTyIsImZhbGxiYWNrRGF0ZSI6IjIwMjMtMDMtMDUiLCJwYWlkVXBUbyI6IjIwMjQtMDMtMDQifSx7ImNvZGUiOiJQUEMiLCJmYWxsYmFja0RhdGUiOiIyMDIzLTAzLTA1IiwicGFpZFVwVG8iOiIyMDI0LTAzLTA0In0seyJjb2RlIjoiUFJCIiwiZmFsbGJhY2tEYXRlIjoiMjAyMy0wMy0wNSIsInBhaWRVcFRvIjoiMjAyNC0wMy0wNCJ9LHsiY29kZSI6IlBTVyIsImZhbGxiYWNrRGF0ZSI6IjIwMjMtMTItMzEiLCJwYWlkVXBUbyI6IjIwMjQtMDMtMDQifSx7ImNvZGUiOiJSUyIsImZhbGxiYWNrRGF0ZSI6IjIwMjMtMDMtMDUiLCJwYWlkVXBUbyI6IjIwMjQtMDMtMDQifV0sImhhc2giOiI0MzU2MTExOS8wOi0xMDcyMjgwMjg0IiwiZ3JhY2VQZXJpb2REYXlzIjo3LCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-cfV+swGZjRdoCV47ddNRcv0m6p10Kc1Qg487903TUcjT6b7chh2byiKPWJ9cqhD5C/voMsuarPV4GdQ3qIfNQov79mImkvajQD1jBCJL7ISDlvUsHZeMGkLL90g0nW2Xeov3NcUj2wgiO9GydcHPLzuvakze0ZNQ6d1181iNwghxgM4CdbPoW4r0RFEn+op1ISdnJNCATGRcp3lfSoOP/Mye1wbJm3r8WGlU2Trs5cHK+Nu3/SzHdO8WzZp7GjW2aTqTJSh4OKmHm1dA9ZULTRatWjLJY3i3lEzqECyNBm7Lty9o4i4uhRBhj583kMyOAzIEDyFUdVC9CWPHxu0lJA==-MIIETDCCAjSgAwIBAgIBDzANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTIyMTAxMDE2MDU0NFoXDTI0MTAxMTE2MDU0NFowHzEdMBsGA1UEAwwUcHJvZDJ5LWZyb20tMjAyMjEwMTAwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC/W3uCpU5M2y48rUR/3fFR6y4xj1nOm3rIuGp2brELVGzdgK2BezjnDXpAxVDw5657hBkAUMoyByiDs2MgmVi9IcqdAwpk988/Daaajq9xuU1of59jH9eQ9c3BmsEtdA4boN3VpenYKATwmpKYkJKVc07ZKoXL6kSyZuF7Jq7HoQZcclChbF75QJPGbri3cw9vDk/e46kuzfwpGftvl6+vKibpInO6Dv0ocwImDbOutyZC7E+BwpEm1TJZW4XovMBegHhWC04cJvpH1u98xoR94ichw0jKhdppywARe43rGU96163RckIuFmFDQKZV9SMUrwpQFu4Z2D5yTNqnlLRfAgMBAAGjgZkwgZYwCQYDVR0TBAIwADAdBgNVHQ4EFgQU5FZqQ4gnVc+inIeZF+o3ID+VhcEwSAYDVR0jBEEwP4AUo562SGdCEjZBvW3gubSgUouX8bOhHKQaMBgxFjAUBgNVBAMMDUpldFByb2ZpbGUgQ0GCCQDSbLGDsoN54TATBgNVHSUEDDAKBggrBgEFBQcDATALBgNVHQ8EBAMCBaAwDQYJKoZIhvcNAQELBQADggIBANLG1anEKid4W87vQkqWaQTkRtFKJ2GFtBeMhvLhIyM6Cg3FdQnMZr0qr9mlV0w289pf/+M14J7S7SgsfwxMJvFbw9gZlwHvhBl24N349GuthshGO9P9eKmNPgyTJzTtw6FedXrrHV99nC7spaY84e+DqfHGYOzMJDrg8xHDYLLHk5Q2z5TlrztXMbtLhjPKrc2+ZajFFshgE5eowfkutSYxeX8uA5czFNT1ZxmDwX1KIelbqhh6XkMQFJui8v8Eo396/sN3RAQSfvBd7Syhch2vlaMP4FAB11AlMKO2x/1hoKiHBU3oU3OKRTfoUTfy1uH3T+t03k1Qkr0dqgHLxiv6QU5WrarR9tx/dapqbsSmrYapmJ7S5+ghc4FTWxXJB1cjJRh3X+gwJIHjOVW+5ZVqXTG2s2Jwi2daDt6XYeigxgL2SlQpeL5kvXNCcuSJurJVcRZFYUkzVv85XfDauqGxYqaehPcK2TzmcXOUWPfxQxLJd2TrqSiO+mseqqkNTb3ZDiYS/ZqdQoGYIUwJqXo+EDgqlmuWUhkWwCkyo4rtTZeAj+nP00v3n8JmXtO30Fip+lxpfsVR3tO1hk4Vi2kmVjXyRkW2G7D7WAVt+91ahFoSeRWlKyb4KcvGvwUaa43fWLem2hyI4di2pZdr3fcYJ3xvL5ejL3m14bKsfoOv</span><br></pre></td></tr></table></figure><p>激活后如果显示key is invalid，这是因为你破解过软件的原因，请按如下操作打开软件，help edit VM options ，删掉最下面一行的javaagent，重启软件即可</p>              </div>            </details><h2 id="常见问题和推荐插件"><a href="#常见问题和推荐插件" class="headerlink" title="常见问题和推荐插件"></a>常见问题和推荐插件</h2><div class="note blue anzhiyufont anzhiyu-icon-dengpao simple"><p>idea下载插件超时</p></div><blockquote><p>访问以下地址： <a href="http://tool.chinaz.com/speedtest/plugins.jetbrains.com">http://tool.chinaz.com/speedtest/plugins.jetbrains.com</a><br>找到耗时最短的服务器 例如: 13.35.49.114<br>修改hosts文件<br>    在C:\Windows\System32\drivers\etc\hosts中最后添加<br>    13.35.49.114 plugins.jetbrains.com</p></blockquote><div class="note blue anzhiyufont anzhiyu-icon-dengpao simple"><p>常用插件</p></div><ol><li><strong>Lombok</strong><blockquote><p>Lombok能以简单的注解形式来简化java代码，提高开发人员的开发效率。</p></blockquote></li><li><strong>codeGlance</strong><blockquote><p>快速定位代码。右侧小地图。 这个主要是代码过多方便定位</p></blockquote></li><li><strong>Translation</strong><blockquote><p>在平时的开发中，有时候对于变量的命名是否很头疼，这款插件可以帮助你翻译单词，对于英语差的同学真是福音</p></blockquote></li><li><strong>Free Mybatis plugin</strong><blockquote><p>生成mapper xml文件 快速从代码跳转到mapper及从mapper返回代码 mybatis自动补全及语法错误提示 集成mybatis generator gui界面 这个插件超级实用，可以从mapper接口跳转到mybatis的xml文件中，还能找到对应的方</p></blockquote></li><li><strong>Rainbow Brackets</strong><blockquote><p>彩虹括号，代码中有多个括号会显示不同的颜色。</p></blockquote></li><li><strong>RestfulToolkit</strong><blockquote><p>根据 URL 直接跳转到对应的方法定义 ( 快捷键搜索 Ctrl + Alt + N 或者 Ctrl + \ ); —这个个人感觉非常好用，和Ctrl + F一样重要</p></blockquote></li><li><strong>Bito</strong><blockquote><p>Bito 是一个继Copilot之后的又一款神级IDEA代码辅助插件,它的强大之处就是可以通过类似于ChatGPT对话的方式来编写代码，分析代码等，生成的代码可以复制以及直接插入。最最关键的是它的注册流程很简单，而且免费，不用科学上网。</p></blockquote></li></ol>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> 开发工具 </tag>
            
            <tag> 激活教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>魔兽落幕,青春散场</title>
      <link href="/posts/ac701fa2/"/>
      <url>/posts/ac701fa2/</url>
      
        <content type="html"><![CDATA[<h2 id="魔兽落幕-青春散场"><a href="#魔兽落幕-青春散场" class="headerlink" title="魔兽落幕,青春散场"></a>魔兽落幕,青春散场</h2><p><strong>结束的,是一款游戏,再见的,是一个青春,怀念的,是那段无忧无虑的日子。</strong></p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://v.douyin.com/kcwe6jR/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/v.douyin.com/kcwe6jR/.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">魔兽落幕 青春散场</div>            <div class="tag-link-sitename">致青春2007-2023</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><!-- <iframe class="bilibili" src="//player.bilibili.com/player.html?aid=14875394&cid=24237231&page=1&high_quality=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe> --><h2 id="告别太过伤感-我选择华丽退场"><a href="#告别太过伤感-我选择华丽退场" class="headerlink" title="告别太过伤感,我选择华丽退场"></a>告别太过伤感,我选择华丽退场</h2><p><strong>人生总有遗憾,这次怀旧服到最后一天还是没刷出ZG虎</strong><br><strong>看来和祖格虎无缘,当年正式服就没有 哈哈😄</strong><br><strong>成就点在最后一天超过7000 也算圆满了</strong><br><img src="/img/article/20230810/7.jpg"><br><img src="/img/article/20230810/8.jpg"><br><strong>最后祝愿艾泽拉斯的勇士们,兔年大吉,我们有缘再见 ღ( ´･ᴗ･&#96; )</strong><br><img src="/img/article/20230810/9.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 魔兽世界 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 魔兽 </tag>
            
            <tag> 游戏杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WLK常用WA整合</title>
      <link href="/posts/688b9307/"/>
      <url>/posts/688b9307/</url>
      
        <content type="html"><![CDATA[<h2 id="邮箱一键分类收件"><a href="#邮箱一键分类收件" class="headerlink" title="邮箱一键分类收件"></a>邮箱一键分类收件</h2><details class="folding-tag" cyan open><summary> 邮箱一键分类收件WA </summary>              <div class='content'>              <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!WA:2!9Uz7ZTrXDC8K6KgIakjbi0c9bvrBQfyllD650jTrYrXrf7yxjfCsDDLoPBL1HpDN6DNSJbChhNGtm5bN6gGHeGecqlHbmjggipW00j)fStM(Q(ModnNK9l6Wm8paD37ojRtpEx9G1KiF3E7(D)T)2p7E)UDpT(9UTSBJABuN4P45YlYqZc47)aX6n8(dDxY8Iz447pNinhRWL2E6GItKdKuKBKrya85fa7biKkdXOGjcMuK1bpfinzEgXebzjZc4lCQzxE(fCezCAkXmTngCdjfamGuIWnfblJd43ntYXizYdeUzYLo9SlD6pozXlE7Ix8tskD9Jw4vF9Kl9oVK07E8Kln9SfV2TUZYVZflo7vw(9waDP7GYCHR(POVLMD67S8RFSL)OZv4nplUqsl8MYs8shT4NEPKlF8)8YZFnOP7GkQ0F5iiDKERtc3CBWhOT0Wna3iCtylNazkqtQgmbCZjqxgzVWhu1urjTr5SaFc4dDt4wGBfUn4ddFe4Jc3o8XGFF4pa(4Av0zLk6Ssf38Muf1zJLcxpOYRrrxvQORATrusB2y2O7kv0TgB8(vf1TXSrpvQONATruspOXSrVvQOxn24dPkQxJzJ(QurF1AJOK2QUTru(Kf1pwNsI6FfB8Hvf1V(TXi4rs2LTGPvhbzxJvMuEWdkTh1qMPSUoKTZs66yfd9XkPRdDyP5EAkAHCmKtedCyX4P54ZskgpxCr6SG4utGg7tNkUygEGqgogQj4NO)0PfaI7B3z)VBEQ1TUVZIKSPqZQmahnRyYUdT)yHIKZCJvu5S1NBlPYliYLfNJdKJIueebmgGvKipptoRzefZjSZU6IDesBo86ZwkUSDXdiPSLltUFTin1UC6YUhVe2DZtMsEYmpreej5fnfKMLwChZtXfxr(ejv(7HFQ(7SZHgYSPbdin30ln1r3PjYmzE(DV)Ec0H5HgmWWd1diBqoUrlo3Lqt5S8uxSWfFVcZEsPzoLzh2CoChMBPjr4ZUBcV(CBAc2jE(jspHQ2sxDUIN5kfo2Csh72dJRQ7DR3P4LoYWMrxq6nUQ0f(7ktw2LYKLsh)MfpZvLENRU8f)KcZD2LNz(2lCZZU0X)G(qTSSK5cGMPwSWuV5sF(hBvhgLtN(D4IWVttJtZsXLMCeWUhNCeoB0CDy2r3m0Pg1CFKP45m3U8jKjzaQjeofhlQgkxfQfRR)inzmUo950vxeMmfyGWkUZV6loVPY5KB8CakAsBPjr1zwzJAC6rP7AqoEgQ4CPJpijFkEY0IXrL)j7JKMP1LfLZ49aedZMK7WHfbz1xjIrokWGfbxjOmhMnnN(kWaiopkxEwQYzFeAXm5tkNlKAza4Y3zE6of4YZNc0vsgUKDXqpgORWSIa(0KO0IMHKhqDW(6TlzPEgAXUruTijROGnM8KMgE4o70KjY88KXbSJzlvEEE0GLyOH4H3J5Dz2(kxklhlyIDzgvX9HpQDRMm1zNMLoXhu4mZEVBCsPzpDXZFmLzmmrN2C5YjICvbrZPygzWSMmJ(uZL25(OPaibR)fJcehGeBvTZsZy1ea5qQJ(enwFIMPpHo13zJ13zZ03Po13vJ13vZ03Lo13DJ13DZ03To13tJ13tZ03Jo13BJ13BZ03Ro13xJ13xZ03No13FJ13FZ03Vo13H9MmaZEthHzVEvbEWn6UdslC(7DJzV31)Okdmw6JVrXx6VT0B)(My4srYyghrW(rHY3lTGiAsJxqUASOC7hlDygP0qogwjrLBgPMiHAIkXXRMOt1evIQxnrxLsuogF1eDRMyLr8REjpLYFfX)REjVLkvfpnG6L8vYEKF2a1e9xkr5NuOuZXEjvKFWblMMu2Hv4K3wAUxT4fUU0npNIRcnNOINBLjshPI72G8wPZZkhQr7IYt6Q0hH0QUQuyQBv4vUQCwuD9CIOVXtuJtRCzRPZQYIGQhn9u4pVGfPxzguzS0rP(Tj10XvvEqnBPR9wsZFk1(Zj10HwvMv7ENut)RsEk1jx6Gj10DxTHP05pPMEFL8u4ZoXst9AQ2MmoGSnvIysnirT5Vsgr6SNatktQbvQUTldoLYJV63KviOj1GqvNhfGAsTeLsMuXQokDWKYxBYQ6fr9GL6mhsHEgUu)LsMeYNmwdYNAxvjIz5JCAPZmZYtVqXfUMkWwfKT)8yATuOsOZW8RG6CkOGVnJceeCyuwC0XkfGIRCJcnNLOAyfO8ur4aL(uoMkL4lKLZA5CayeavMBnfvXmnhVJ68VmKcQJ0kz77dfilGhhiw1vIQDwQi1yILBQYbYvU5giwSaDVV(qpIs049f4GXJeQ7qHF2qv26R1ArMMSm7PcldxRk2uhRuhwRRiiZuT411kBUNbxsmyOCu0YusfXO2UI6w)Lnu6gEbCyHV7XkE2zU31N6E38cfN9gfw4LlpfMYSsTWGXKs3zaONIyxLnwm3it9OyL1A37QeO3qv1aFUAUld)Pr1VLcV87w8ClAXSkeSs6F0Fv61FFlnuu8Tu1LX5D1yCLNvt2h1Evoj1z6kB8vDj8eF17sQZjAD1328VkABkp)8)Fo4MzDvuJT24uVzR8FFAhnnVAEcrDoMU0NKOh1Eud3sRx6vNw1NBQExWuLjG7avA2OGm06IYXtJIy0YlMkDApEsH(Ei0a(Lp3csNyg0G8cN7ZU3T(SHFr(DA2InBQdqTzZIzPpFXI3AouCsslCQV6losfGv5N4TDF(D73Qg7GhiMNNvXwkhGQ0jUG0TUP6dDw7tCUlZDJ8KIG9YJcoTDlbZlkYXIIGdfKBhRegmpyeu4xDy2YbcpajlGrjBXazZXGklY8Q7JKgL(5bT71U5oiiAqoWRav7vgA8qR8y2CSPPhzilYlLMLHhUokyRukOwrPdRF9iVazOwx)XI1FF9gAVXS0r1Tnnx0EhDs4QrTQu805qI1pR8Y2G8vLdpvaWKELUk8z2A4Ygu1v12ABGgvgwC7nva5hqXQMhcQuoWlEPLHXSAAsCadTEnhKrPAxmb9HoLeZaWdrlHhcdape1fEi0f8q0k4PCRRg8Prw9364dXQfFiAf(qOl8HOP4JtJHpegaFC2s8XPbWhN1fFCQl8XPoXhcDHpoxtWhNRw8XzRWhN6cFC2u8XLXWhNgaFC1s8XLbWhx1fFCPl8XLoXhN6cFCTMGpUwT4JRwHpU0f(4QP4JBJHpUma(4UL4JBdGpURl(4wx4JBDIpU0f(4EnbFCVAXh3TcFCRl8XDtXhpgdFCBa8XtlXhpgaF8ux8XJUWhp6eFCRl8XZAc(4z1IpEAf(4rx4JNMIpEng(4Xa4J3wIpEna(4TU4JxDHpE1j(4rx4J31e8X7QfF82k8XRUWhVnfF8zm8XRbWhFTeF8za8XxDXhF6cF8Pt8XRUWhFRj4JVvl(4Rv4JpDHp(Ak(43y4JpdGp(Bj(43a4J)6Ip(1f(4xN4JpDHp(xtWh)Rw8XFRWh)6cF83u8XHDJXp(nYQgAV1lBODJSUH2R)chAxFRCODDcr(1feP24(wF1dTVQx(q7TC9dTRVfq0EZjjhgCjeTBeushRaTHwc6gSg06CrODO3fs0U(yP1OvIE1Vu0TETO15Irx5QrNmnnlTqgttlYtpYiaEHRVXVZo4vpPaCdbZZsl(L5faXjzgNCcbr(8GeFPq(KYVMRrZNon9HxmE3bIglE0ybIeBrLxu14zq1qe8BklfC3xUBowkA5xW1i43bFbttlKdWWeMsWuzPgGhGKks0bc1BVkPiKBR9fiCVXdV)G9FW4hyG9eiwiyVjXVqUa(iPWBIgC3tJnnSnMOunJ9vO6KcKezC4Eg(9fQ3b27b6D(8SQTlt7a(mZaha(BHBa2dCWCBlyGEuRG47juVbouO9a)9WDd)DO)3ZHx)JuMfKTlRL2PkLtL3VWAfqEZnbJXcuYq4yH6l(ahi6(SyvE3sBac9NQzBV0(I3uFOP(IzvZldrd2vnnasTVpMvVHD4)kpdKj4WW)aSx4HGXv8M4dv8MB5aHJhksK(JeVVqrJgONqL9L4I0tU)Lw3zhK8J4a)frzh7k(1QLszRMXzwExAvElLU0CsF(IfU1B)FMAAlABD6OLPZTv8R(IZxNAZA1ofmtfVk8ArzkU7E7pQwSsSby1kT(kkOfZABzAMcqBJR(VVlkCezwU8yXR4fRTtTVZTv)2POwIFv9ahdTTSfEJpSWh(2OeKM7vTyZgYa6gnjU89muQdRwRD7ZrU16V9XAoVfDZR0)0eS9odGh2IaT(3FOdvfXELwpbqLLU5dXRt)ZQDmEna4Iu0cpNSnpgGGKDICBLu(4ykZ)1hhf4dxxUNOU)8guoa(BZTJg)RFGbmczQjINMHJJpZ847zP87Mq5(TbPacPYT1LFT3VWRnxC0)x(vUn(NrqW0CO8S0rEzP39kxgnVFe5Tlw4X3oCd3fDAsYuJocpEd5dYWrsT3GcOqo2EKS5zePnfeDhJuBhoUPiPyifeWhLe5Uqoc8HtJvghHYp5UcziP4g)Gk)6oAJ)WL(zEKM9T(3FZ38n52IYVZd5WKK)6YY(yLdv2aBSRnOiQvppj(hRaUJ3dCp7fDZqw0iK7aifarfr9bJiMzt3Lc1VGZH89D4faO7htjmnopyzGhnywsAwuzHhfESnbFj4mWJJomC1P8LK5r38cPuQbX)W0cgaDAUNSX9a54bPOfq1BBxgDBtaLCPo2dO28pKsR(hUUiP4y44)nTH(W)CO7psNEIG4WHUSixQXqMlsG7BS)HfAQC)iL3gVAh8A(zDyJGipn1I8E(DEC4XzQEs9mlMg7VqEbsrY2(6kCP4g9Ird1BOUJT3ib6l00JZXtnipzUPhu9GKkrSCITd)XBe(lUFOLeqppk8hMa25dbDLaAFRW2taTLa(0jG)0nb9Ma(tsaVVeqhjGFV2G(Fm4pBZWFEcOZhg(up4Iv4FUtL2Coln2ZLLJkoYSbjwuXx1TShA9RF9TD5uLJtX0I0SkfdDMPVMg)lCGLK5zvCzJUnHiUSHClBBS)5b)F</span><br></pre></td></tr></table></figure>              </div>            </details><h2 id=""><a href="#" class="headerlink" title=""></a><span class='p green'>效果图:</span></h2><p><img src="/img/article/20230810/5.jpg"></p><h2 id="占卜队友物品的掉落几率-仅供娱乐"><a href="#占卜队友物品的掉落几率-仅供娱乐" class="headerlink" title="占卜队友物品的掉落几率,仅供娱乐"></a>占卜队友物品的掉落几率,仅供娱乐</h2><ul><li>使用方法: 在团队或小队中输入: #占卜 &lt;物品链接&gt;   例如:#占卜 乌鸦之神的缰绳<details class="folding-tag" cyan open><summary> 占卜队友物品的掉落几率WA </summary>              <div class='content'>              <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!WA:2!nNX7ZnXX1WWhsRsN2ath6Kj9d3igt0flllBatHwOJLTbCIbCLf5hntgXjDRSUI0Dk7DhyLmjJT5N2GXeyahWEcGkqcnbCIGMeSX4zYFbAy60p1pLX3jPpLzYFb9T7Es6o9dJDs70EJ9PDF77x7BFV9929wZUxFY1lUEXtZJv01sijJWh4GH6R393tKJkmOsVDFHoJ3r3df7vFT3bp0bIftfPTgCAwJ1MvqoACfC)ksYAr6QN9hQNGP4eLutLqiDi0qAHJPGtkOfovynPKiRERj1ZhvxvtjjbJdMsuqdfeDeKSw764ePEX4AAPu3rRTsKUpjLwll(w3kwiQMKISAhbv1eWAUcijlPTPimUn0p)FftxMIaNGowims(i(IkKiQhzHKiVCsAOK9jjFyExCWtlTyE7rZFUtv4E3i)9MYyYrnV0x89p6Q5p3DmU3xTNd2B3F)JoRXdFG5mN2CQBbTZp2DmU4i5FqgJhDjkdOVsOacGYzQcXecswKBNCQAyj5b9ftsw0tjr7LZnPPB(QiU3URqGQEeB4xIFnZ1U9oDWxToiiREuegyJFBaJlOg)vrPbOTV9keat9V5e5p)jzs2g6rtGeW9wsFC7MoeSMXjbDBZBjnmbs2dJwEorfks24rCbCTtME7g0E4p(6GDG0AOkueb65HaUcQLB0slgZoV5yp248N28(xcwWmU7uLhukgNNYSBxCBzBGjrSIa4(dCB93XZXPfhjxMgYJZjT9E(8rjVm2GP3Povcq5Lqnfz9Krqyp2yJTvklRFHZ91gtEzWTYCMRzZ6NurwloWes8Gh3n50lruiDLHeDmuCfDS3KsY6uZ4EqA7bC3dbHBESJ1G6seVYdcbmeVBAmbFT(eKXSrfJOL1tGW4vKFabX)V1lGnrjVxUvDNI24MFIXjVciDZzNOrkqhBPgfy7T9Jtbk9BjVi6gxSnXCvHd2m4u7TTvk6cvlCBTgGmJC5DqyoIVm3M9dVAFlWRo8d75qCbl33jfL97PICZDWZ1Q1GoXZQXlxEJPM5STje9fgPPJL5aVC)(Alwtn5MFhSSgEye3uB(9Z7IylC5Q2T7tHvIelHEunDbYaEi95)VyShvwWGESzZOwkEUMyTB3)kzUb)h3xsHHOkCRT5hwMOSgA6LZVp)TXZt8lCZ9bW)qJgYcj5YSOzBSy7B3325TmB1A1WcsIaQh2JdtfcwtTnvjiaZ03RSFP78x6efUXznN665ZmHBVvGBoZyMhBCaEXRChhWN)gfwyHcdFwJfUGD4fhoJXP(kJZEzJZpMD4gJpT5zxi)zg18XZ4KppW8lEq(7Sy(RDFh4FIpNW8f)O8FYioGF7rnp(Iln)Tmgzr7WxAUZym8egJFnJjg3o8chBMLE4zw6BMW8U32b(FZCln3ClTWmgFMd(dC28JMfg1CKp1bFo91kSWTng)(fVHd5wC6p18()1LM7dnpUd(K)ZEy(zVN5yxeMDoGpwM8N5lbvk)ip2c(7)7)FEcfI)qW93Dvo)0niSTxrZuUrIg8OjejbY3GinzpeAbp6M5ARMGdYqVLfVFB2OSG9liQeMvO3HIafvjPg31OW2ydoicR(l3e2Q5)mGw6uOCRlld1WKErGAZ00vlbkUKikiPCuXCp332vCbnU9HuvfgefqhsogHu6kc)DWgO0As7hJIjnuWb6VN(6l36gADBPu4Jh6WE5sQoOxowfMHB8FQWKaHjzxDeJzC6BAE57wmZhwCKl6YrcrzzuIkyczvOIJBNq24U2BNHcVVb2t4(7myO30nhKwUrdgUVE6S7Ec62z(gl2tYSZybl)scvu9LtWo7T7gjgYypvPqzq9sIzmX1nMyMstrp2RzMyxDVrgcU5RoLP9uYtEzJtnx(PVN51pfRk9QlVaCpb9UkOqYVkPljzcbbwDHjGtqcBc1IDWrkQuuKnKLguUC93vPJfwCAJtClYbnE0KokvGOf7IdkjPMccC0bMLNB(Ix5MgJnr(hnSJHSMnkrR6mhu)s3B0nVZQDz2cNfkqrLWHM52MxIHXjnmRGtJLfF4BSkx50nonw2R2SWS31yYB5yi7fzYKRTslFALyAPvvxLzfXUkQ3S6c6OU9CURxTBLIEQbyPdhacI(t1L2vVAmRx)QmEPaDwJEUk(gyY3VJt8YAfualPL2ckejNG1CFsY26fc2V0RRQ1)b0JqhG1rti6H7srx264U98o6sP6tjQfdGZ0RJlHkkrI(XsrblTdEc5uOhosoMsdNgyQ6UYmdvMU1mjDYAYIzjc4(GDYjlLGV(RNmLqtXrEYKT2KyRnLMRP9UJM23oAAa316Uux)NkAgXlARmrAndjrhl9ORxy2h4UUov1s)wQHEJjZwy2PwP0V5AOpF2hxySzxP03ED0FOMRHxP03wn0BEL7vC4RwF6TJ2m)T8x7wUFQHp1DDOgadaKrs)BL93deC7Tusl(No2TqF4yjOYp)fn)4z4yWwvSHrV5uFvXPEWoyf3Z86w9mHL8ZIjvI9x1S5lN34JpJn2qc9PN(OLYGkVHWQL5fV6JnM72wmhBfS2qMuNDWloYegN7KgtNP4hDTwn(IjHFAqSBQesQA789E)6fr2RAVYbHt94Pbr)LZeTZ28Uf)1lfK9WBYLQq2rXZlroj1l5ZNe)YW3spAsYQiSMhQE6TUmHVHmOEU8ncUvuizoVhSIEQv0KELpNtjG1s)tEsBJl)NzwV8sJwK)lvpzTI2mPox)sToGW557holUJAcRQcgDmMEgdLinadYjHs3pvBD1O1kUnsNFnAfRUaTcryQNZBlNYS3s6TR(gZFAr4LOJUvHveoralt8nTI0k2a73KKTQ6ymX5TosVyhUw4ixmYlZ1M)v(mhCETlYDTZYRtlRZBLfZLBrRS5TYYgqrjlZQY3TEoM)yYQ1sDEwvzOmp3yfo)c2pF1pHumMZm8slC)IZ)HMZ85ln3CfhEmlMzZITkvoia08(zmg)tlC2JzmDPKOn8kbTwi5xv5UgBwqFlS45ngFX8J(WcZE8QLsLRqB1W3LTIdxp1Jx0Oe4x94S1jJBTGXXM04RZMF(jbdfCc0LM7KMJDxZPZw4kxn)DMZNpFnsdA4rqkFD021OsfJhtaGY78K(qJrvtbNeOxrvxbj3uc8t04OOho3ZXUJf1uVIJ7tWlx9UEbBqP3Ar19TqR8n3mGESysdLnCxDoqOWdecqjJikcaKu5cEV90x)7(G9Db4ymSBoYvQ1r(6IhbfI1FFkIOp)zs9I19RzYAK7f)bysJWYcjEnewf8UERrpQcw81XcPg91TAeigCO0up)UXsVl3FsxqelOjWfke(imkEUmG(geni5ZA6kqcfbXts2KJKNEdbtQNqtAtbP9ouaIp2HYQRIcBHq8Nq6GKJsomgchpIMaS3O2gYTnWaNqqvDtrubutGW93zFD2DV7p322qU)4HcaRgrjiLHqEuLKre0Ihqv6DreGJs03bGoVWtuJliQC03W6B9Mbt1sI1lGgynEIGUwCf8bsr)KSUUGkkrm2hcoWbcf6a7ldy9rIVUKOw8J)lsTXg)vHtHrrLi2I1(DalvGrKIsjlqNq3un3ykftdUtsrdRfhJuJRKqmDevusWYgSnF(9Tv8Frxvtkw6a91ZUdLrtjQLn)N1)gCljM6fGYhnU8FVf2gCSyhokHTRljMna)FU9ujBBBD1)bZgddUTdOrw7w7pW(M37MaIymImqxb7PN9BzTEtM163(mrIQihtAqyLqjHc(vwl8K12mz9UYYiOl6WRznRzTzakeLywZSsYSPk0Z1feKLyn7i3VA35(nbKvKrFlsqLOsi5b1I)Spre2jIGb9gpXQicVuhLGdrhZfjqsbjzG2CrYf9zZjMdLlg08xxnK1RgCZ(2MV2x)r(hVX)(</span><br></pre></td></tr></table></figure>              </div>            </details></li></ul><h2 id="-1"><a href="#-1" class="headerlink" title=""></a><span class='p green'>效果图:</span></h2><p><img src="/img/article/20230810/6.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 魔兽世界 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 魔兽 </tag>
            
            <tag> WLK </tag>
            
            <tag> WA字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WLK实用宏命令</title>
      <link href="/posts/993b8c1a/"/>
      <url>/posts/993b8c1a/</url>
      
        <content type="html"><![CDATA[<h2 id="随机召唤坐骑宏"><a href="#随机召唤坐骑宏" class="headerlink" title="随机召唤坐骑宏"></a>随机召唤坐骑宏</h2><ul><li>创建宏命令名字必须叫”随机坐骑”,粘贴下面文字即可.(“乌鸦之神”,”大型美酒节科多兽”)替换成你自己的坐骑名字<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#showtooltips</span></span><br><span class="line">/run <span class="built_in">local</span> t=&#123;<span class="string">&quot;乌鸦之神&quot;</span>,<span class="string">&quot;大型美酒节科多兽&quot;</span>&#125;;<span class="built_in">local</span> z=<span class="string">&quot;随机坐骑&quot;</span>EditMacro(z,nil,nil,GetMacroBody(z):gsub(<span class="string">&quot;e&quot;</span>..<span class="string">&quot; .+&quot;</span>,<span class="string">&quot;e&quot;</span>..<span class="string">&quot; &quot;</span>..t[random(<span class="comment">#t)],1))</span></span><br><span class="line">/use 乌鸦之神</span><br></pre></td></tr></table></figure></li></ul><h2 id="随机召唤坐骑能飞行地图召唤飞行坐骑不能则召唤地面坐骑"><a href="#随机召唤坐骑能飞行地图召唤飞行坐骑不能则召唤地面坐骑" class="headerlink" title="随机召唤坐骑能飞行地图召唤飞行坐骑不能则召唤地面坐骑"></a>随机召唤坐骑能飞行地图召唤飞行坐骑不能则召唤地面坐骑</h2><ul><li>注意名字替换成自己的坐骑名字<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#showtooltip</span></span><br><span class="line">/castrandom [flyble]你的飞行坐骑1,你的飞行坐骑2</span><br><span class="line">/castrandom [noflyable]你的地面坐骑1,你的地面坐骑2</span><br></pre></td></tr></table></figure></li></ul><h2 id="单人进团本宏"><a href="#单人进团本宏" class="headerlink" title="单人进团本宏"></a>单人进团本宏</h2><ul><li>邀请后面 随便个名字就行<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/click [@party1.noexists]PlayerFrameRightButton</span><br><span class="line">/run ConvertToRaid()</span><br><span class="line">/stopmacro [group]</span><br><span class="line">/邀请 许愿必出坐骑</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 魔兽世界 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 魔兽 </tag>
            
            <tag> WLK </tag>
            
            <tag> 宏命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>千奇百怪的漫长旅行</title>
      <link href="/posts/f9652d8f/"/>
      <url>/posts/f9652d8f/</url>
      
        <content type="html"><![CDATA[<h2 id="WLK怀旧服P1愿望清单"><a href="#WLK怀旧服P1愿望清单" class="headerlink" title="WLK怀旧服P1愿望清单"></a>WLK怀旧服P1愿望清单</h2><ul><li><strong>稀有坐骑</strong><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>红色始祖幼龙缰绳(5人英雄本成就龙)</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>被感染的始祖幼龙缰绳(10人P1团本成就龙)</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>黑色始祖幼龙缰绳(25人P1团本成就龙)</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>绿色始祖幼龙缰绳</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>碧蓝幼龙的缰绳</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>蓝色始祖幼龙缰绳</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>白色北极熊的缰绳</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>黑色幼龙的缰绳</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>暮光幼龙的缰绳</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>迷失的始祖幼龙缰绳</p>            </div></li></ul><h2 id="TBC怀旧服愿望清单"><a href="#TBC怀旧服愿望清单" class="headerlink" title="TBC怀旧服愿望清单"></a>TBC怀旧服愿望清单</h2><ul><li><strong>传说武器</strong><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>埃提耶什</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>堕落的灰烬使者</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>祈福</p>            </div></li><li><strong>稀有坐骑</strong><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>瑞文戴尔的死亡战马</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>大型美酒节科多兽</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>美酒节赛羊</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>迅捷美酒节赛羊</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>无头骑士的缰绳</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>乌鸦之神的缰绳</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>迅捷幽灵虎的缰绳</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>拉扎什迅猛龙</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>红色其拉共鸣水晶</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>炽热战马的缰绳</p>            </div> <div class='checkbox red'><input type="checkbox" />            <p>迅捷祖利安猛虎</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>奥的灰烬</p>            </div></li></ul><h2 id="千奇百怪的漫长旅行-PS：多图警告！"><a href="#千奇百怪的漫长旅行-PS：多图警告！" class="headerlink" title="千奇百怪的漫长旅行 PS：多图警告！"></a>千奇百怪的漫长旅行 PS：多图警告！</h2><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>绿色始祖幼龙 第5颗蛋开次出(2022.12.25)</strong></span></p></div><p><img src="/img/article/20230810S/29.jpg"><br><img src="/img/article/20230810S/30.jpg"></p><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>ZG龙终于出了(2022.12.12)</strong></span></p></div><p><img src="/img/article/20230810S/27.jpg"><br><img src="/img/article/20230810S/28.jpg"></p><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>红色其拉共鸣水晶 单刷2组门口小怪出的(2022.12.4)</strong></span></p></div><p><img src="/img/article/20230810S/26.jpg"></p><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>蓝色始祖幼龙 41次出(2022.11.25)</strong></span></p></div><p><img src="/img/article/20230810S/24.jpg"><br><img src="/img/article/20230810S/25.jpg"></p><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>黑色始祖幼龙(2022.11.17)完成</strong></span></p></div><p><img src="/img/article/20230810S/22.jpg"><br><img src="/img/article/20230810S/23.jpg"></p><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>给小号MS做了个祈福(2022.11.13)</strong></span></p></div><p><img src="/img/article/20230810S/21.jpg"></p><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>5人成就龙(2022.11.8)完成</strong></span></p></div><p><img src="/img/article/20230810S/19.jpg"><br><img src="/img/article/20230810S/20.jpg"></p><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>被感染的始祖幼龙(2022.10.28)完成</strong></span></p></div><p><img src="/img/article/20230810S/17.jpg"><br><img src="/img/article/20230810S/18.jpg"></p><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>黑色幼龙1900 暮光幼龙5000 黑曜石3+1必出的坐骑也不算稀有截个图留念下</strong></span></p></div><p><img src="/img/article/20230810S/15.jpg"><br><img src="/img/article/20230810S/16.jpg"></p><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>10人出碧蓝幼龙了 1.25W拿下(2022.10.23)</strong></span></p></div><p><img src="/img/article/20230810S/13.jpg"><br><img src="/img/article/20230810S/14.jpg"></p><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>2次日常宝袋开出白色北极熊 算是天选之子了~~(2022.10.19)</strong></span></p></div><p><img src="/img/article/20230810S/12.jpg"></p><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>6次刷出DK马(2022.07.20)</strong></span></p></div><p><img src="/img/article/20230810S/11.jpg"></p><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>🍖杖 终于做出来了 太难了!!!(2022.02.14-03.23)</strong></span></p></div><p><img src="/img/article/20230810S/8.jpg"><br><img src="/img/article/20230810S/9.jpg"><br><img src="/img/article/20230810S/10.jpg"></p><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>灰烬使者 终于来了12个CD 感谢好兄弟帮我圆梦@Annjing(2022.03.15)</strong></span></p></div><p><img src="/img/article/20230810S/7.jpg"></p><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>40+次 刷出乌鸦之神(2022.02.28)</strong></span></p></div><p><img src="/img/article/20230810S/6.jpg"></p><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>过年了 1688幽灵虎!磕~ 新年快乐 虎年大吉!(2022.01.31)</strong></span></p></div><p><img src="/img/article/20230810S/4.jpg"><br><img src="/img/article/20230810S/5.jpg"></p><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>出凤凰了 太贵没买o(╯□╰)o(2022.01.21)</strong></span></p></div><p><img src="/img/article/20230810S/3.jpg"></p><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>爆肝66次刷出无头骑士的缰绳(2021.10.23)</strong></span></p></div><p><img src="/img/article/20230810S/2.jpg"></p><div class="note blue anzhiyufont anzhiyu-icon-fan simple"><p><span class='p blue'><strong>ROLL100点秒杀迅捷美酒节赛羊(2021.10.02)</strong></span></p></div><p><img src="/img/article/20230810S/1.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 魔兽世界 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 魔兽 </tag>
            
            <tag> 千奇百怪的漫长旅行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>魔兽登录报已从服务器断开(WOW51900319)</title>
      <link href="/posts/6edb5512/"/>
      <url>/posts/6edb5512/</url>
      
        <content type="html"><![CDATA[<h2 id="登陆客户端报服务器断开-WOW51900319"><a href="#登陆客户端报服务器断开-WOW51900319" class="headerlink" title="登陆客户端报服务器断开(WOW51900319)"></a>登陆客户端报服务器断开(WOW51900319)</h2><span class='p red'>如图所示:</span><p><img src="/img/article/20230810/4.jpg"></p><span class='p green'>解决方法:</span><p>在运行里输入cmd，打开命令提示符窗口(这里 要右键以管理员身份运行)<br>然后键入netsh winsock reset，回车，重启电脑。</p>]]></content>
      
      
      <categories>
          
          <category> 魔兽世界 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 魔兽 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>猎人实用宏命令</title>
      <link href="/posts/5205e42b/"/>
      <url>/posts/5205e42b/</url>
      
        <content type="html"><![CDATA[<h2 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h2><p><img src="/img/article/20230810/3.jpg"></p><ul><li>起手宏<br>起手一发自动射击接稳固同时宝宝自动攻击目标,配合 1:1 稳固宏</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#showtooltip 自动射击</span></span><br><span class="line">/stopcasting</span><br><span class="line">/cast !自动射击</span><br><span class="line">/cast [@pettarget,exists]杀戮命令</span><br><span class="line">/cast 稳固射击</span><br><span class="line">/petattack</span><br></pre></td></tr></table></figure><ul><li>1:1 完美稳固宏<br>完美不抖弓,需要用黑科技雪球回蓝的在最后一句加上 &#x2F;cast 雪球</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#showtooltip 稳固射击</span></span><br><span class="line">/changeactionbar [noexists][dead][noharm][nocombat]1</span><br><span class="line">/stopmacro [noexists][dead][noharm][nocombat]</span><br><span class="line">/cast [@pettarget,exists]杀戮命令</span><br><span class="line">/cast 稳固射击</span><br></pre></td></tr></table></figure><ul><li>收宝宝宏<br>正常收 BB 和战斗中蒸汽坦克秒收 BB 宏</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/petpassive</span><br><span class="line">/petfollow</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#showtooltip 召唤宠物</span></span><br><span class="line">/cast [nopet,@pet,nodead]召唤宠物</span><br><span class="line">/petattack [pet:你的宠物名字][harm,exists]</span><br><span class="line">/stopmacro [nopet][@pet,dead]</span><br><span class="line">/use [pet:你的宠物名字]蒸汽车控制器</span><br><span class="line">/cancelaura 蒸汽坦克控制器</span><br><span class="line">/stopmacro [nopet:蒸汽坦克]</span><br><span class="line">/run PetDismiss()</span><br></pre></td></tr></table></figure><ul><li>治疗宠物宏<br>组合绑定宏召唤宠物&gt;复活宠物&gt;治疗宠物&gt;解散宠物</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#showtooltip 治疗宠物</span></span><br><span class="line">/castsequence [@pet,dead,nomod] 复活宠物; [btn:2,pet,nomod] 解散野兽;[nopet,nomod]reset=2 召唤宠物,复活宠物;[nomod]reset=2 治疗宠物(等级 8), 解散野兽</span><br></pre></td></tr></table></figure><ul><li>误导宏</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#showtooltip 误导</span></span><br><span class="line">/cast [target=focus,<span class="built_in">help</span>][<span class="built_in">help</span>][target=targettarget,<span class="built_in">help</span>][target=pet]误导</span><br><span class="line">/script <span class="built_in">local</span> u,t=UnitName,<span class="string">&quot;focus&quot;</span>;t=u(t);<span class="keyword">if</span> not t <span class="keyword">then</span> t=u(<span class="string">&quot;targettarget&quot;</span>);end;<span class="keyword">if</span> t <span class="keyword">then</span> SendChatMessage(<span class="string">&quot;我已误导 &quot;</span>..t,<span class="string">&quot;yell&quot;</span>);end</span><br></pre></td></tr></table></figure><ul><li>爆发宏</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#showtooltip 狂野怒火</span></span><br><span class="line">/cast 狂野怒火</span><br><span class="line">/cast 急速射击</span><br><span class="line">/cast 狂暴(种族特长)</span><br><span class="line">/use 13</span><br><span class="line">/use 14</span><br></pre></td></tr></table></figure><ul><li>王子救人宏</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#showtooltip 逃脱(等级 1)</span></span><br><span class="line">/targetenemyplayer</span><br><span class="line">/castsequence reset=alt/5 逃脱(等级 1),摔绊(等级 1),摔绊(等级 1)</span><br></pre></td></tr></table></figure><ul><li>风暴王子七武器宏<br>鼠标右键穿戴自己的装备,左键穿七武器</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/equipslot [button:1] 18 灵弦长弓</span><br><span class="line">/equip [button:1] 虚空尖刺</span><br><span class="line">/equipslot [button:1] 16 无尽之刃</span><br><span class="line">/equipslot [button:1] 17 迁跃切割者</span><br><span class="line">/use 18</span><br><span class="line">/use 一捆虚空尖刺</span><br><span class="line">/equip [button:2] 监护者之箭</span><br><span class="line">/equipslot [button:2]16 你的武器名字</span><br><span class="line">/equipslot [button:2]18 你的远程武器名字</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 魔兽世界 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 魔兽 </tag>
            
            <tag> TBC </tag>
            
            <tag> 宏命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>奥法个人配置WA</title>
      <link href="/posts/3a65933b/"/>
      <url>/posts/3a65933b/</url>
      
        <content type="html"><![CDATA[<h2 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h2><p><img src="/img/article/20230810/1.jpg"></p><ol><li>🌈 彩虹施法条:</li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!WA:2!1z1ZVTrXx8SyOfz1uLAudQq5lTrkrIlP5hLuOQTrEtTBCXX2D9MMMsLShV7yVdD9UJMDwx7i99ludh6zlv4ehWafqQNmNr8vrcopkc4pGiuVHqk)fWBMDtStjDKIZBEZ8EZ7NFERw2untzNY(rZ1pGIy3FdIn3z8Tv0fRxpaZVJ2oOqUJpRiLt89csY6eDWjE9bipl4Gs(epETvYuWmJXokjn85i5L)SjPN6qmwZ3gxBT0fwpD(9QHSUFdMFON9k(U(SBQPPLOlNrA0aZco5mSyYFvN3HI1d9iCwOhUf2JRdgK)UHb4kOAb(SAsTw1i6OvqbCdputCqYDdcRPywoSEDs7bvwjDzZkLntBy2nGIDDZzpYLkXWWLmkxkt(8DL6w(Iv7AhYuwEQ5fNSg1f1bZ6d(aOrtWSyRMjFPSRNVxOxS5MKEkKfN0cBgTxABpDS(elFVkwk)mbS2dIyyMhY92GVcA)d7fGDRRcKIJnqfYwJWy(SQWJfG4sJa7mAAztT(GLBGBiZj3DsX4dqWLQHyvG)AjgVhCAnFMnMTt0)QeLSwaoEFo(knPTD8wRdsd7gZPfjGuZfxDq8ESn4rZFUsK2y395fq2c)kp6nPNNJBZRO(PUpRjcORWjnXvOmSfr6Kj6DWvmMMEHP50jumcCq2(pyyrWUrC3pGONEDZI0xtXuM4bvtSu1P6PHT7f9KGjzRy(q6)5fzjr7G6zvKyZIXUV6MFuyaNuVJ4y9zYAvSjWuVqXczON5iuxeHHuR20uJ4f3jsPjeJZGeG8a678VKNgzo2DG6uIvfUddh447A3PV6wr5Hvx(VEl1kXQl)3VTAfhaR77bHUSmYwN7wHiBO0aDotZyVk2a0oKvf7QNDSJilrF(S0oQtFaKD3GHOD3iMikmTFfrCQBeaGb5kuiJrfJC3yvZJiMrJjeP35aNq1bvCDZ85kKzi3Yqb10hruJ)IIAhrcNEOe(JoTqpHyXPM2t8UQkmXsIljEpX7lU8dfxrtCvXXextSSyCXkXHTdflF6yImQUwrwXne5o7yIpqKxSwvrHTJ85iOVJWP9Ij0989WIYtlwvtClHXJsTaIsCynbSb3kT1gereWRegCl6PKnXrC2pAdD3Y2zuKeBhDyDIloNnB(5MBPLMBP(rmPiUd98k0TGlGywipm1)bY2uzrDflhCaF2Mlm8f5D0ITJoJyhS2)5eDzXG2JYFRr2WBRT3qBf5sDqLsm3SleRVrVkBuLZ3sB3HYz5sOvR5GjnC4RP76JSR3tc)kH6zo14ixaCEsJMHUCss2wqGeGTFjdlxuqWKcwsDWzTIiGchjXUkysDqoBj67cPV(1PtaQmTTSjhBJTxd12PgGixN0iPUeAUApKhPPYBxYacvmEwOAyZTXOaCzod71G7C8D2Fwqf5ejwage0oOR8oYkzXM6nrepLGI)3XfFS4tepuSzT6epsGZZZ(5TiINtFMcnx1vedMZAVFNBxy3khm)ONAEsaXgRNptwt9T89BQTqiXEWnANnCjoP0fxVv0CKvvrwFMSUmKH1NB(5M3qLSsenpXm6a6LYjNjvhzHVxABByQY92aJUFAWqcUxjznKICnSnbDViUYFV0fnuAPAFUVvROPzVAPtpfXU3Z(8F6z)4JF2x(vgpqcm)YNzqDgmygINaIvI9I6XYkzjD5ALxXitMcXgnX2g7zuiZTZye9Hjd9DgXt(oyh1q1Y(Hml8zhBGpJafkQ8t)vlAK7UflyMoFFzoIO(WLlpJbu(BD)SItKykF6ux5QDBHyee0GTlUnLeLBnbCdJwi3qCQ5zwoiVg4G3ygXtUPgGd)7Q1FKOlL5djjOmycOVC2fNDiU9mIVw(aIVr8TINKAE4HsDnX3P0Gei)NLR))QllkPwjeFV4hgrKOR)KulouKF5XY1xapUI4Xkrgq8Iqwalojt(bhGdUK4)cvZWxTKu8PjtfyS4SxC2fs163UZ)a</span><br></pre></td></tr></table></figure><ol start="2"><li>奥冲层数提醒:</li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!WA:2!1zvZVTrru8ymrawcARbfrt5JqknIuqwnj00qjTbVP2nj4ABwVLeArYE2Dh7DAwV7Wm76yNlO6dqp7ZCYs9gsi5RCbLJC6Pie)beP2lies5kCG3S2ojT1zKs2zEZ7R537lhlBY6jTtA)Ol2Lz57vYpuyrFNX0T8D9fBehxIwfQwvsdw732CRLhdx9iEwo(II(mVaZvZK3iJ((w((U2(74vAhgNwzVHhZyxJ6iiwbmFp5I6YaIiiHzvMht6Kqd)eKODGGvRgviFJzed2(0Ush)Dw113JkROf0It1jHcY8hGYBTTSaNkib(IKlVNISKtDDz2Yj1xyXRSW8c0Sf8CBvrN2GIo4AuIBGJwiAltUlPfvCGm0m6UsHvRYA2R8QPlzuUKrADJ2rkBDBzcDpsDQmXr8wuqrE1lvmtUChgkPzAIVQs95UshKqPiFZPRn1evRb60I1sRFNS3nxNqVbpSe8ZPWIguJ(NVJVn9Nh7qehPcpI7xJOacu3)WTPuEA0vSc0ji050H4XQR25Ti8Az3JsuMtq9Qf48kWz08qGAFBekuCuwHxcjfdM2Y2kwv(cmRwDcZll8rOaWSWLHpg(e8BINNc6)ssGsxuNU4JxNwtf7U(JEBEYaAZGYshcgz3QForm(5Jig9VQ(c0jllhSbMTZr3n9L48ZEcXxnk7kwSyXpOpvQB1O8jT031Oa)nJiscd8vVARnz2yemnE8W(gI1KAhr8H73px8Bg4o7fD)dcLbSQTGX7k8dWhIbsulFH8zGZiWNKINUrmECsENbVaVa(zZky7o1xfsSrqGmLHrFL2GjzMU0kpdmm0UdCJHOY(rSSJVWEtbH3EZbB2)iJeLEu4Ug5wpFMbaZjkQGX5V3laR8YbS60bNgfUZhSrxXN9X2QeBx655ZEAk0UfMPZSkh4iOyzNRDl(hCA8YfulMkfn(JUiKpomh8LW8tFjj)cJqIAw2LTiYahyHOinS0dHphwM)HJGxBuV1jUNWa8jpfvI)vbU5gRTYF9VQ1)fFTv(73nAfFKOwKB4q88OUoGwm4wqgiDf(uNcRomBA5DPcFNrOn5ZedGCVpSAmydee(uyCyr4AWNfdUoU9mWnGvGVyqQYZKIMBSrekKNsOigCLyJaVKLnz1k7fw3KkgqJFU0MMcAdgMUNp6cjSwhmdlJEzJcfH1JnsC)f0dS1iI(YNp6d3PfKfU9FUFnx)DYkOFxi1ZQvXx(kPM)Q9RXuxSh2v82Udk2DARiPY71lILVUDvhZf1cR44ZnxQLUApfLHfuDQnuWnWa8)89rR1w53NuTUqCn11orsS1jLOKfXLgpYTmCywBJdqKJhDtogU)CrwvdlhPchthkRMtW91C9j2zndqj9cMqVEOBalHMQ77eq9e6wUePuTttIfsQnDfr9evVfn1mtquPhZRpwH0t0v16LfnY76ZOB5qT2ol86XB3GiyeSfYb0MCw)M1giUQ3G4gstU00(8KlluPQ1OYlprBUWhBsGDZplINPMl1XDSMaAwzgiuPuObSd0C(5sD1iXHwtodEjSlK6igm7p1eAMCbKNPV5nGwxUptQ(7PwiLctqcas5GJPOEE83A4GCvl0BXKk332rBxF)6X6CutBSrBGVvJ(tVE1ItmnZ(GN84h)0F6xEYp07j)4Vo18ZhYS7D77LBZ7T4dwQkBDDIl3He)W(Lgzf4SwL9mlTQEMm5fnh(loQ(Txu9lomreTkRwcbZtzfQZ(4SbuWc8iuoH(oQHb3VNntQgXVoY(l1EOR70RQs)4atSDE8Ks9fsDTuZLSXFS1))</span><br></pre></td></tr></table></figure><ol start="3"><li>吃药宝石提醒:</li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!WA:2!nF1)ZTXrv8OicuUwaB3epnTHwvpuh7qISSSJttNPDgFos2IXXw5KSDOza59UBLU1(0Dx2BplBZa06gkHV2GZmafiuqKslmLoG6VXp1X)a)8B8WK)aYmL2Fo)ed)eV9ojBl)f6qGzAKTpT3UV3B33BFV3Npo2SD5RnuYZLmDxv7YSlZRpKAfUBnnTCJprX7Q7YnPCvIXIMCxpVouTzRUkHBMOORRTG5XxE6YL9PIjE)Ad8uV)Ho0HwhvoWlNHRJ(Gdn85gj9Av4mZIR4r7r7cnIm3yU2U8VsSyXIR57rmOhjDa327jSecp)NBGbQrQ4MK5oWIPNCWlnY4Nz5bgKtmemxh)r08feUqrVmZH5BPOIFjuwtWzvQq5(pEV8MdF16Mu9GYLLBmFImtMp7mtQkWx0ibCs6189O225m9vURFGoDjQJOaknB5gLgB0cflvO4OAf1CivP(kQb4EO7ztwHY1cfvFckXwyTLQ55uuvTc5Zm5KRh408iO0WW1oOQtbPlg)EmhbL7qSNfpNORCL1joSQePxnc8fYUbL4tli4uNkcRpd0TQJRdDtt8SkLOK8KZ9Pyu10FnPOs)coPAvcZjl0lQaCsOpOF4u43DS7z0i2Sko6JLzQIz04yeuE8IXxk6KeVo6hA0kY4RIQTlXCwDbXg9RU1QgGxYkQ(SvPDddPOzyt89LJuXaOHCaFv8GIbYdVg3veEyJTPEZ0LO754XJNpEQKNDDFQD58UyCqDYmzlYJ8FQLoNyYc8V2JO5BGBBCVoc8PJ6yy5YZt5ZGbFl9O8gR6rFNXSc1RZcxnGWPjYgyBNyolMGwNh6eYqZgMRGxEmJWKXMAvaDIJO67YfyeXMvLjE4M5J5CWm446y0TmRIY6eUXKH3dxR77IZHXlhrwmb0LRRn6fYntH1LP0ZXmfwp8grwiQi4ZQ7tRIrvTbtMkzQ6cxJMH4hkF39Wm34dUXR8r38w)Jx7gF4T)Ry4QwuMrJYCmpdV7jcs87rcD8SYPKoIEHX0YKzQnjbcC6P9cRcushWmBSYyfRPor2PDxOmFLwvHZ)pFZxcRcBezMWOnCM6LXy0ymUHnD(6YCiwKzAWCk7YJscvwdJ6tkJkwDzCQR3BDgkyb3aUb9ehcEXyWvGZSPbw0B6wZPqnMhDE4rGpNQuS5HUMQx4rVd0TUrGVWTkCC4XHNqbEs4PGtaFXgrZgMfRJHtrGFuHJVxNZmvUILYp9Cz0knt(lmAXmWJPupsEzteVtvoWjS2VV(vsGF4ura3jHSkUe1zPKY9xH6yQOGzNwuJfXn1y5dpYUuZ2fZTsuL4qYYDRErYYjEE8nHvYQKL7BWtNqMML3TgLJl1xprf790F)joZ2sLAhsTdr2H5PvPCIT5yUypa0(Jtf5e0QHV2x60PgE4DkShXX3IEaspuQZLo1oLwMhguLEr0bqztp8iPcxKvorF7YqpFIb7pHWI6ekG8t76IM(SHljdAnTXoJlVqBYtCm3LBH2VDZhDalD6eJDHImu0tNO0oDNOmMD6)To4nLxAYu76il)02vmAreob)Tnr23KHwlI(xZrrURTpvzxkwM0AszWa)dsapnCu4yqpDdgENCRKOWS1tNmzY2scf8aQuRgMm)fcfDjAAIZkEDschxmci4IUM035qWx6k3Brk1BuzNtHMSOZcEoS40K6JveCzRqyG4qQtD9t490c6YIsHpIQqlH)GbRsECQblSRT3X3Jm(nhaNC9TwRNNXFFK0R5anPrnVB4sB3EE0zkoT3Jgoj23Xv2GWiSDN6O4R3lYqSLPr9aFzVN8GoTrVfBZOUrF1OMuX2iuYfWACw5vWaqiWbTioP6utpvM9542AaS0(SxETTxq3CeotUEZD9Yn316H6y0csk(6nTHJWRJSC2QjUuaXu2dorXIEDefrSiyU72Sv86Aht3U3SeEPOJTx3m8TAiOWCCI3AZ1CWMBTzHesMEMItMd90OTzh9Q96m3utHTcvNUyXPVyifS220woZ(KG4T7eKT3tjY3X96)GuPjwzjHfN6BH1RRSpYkoizVZMvSDRLLtVAa1XyL8FQujtF2OBb5cnKpADSxt(ImcSPEGq46mnIpI9rRlNocY9yHY3k2UU8LTyreFdeIA8wZyfUyHqkdHhHIwmJfDO((XvLVoF46tYWz6mCduJ4qOBrzvSeJddU06O9kfsPzEyyjzgiT8z9WPDRQteZdNTxDFMtfBQ6fhD8mWqDdV98WiHcFUddJb6WZi5VTBoyF5pEwzR1cn1c(AkWNhTIc0Hc0Pc8PJb5uGzGzvx11TAmyAipCPioeRJCi(G39wF4B8EiPoplsCOyCTAYYWX9oAldklLUaZNGjKMwWLBSqUzZzU64JigEboZrYjHAPTDLWgT0tYRYs2mtcU1Icp(l81vG5uUEVW8BrfaiHW)GEtS))g6zgHW(nX8LW)glFK)1Ne4W(bEsd4qoaK4NDO0TbB7ubZsOyOPYbQ0qdL68d1UsuELvuDfcmiV)QK(8PABFibibfhc7G3K0NF4NTnuFuCog8(pPrQMhRTFSha9HsLkvis(UcmVqIu3Fq5BfaV)HYX)ZW)RGY3cd)G9U99E8(0h3X99dy(4Es7UF9WTtpFGYd3BvY9Vd2QA6bkhCVf1)pCd(jxo6hpx6YqfWeOWciMGKx9JPSf1AWgQcoGBiTyWlKimC1w8Fpk8tIb(isPK9kC9qUxqnyzyfyv4B8YW3mg8Tq5)2WlHOoVc8DcrXGxf(UW3lg8dGFi8JGFm8AWnGBEC4AXGV)83b(PT4La)m4NhdED4xa)YJb)QyWTIu(xBbVrC43eh(TZd17e(DwWTLmeG3SnMbWVxsiaEl4T))jra4pSxgaiqBefa4pUx8)B)wF0nVf8osSF4pno8Usm(ANLWwLzoXSV4IWF2c(lrUvdl49Ghkc)URL(7x(F)d</span><br></pre></td></tr></table></figure><ol start="4"><li>团本购物清单:<br>可根据自己需求修改对应的物品 ID 数量和名称<br>具体操作 在 WA 中点击动作 自定义代码展开修改即可<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!WA:2!LI1A0TXX1zdbNifixhjizMOOeRnmwuI6qdrcw9YjuPe8HivOjzaHSsQooal2Da2vA5URMDbF5Qwly9GYws2bwwwp4jsg1k2U12kfvhjzvz7e10EAtA75w20EYVzfajp5h9CupP)W)X9oZSaGVu)tXbhGzN5o35o35E)MV76lvq5abDI2CODekCWbdQguD8MYjtv6HyM2v7y1mvslQkHgrw5qQulB7neXqFSXKPQsTzzyquC1TmDKydNMALXuLosFPs5qC76N)s393F1)74s0rl3XW)W)9n8EF5EliBQOzr73s30nzBD0BSoIwqSiOgTO71NpF(ZsTgEaBzfI)WzOg2RxZ1125z26whwoTviDRTosYr(ED9S7)pE7BTzQSWg2EuhxzQBGi6M6UbsMc)ZrlqwxQE60eQZJxh1R55J4oQnjICgQ8uozssgIy6oqMuP0hPq82ADGyXhiwRrJfL3FYUiYgUArYG6mPTH8OeAwhBIHr3QobYRssIZlgQnAxD0t)DUVEQOW(PeuHrhO)o6PNOMYdsqXzcpGM1W9zEph(FTIw(qKCzm9SSa2RwM3vmXZpRLkXFbflJmdAk8gpa9zeQPSXZHBjCxFGCoeJuCxjnwF93thDglQSHEAZiSMOx0vM5C8rhsi)YJyyjRo(QOJzzsW9WYOUYgO5gUMOdMXWvpavM5iio1angiPymwZPumKDCIlBQgh3(kSUIuPbEcqynYzpKD1PKxvhvLcQ1rfszzWLYBfBM3oL4WJp7moK48LrJQBYcMSzDhL3Lyb1hJRH8kzCCTgCalQR97KkJjxfBwUbPK1hqc)ONAZYHy(Cj0ELsYBwVKRgXKpm7dL4MHAk5j23PfpP4JtmCive0gTfxuDQYUcHRVYqZrpPKN7CiMQvAhWRJjt6LajIX973F)(Bm02OYM6dk7s0YjAGBKTdpENWAIyIhqtQIXOS(IZIyPoefltvN7rKDid4s5jOlpl7jwii0EKbL1nX5cTdDaDc7z5qxyZvTWEI6OGNaSLFNzrFEp6dQ7QLuKbMiV4)outtSx9ahoJmLi1zgddP9RP7sYtjPrZHTC3tDu0DORWpO8M1a4bK)io45c0EsQSQEgNJ9yrqjgos79T)EZMMQRYMBTrBpCgD1cYhk8bJyEO221b7EkCRH5VMUDIrew0KrBT9U33a5yZy)6QUAR8EILqGL4lPdzqmKoAtHAmu48UwkEX3RO)AQvx1oyP)63O4ThFMB8btFQ3R0TpEXZ8gEqmDBIt3FHuu8Oe9H4PQ)hiWJ6K1fZ6soqBr7OJEJAWCmRmjAyP0thiFk0l0MovXGKys5mU4m6ZMd8eiQdl38lLND6Ol6QGUzklQ4aTg7VkMqArjEY3bdFOdk1I6KGI7zwMUVGkBz8NcDLUg6M4UCFX6P7E7a(IRewoSc7vjc4JrgXDF2yKic7W)dwj8yWFagWea(Y1Lui0YYPAfx0mbSQaWQpBDqW)hmeyDtXsWKngwEuhxAgscAgtoufIe6AbFD4BKTC4wWMGVs(2QSBaPaW6GVg8KWgG1hGfZeNHhM4ESwyuXG9IEUeWta1KT8t(GVjul8Tcuqv35G8m0HiHLnh1oO3wraW1JvADf71xjhU(aEjumdmalpcEQ3)rG6oaSPWi8wKuwMU2RQtQ(ysF)mYQSJpPyXGgwEEe3nkp20ja80Jhe(o1L0brrmii6KUk0ynWXtWryy7zQweg(N9okETRv6Q3D6F8pz6ZE5gM9Y3A2jorXBC(gk(rFCPl9MfVYzBy2x)MLMyCwRsfUyX36CLo)1XhMYavIrClmNugdwdU78mnlW1saF7eCxeBfseLlzTBFxWUzixtYTa0)qXRvguyqCjsaHRdo2grrG)qoElBe(fnhY0AytnOfC4ipBR7Pd2w51saHww(QdV2XYvrPpyMxoxPFYe3)23SyUlu8v)WSmFglXCJt6OjRAn8pqKc5h6lIlgqLDymVy)uz7S73Rb9G4rKEQrHTahma0ggE9CWAsAtj4S4ikxQGJHoE3NLlEswgyP7NJdZWhFkhBDQSbI(ANbbgllYIqI8SOFOWI(6pcKka88WpcIlsJNQnzEgJeZoLchvPm0PFiPFqbubTaW(l0K13BKDow)Y767tyHBSBPzzk2pzXlNV0eVFXtEIIV9jfGaZf6EkwypldvHdWeTt8Ap1cclQkrK8SBdfqqp6JdhQgapQ(cRC8MatWkVoMXpGvgQcbT9VWxkF100Adea(I(yjVtQyzzGQ0CGH1TXSeB4W3RCxmuwTkjWaDKL9OmwjXjMdfImekKulVWrcm)UcXakZG8jA5f43TCGMAEBn10Z3IuZn80p90f(KPZE3sx8oLo(7u81gV4PYkKjC4TfomktyuMzU5XN(oVtXB9xIaK3)JELsf(ip9SJgd3ikZ2BefA2p4Ctx4uvgOz2ceMnW9V7vN9fp60V)pT05pz1Hdp)HN9nF35kr4W7KjbxaXQZGNF5lpZzUEPF2n8KzNn1yZEYGJoZl9X4OvS)Md3423H3Of)KBnZz)Rk(Z82MZxSD1iUq8DWmx8st)E3bDifpZzrTn7jF1zV2hw68x0B52X23wzfo9lDLPpXRoZexBMjegd)hudx)wfN4Dl9bVDX3(y3)t)WsN7JU)hF1I3(0LM4YZ8PxU4PUogCHoWIN6mfVZ5erztFPJv6MJpZl(MfF9J(FD3tF)BFMIV2PN5OyJlHABMt(xmZBD6sx5AZEHJJ7XstC9UBV0T(Bk(Yx9)8fZMCuPErMhwMboc4uf5UeMYqzqRpqeC9CYuD5Kgeh7nio)vSg02G4suLArQ2KyasTI9Wr4W1Ff4RIO3tjMB7EW72FEG5G4YK2WcPeGKzoCRdIC4DrvvjOtC93bQTYG1(8ZzkkzOipe3ktBpe3UXRaAJ94MRTtkHi1kFHK63I9xTnWPkj(D(RTdYue1qJEu4K28819UBPQ9TiYCI52uG5Y(kWC4NjKObPMAOj2Tkck6o5J06EIVV(BV1yDG3Rvq4K4uTkGxl7sexYgvrJOCi0tshX)huLTPHbxgNgK4kRbPqHcvF1f2Z94LRoxh68ZIRod(piPHYtQHQhh6Ms2Y6uNnxEw1lPAnFkMIqwbB1YkyooSkYuXUpGNuppZ2wCNOD8chb1OeHrurI7dW7tx8Ik2O8PVKAAXZ4HPd2vynifFj(I)WGARgF1nYUQ82S(fOM)pdjl7Awuu48Sh(wquAqlsvQlO6iEgd7VfmIn1kngS5W4rIsSjwV6kBAbsnKSrg2WZZuxGmUyPBi(F1ZWfmo72RUWBHrr4KLM)OS6lx4iyzrvdPWsEACbPrlC2p8IAesL2Gj1sS4Zfs6HNe)WC76MQKrwA)UIMSzAUARSQlv2EzYJCsRiVw4BvdqTpW))X8QGMmxViFL(tGJa)PWFg8u(rYQp4qeIDRSYJDJYaC1ktIcUKGFeC5LI1emXdLOuEvIJSld(g5lCuilY4fEPNz8VH9tYOgfN)JOEJ42XD1hK49KVCvgp7gnL2O9w3iYFM33cj6yx)IuLRqvEf6f3vdJS1qMlJoLqdLFZdWwSxdVN5ZOksR4JpqOWkKOo6syYUZZKNuuoMhPqF3JlzzkPRip)vAqyCSI0BF92H96wc1jAeLPvvp15X61NDW5S7l3jSgkw)aBaVHN3CEI88(QY(mN3QH78S2FZh2jasywrNvtQ)5TML3xtwrj8I3TepxMmoCbX(Eiud4T9j8o0MZBoRawJyhrJhT790vSLWiCxKrSyhLPxdKiEfJHvPWgwIyb7hwSWsOx7Y69Fy81c)kFWDcp14xcUlpmd(eyfWNc)C4xCu4V1h8lXN(7G)EmC)xd)tyLE)Z71N)U(U)IvJFw1f9d)lyOo4dMeUa8VcwWVblj53Uo4F0h8VP9Fmjd)bzyC4metLr7)rBmu4TjoizdWQnDpgEb4AzzDX8ZtMmdw0IzFynGyzc5zDlErNprbw7Yho5sxEQ8dC(yLdwIWEqJV6X00voKjc37NpHbyVxfrZEWQ4Dwnx)r4V3bTKAe90AUD9hTZhzzF6N)5FMxvQWXGJlQofoHgCsyC4ub3n8YSQiHxjbC6kLocNjbC2fwMi8QIkdHxRszHWpETJb5Gxho36JWUGkHxrl)0J9y8xxWBLBJ6iqG0gvca9b)oS(Pb0Iy1yVQhEhh2XETLlnHLG1UUdJQPQgVwlSKRlcBHvPBmugxDBn4kIIXgkbwoT1G(MFTBIBALyVraPWyLArLnS1K9hDygmqv3WMGxel7d5TWEdoi62FogBCWVwDWn6ec6Vwl7A3Dlr53x6p7qECFZv5cgQ4gbN9wh87J2pcYyKfVbgll3Du2BInuZHkFWJcS3U(UNBTSpnIHy5dY(0GF4ZSxftYMcvnjhLnb8z5RQarh2bz9eo0CtmZw2FPbVjCHGd9B(b)Vd</span><br></pre></td></tr></table></figure><img src="/img/article/20230810/2.jpg"></li></ol>]]></content>
      
      
      <categories>
          
          <category> 魔兽世界 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 魔兽 </tag>
            
            <tag> TBC </tag>
            
            <tag> WA字符串 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
